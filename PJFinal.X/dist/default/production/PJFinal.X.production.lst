

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 17:30:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	smallconst
    77  000600                     __psmallconst:
    78                           	callstack 0
    79  000600  00                 	db	0
    80  000601                     _valor:
    81                           	callstack 0
    82  000601  3F                 	db	63
    83  000602  06                 	db	6
    84  000603  5B                 	db	91
    85  000604  4F                 	db	79
    86  000605  66                 	db	102
    87  000606  6D                 	db	109
    88  000607  7D                 	db	125
    89  000608  07                 	db	7
    90  000609  7F                 	db	127
    91  00060A  6F                 	db	111
    92  00060B  77                 	db	119
    93  00060C  7C                 	db	124
    94  00060D  39                 	db	57
    95  00060E  5E                 	db	94
    96  00060F  79                 	db	121
    97  000610  71                 	db	113
    98  000611                     __end_of_valor:
    99                           	callstack 0
   100  000611  55                 	db	85
   101  000612  4C                 	db	76
   102  000613  44                 	db	68
   103  000614  52                 	db	82
   104  000615  53                 	db	83
   105  000616  58                 	db	88
   106  000617  41                 	db	65
   107  000618  42                 	db	66
   108  000619  59                 	db	89
   109  00061A  73                 	db	115
   110  00061B                     __end_of_charKey:
   111                           	callstack 0
   112  0000                     _T0CON	set	4053
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR0H	set	4055
   115  0000                     _INTCON	set	4082
   116  0000                     _SPBRG	set	4015
   117  0000                     _SPBRGH	set	4016
   118  0000                     _BAUDCON	set	4024
   119  0000                     _TXSTA	set	4012
   120  0000                     _RCREG	set	4014
   121  0000                     _RCSTA	set	4011
   122  0000                     _TXREG	set	4013
   123  0000                     _PIR1	set	3998
   124  0000                     _T2CON	set	4042
   125  0000                     _CCP2CON	set	4026
   126  0000                     _CCPR2L	set	4027
   127  0000                     _PR2	set	4043
   128  0000                     _TRISE	set	3990
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISC	set	3988
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISA	set	3986
   133  0000                     _PORTE	set	3972
   134  0000                     _PORTD	set	3971
   135  0000                     _PORTC	set	3970
   136  0000                     _PORTB	set	3969
   137  0000                     _PORTA	set	3968
   138  0000                     _ADRESL	set	4035
   139  0000                     _ADRESH	set	4036
   140  0000                     _ADCON2	set	4032
   141  0000                     _ADCON1	set	4033
   142  0000                     _ADCON0	set	4034
   143  00061B  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  001DEE                     __pcinit:
   149                           	callstack 0
   150  001DEE                     start_initialization:
   151                           	callstack 0
   152  001DEE                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (13 bytes)
   156  001DEE  EE00  F03D         	lfsr	0,__pbssCOMRAM
   157  001DF2  0E0D               	movlw	13
   158  001DF4                     clear_0:
   159  001DF4  6AEE               	clrf	postinc0,c
   160  001DF6  06E8               	decf	wreg,f,c
   161  001DF8  E1FD               	bnz	clear_0
   162  001DFA                     end_of_initialization:
   163                           	callstack 0
   164  001DFA                     __end_of__initialization:
   165                           	callstack 0
   166  001DFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167  001DFC  6EF8               	movwf	tblptru,c
   168  001DFE  0100               	movlb	0
   169  001E00  EF0E  F003         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172  00003D                     __pbssCOMRAM:
   173                           	callstack 0
   174  00003D                     kpDebounce@oldRead:
   175                           	callstack 0
   176  00003D                     	ds	2
   177  00003F                     kpDebounce@newRead:
   178                           	callstack 0
   179  00003F                     	ds	2
   180  000041                     _keys:
   181                           	callstack 0
   182  000041                     	ds	2
   183  000043                     _v3:
   184                           	callstack 0
   185  000043                     	ds	1
   186  000044                     _v2:
   187                           	callstack 0
   188  000044                     	ds	1
   189  000045                     _v1:
   190                           	callstack 0
   191  000045                     	ds	1
   192  000046                     _v0:
   193                           	callstack 0
   194  000046                     	ds	1
   195  000047                     _display:
   196                           	callstack 0
   197  000047                     	ds	1
   198  000048                     kpDebounce@tempo:
   199                           	callstack 0
   200  000048                     	ds	1
   201  000049                     _started:
   202                           	callstack 0
   203  000049                     	ds	1
   204                           
   205                           	psect	cstackCOMRAM
   206  000001                     __pcstackCOMRAM:
   207                           	callstack 0
   208  000001                     ?_digitalRead:
   209                           	callstack 0
   210  000001                     ?_kpRead:
   211                           	callstack 0
   212  000001                     ?___lldiv:
   213                           	callstack 0
   214  000001                     digitalWrite@pin:
   215                           	callstack 0
   216  000001                     digitalRead@pin:
   217                           	callstack 0
   218  000001                     pinMode@pin:
   219                           	callstack 0
   220  000001                     delayMicro@a:
   221                           	callstack 0
   222  000001                     delayMili@a:
   223                           	callstack 0
   224  000001                     ___lldiv@dividend:
   225                           	callstack 0
   226                           
   227                           ; 4 bytes @ 0x0
   228  000001                     	ds	2
   229  000003                     ??_digitalRead:
   230  000003                     ??_delayMili:
   231  000003                     digitalWrite@value:
   232                           	callstack 0
   233  000003                     pinMode@type:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x2
   237  000003                     	ds	1
   238  000004                     delayMili@i:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x3
   242  000004                     	ds	1
   243  000005                     ??_pinMode:
   244  000005                     ??_digitalWrite:
   245  000005                     ___lldiv@divisor:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0x4
   249  000005                     	ds	2
   250  000007                     rgbColor@led:
   251                           	callstack 0
   252  000007                     soWrite@value:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256  000007                     	ds	2
   257  000009                     soWrite@i:
   258                           	callstack 0
   259  000009                     ___lldiv@quotient:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0x8
   263  000009                     	ds	1
   264  00000A                     ??_kpDebounce:
   265  00000A                     ??_ssdUpdate:
   266  00000A                     pushNibble@rs:
   267                           	callstack 0
   268  00000A                     pushByte@rs:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x9
   272  00000A                     	ds	2
   273  00000C                     ??_pushByte:
   274  00000C                     pushNibble@value:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xB
   278  00000C                     	ds	1
   279  00000D                     pushByte@value:
   280                           	callstack 0
   281  00000D                     ___lldiv@counter:
   282                           	callstack 0
   283  00000D                     kpDebounce@i:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0xC
   287  00000D                     	ds	1
   288  00000E                     ?___llmod:
   289                           	callstack 0
   290  00000E                     lcdCommand@value:
   291                           	callstack 0
   292  00000E                     lcdChar@value:
   293                           	callstack 0
   294  00000E                     ___llmod@dividend:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0xD
   298  00000E                     	ds	1
   299  00000F                     lcdPosition@line:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xE
   303  00000F                     	ds	2
   304  000011                     lcdPosition@col:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x10
   308  000011                     	ds	1
   309  000012                     ___llmod@divisor:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0x11
   313  000012                     	ds	1
   314  000013                     
   315                           ; 1 bytes @ 0x12
   316  000013                     	ds	3
   317  000016                     ___llmod@counter:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x15
   321  000016                     	ds	1
   322  000017                     ssdDigit@pos:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x16
   326  000017                     	ds	1
   327  000018                     ssdDigit@val:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x17
   331  000018                     	ds	1
   332  000019                     ??_main:
   333                           
   334                           ; 1 bytes @ 0x18
   335  000019                     	ds	4
   336  00001D                     _main$1346:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x1C
   340  00001D                     	ds	4
   341  000021                     _main$1347:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0x20
   345  000021                     	ds	4
   346  000025                     main@op:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x24
   350  000025                     	ds	1
   351  000026                     main@i:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x25
   355  000026                     	ds	4
   356  00002A                     main@nled:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x29
   360  00002A                     	ds	4
   361  00002E                     main@parado:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x2D
   365  00002E                     	ds	1
   366  00002F                     main@n:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x2E
   370  00002F                     	ds	4
   371  000033                     main@tecla:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x32
   375  000033                     	ds	2
   376  000035                     main@cont2:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x34
   380  000035                     	ds	4
   381  000039                     main@cont:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x38
   385  000039                     	ds	4
   386                           
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 11 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  cont            4   56[COMRAM] unsigned long 
   397 ;;  cont2           4   52[COMRAM] unsigned long 
   398 ;;  n               4   46[COMRAM] unsigned long 
   399 ;;  nled            4   41[COMRAM] unsigned long 
   400 ;;  i               4   37[COMRAM] unsigned long 
   401 ;;  tecla           2   50[COMRAM] unsigned int 
   402 ;;  parado          1   45[COMRAM] unsigned char 
   403 ;;  op              1   36[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   413 ;;      Params:         0       0       0       0       0       0       0
   414 ;;      Locals:        32       0       0       0       0       0       0
   415 ;;      Temps:          4       0       0       0       0       0       0
   416 ;;      Totals:        36       0       0       0       0       0       0
   417 ;;Total ram usage:       36 bytes
   418 ;; Hardware stack levels required when called: 6
   419 ;; This function calls:
   420 ;;		___lldiv
   421 ;;		___llmod
   422 ;;		_kpDebounce
   423 ;;		_kpInit
   424 ;;		_kpRead
   425 ;;		_lcdChar
   426 ;;		_lcdInit
   427 ;;		_lcdPosition
   428 ;;		_rgbColor
   429 ;;		_rgbInit
   430 ;;		_ssdDigit
   431 ;;		_ssdInit
   432 ;;		_ssdUpdate
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439  00061C                     __ptext0:
   440                           	callstack 0
   441  00061C                     _main:
   442                           	callstack 25
   443  00061C                     
   444                           ;main.c: 12:     unsigned long int cont = 0, cont2 = 0, n=0, i=0, nled=0;
   445  00061C  0E00               	movlw	0
   446  00061E  6E39               	movwf	main@cont^0,c
   447  000620  0E00               	movlw	0
   448  000622  6E3A               	movwf	(main@cont+1)^0,c
   449  000624  0E00               	movlw	0
   450  000626  6E3B               	movwf	(main@cont+2)^0,c
   451  000628  0E00               	movlw	0
   452  00062A  6E3C               	movwf	(main@cont+3)^0,c
   453  00062C  0E00               	movlw	0
   454  00062E  6E35               	movwf	main@cont2^0,c
   455  000630  0E00               	movlw	0
   456  000632  6E36               	movwf	(main@cont2+1)^0,c
   457  000634  0E00               	movlw	0
   458  000636  6E37               	movwf	(main@cont2+2)^0,c
   459  000638  0E00               	movlw	0
   460  00063A  6E38               	movwf	(main@cont2+3)^0,c
   461  00063C  0E00               	movlw	0
   462  00063E  6E2F               	movwf	main@n^0,c
   463  000640  0E00               	movlw	0
   464  000642  6E30               	movwf	(main@n+1)^0,c
   465  000644  0E00               	movlw	0
   466  000646  6E31               	movwf	(main@n+2)^0,c
   467  000648  0E00               	movlw	0
   468  00064A  6E32               	movwf	(main@n+3)^0,c
   469  00064C  0E00               	movlw	0
   470  00064E  6E2A               	movwf	main@nled^0,c
   471  000650  0E00               	movlw	0
   472  000652  6E2B               	movwf	(main@nled+1)^0,c
   473  000654  0E00               	movlw	0
   474  000656  6E2C               	movwf	(main@nled+2)^0,c
   475  000658  0E00               	movlw	0
   476  00065A  6E2D               	movwf	(main@nled+3)^0,c
   477                           
   478                           ;main.c: 13:     unsigned int tecla = 16;
   479  00065C  0E00               	movlw	0
   480  00065E  6E34               	movwf	(main@tecla+1)^0,c
   481  000660  0E10               	movlw	16
   482  000662  6E33               	movwf	main@tecla^0,c
   483                           
   484                           ;main.c: 14:     unsigned char parado = 1, op = 0;
   485  000664  0E01               	movlw	1
   486  000666  6E2E               	movwf	main@parado^0,c
   487  000668  0E00               	movlw	0
   488  00066A  6E25               	movwf	main@op^0,c
   489  00066C                     
   490                           ;main.c: 15:     kpInit();
   491  00066C  EC6B  F00E         	call	_kpInit	;wreg free
   492  000670                     
   493                           ;main.c: 16:     lcdInit();
   494  000670  ECFC  F00B         	call	_lcdInit	;wreg free
   495  000674                     
   496                           ;main.c: 17:     ssdInit();
   497  000674  EC9D  F00D         	call	_ssdInit	;wreg free
   498  000678                     
   499                           ;main.c: 18:     rgbInit();
   500  000678  EC10  F00E         	call	_rgbInit	;wreg free
   501  00067C                     l2619:
   502                           
   503                           ;main.c: 20:         ssdUpdate();
   504  00067C  ECF6  F009         	call	_ssdUpdate	;wreg free
   505                           
   506                           ;main.c: 21:         switch(op){
   507  000680  EF89  F007         	goto	l2725
   508  000684                     l2621:
   509                           
   510                           ;main.c: 23:                 for(i=0;i<100;i++){
   511  000684  0E00               	movlw	0
   512  000686  6E26               	movwf	main@i^0,c
   513  000688  0E00               	movlw	0
   514  00068A  6E27               	movwf	(main@i+1)^0,c
   515  00068C  0E00               	movlw	0
   516  00068E  6E28               	movwf	(main@i+2)^0,c
   517  000690  0E00               	movlw	0
   518  000692  6E29               	movwf	(main@i+3)^0,c
   519  000694                     l2627:
   520                           
   521                           ;main.c: 24:                     if(parado==0){
   522  000694  502E               	movf	main@parado^0,w,c
   523  000696  A4D8               	btfss	status,2,c
   524  000698  EF50  F003         	goto	u2251
   525  00069C  EF52  F003         	goto	u2250
   526  0006A0                     u2251:
   527  0006A0  EF58  F003         	goto	l481
   528  0006A4                     u2250:
   529  0006A4                     
   530                           ;main.c: 25:                         cont++;
   531  0006A4  0E01               	movlw	1
   532  0006A6  2639               	addwf	main@cont^0,f,c
   533  0006A8  0E00               	movlw	0
   534  0006AA  223A               	addwfc	(main@cont+1)^0,f,c
   535  0006AC  223B               	addwfc	(main@cont+2)^0,f,c
   536  0006AE  223C               	addwfc	(main@cont+3)^0,f,c
   537  0006B0                     l481:
   538                           
   539                           ;main.c: 27:                 }
   540  0006B0  0E01               	movlw	1
   541  0006B2  2626               	addwf	main@i^0,f,c
   542  0006B4  0E00               	movlw	0
   543  0006B6  2227               	addwfc	(main@i+1)^0,f,c
   544  0006B8  2228               	addwfc	(main@i+2)^0,f,c
   545  0006BA  2229               	addwfc	(main@i+3)^0,f,c
   546  0006BC  5029               	movf	(main@i+3)^0,w,c
   547  0006BE  1028               	iorwf	(main@i+2)^0,w,c
   548  0006C0  1027               	iorwf	(main@i+1)^0,w,c
   549  0006C2  E109               	bnz	u2260
   550  0006C4  0E64               	movlw	100
   551  0006C6  5C26               	subwf	main@i^0,w,c
   552  0006C8  A0D8               	btfss	status,0,c
   553  0006CA  EF69  F003         	goto	u2261
   554  0006CE  EF6B  F003         	goto	u2260
   555  0006D2                     u2261:
   556  0006D2  EF4A  F003         	goto	l2627
   557  0006D6                     u2260:
   558  0006D6                     
   559                           ;main.c: 28:                 lcdPosition(0, 0);
   560  0006D6  0E00               	movlw	0
   561  0006D8  6E10               	movwf	(lcdPosition@line+1)^0,c
   562  0006DA  0E00               	movlw	0
   563  0006DC  6E0F               	movwf	lcdPosition@line^0,c
   564  0006DE  0E00               	movlw	0
   565  0006E0  6E12               	movwf	(lcdPosition@col+1)^0,c
   566  0006E2  0E00               	movlw	0
   567  0006E4  6E11               	movwf	lcdPosition@col^0,c
   568  0006E6  EC4E  F00E         	call	_lcdPosition	;wreg free
   569                           
   570                           ;main.c: 29:                 lcdChar((((cont / 360000) % 24) / 10) + 48);
   571  0006EA  0E18               	movlw	24
   572  0006EC  6E12               	movwf	___llmod@divisor^0,c
   573  0006EE  0E00               	movlw	0
   574  0006F0  6E13               	movwf	(___llmod@divisor+1)^0,c
   575  0006F2  0E00               	movlw	0
   576  0006F4  6E14               	movwf	(___llmod@divisor+2)^0,c
   577  0006F6  0E00               	movlw	0
   578  0006F8  6E15               	movwf	(___llmod@divisor+3)^0,c
   579  0006FA  0E40               	movlw	64
   580  0006FC  6E05               	movwf	___lldiv@divisor^0,c
   581  0006FE  0E7E               	movlw	126
   582  000700  6E06               	movwf	(___lldiv@divisor+1)^0,c
   583  000702  0E05               	movlw	5
   584  000704  6E07               	movwf	(___lldiv@divisor+2)^0,c
   585  000706  0E00               	movlw	0
   586  000708  6E08               	movwf	(___lldiv@divisor+3)^0,c
   587  00070A  C039  F001         	movff	main@cont,___lldiv@dividend
   588  00070E  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   589  000712  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   590  000716  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   591  00071A  ECAE  F00C         	call	___lldiv	;wreg free
   592  00071E  C001  F00E         	movff	?___lldiv,___llmod@dividend
   593  000722  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   594  000726  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   595  00072A  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   596  00072E  EC00  F00D         	call	___llmod	;wreg free
   597  000732  C00E  F01D         	movff	?___llmod,_main$1346
   598  000736  C00F  F01E         	movff	?___llmod+1,_main$1346+1
   599  00073A  C010  F01F         	movff	?___llmod+2,_main$1346+2
   600  00073E  C011  F020         	movff	?___llmod+3,_main$1346+3
   601                           
   602                           ;main.c: 29:                 lcdChar((((cont / 360000) % 24) / 10) + 48);
   603  000742  C01D  F001         	movff	_main$1346,___lldiv@dividend
   604  000746  C01E  F002         	movff	_main$1346+1,___lldiv@dividend+1
   605  00074A  C01F  F003         	movff	_main$1346+2,___lldiv@dividend+2
   606  00074E  C020  F004         	movff	_main$1346+3,___lldiv@dividend+3
   607  000752  0E0A               	movlw	10
   608  000754  6E05               	movwf	___lldiv@divisor^0,c
   609  000756  0E00               	movlw	0
   610  000758  6E06               	movwf	(___lldiv@divisor+1)^0,c
   611  00075A  0E00               	movlw	0
   612  00075C  6E07               	movwf	(___lldiv@divisor+2)^0,c
   613  00075E  0E00               	movlw	0
   614  000760  6E08               	movwf	(___lldiv@divisor+3)^0,c
   615  000762  ECAE  F00C         	call	___lldiv	;wreg free
   616  000766  5001               	movf	?___lldiv^0,w,c
   617  000768  0F30               	addlw	48
   618  00076A  ECE8  F00E         	call	_lcdChar
   619                           
   620                           ;main.c: 30:                 lcdChar((((cont / 360000) % 24) % 10) + 48);
   621  00076E  0E18               	movlw	24
   622  000770  6E12               	movwf	___llmod@divisor^0,c
   623  000772  0E00               	movlw	0
   624  000774  6E13               	movwf	(___llmod@divisor+1)^0,c
   625  000776  0E00               	movlw	0
   626  000778  6E14               	movwf	(___llmod@divisor+2)^0,c
   627  00077A  0E00               	movlw	0
   628  00077C  6E15               	movwf	(___llmod@divisor+3)^0,c
   629  00077E  0E40               	movlw	64
   630  000780  6E05               	movwf	___lldiv@divisor^0,c
   631  000782  0E7E               	movlw	126
   632  000784  6E06               	movwf	(___lldiv@divisor+1)^0,c
   633  000786  0E05               	movlw	5
   634  000788  6E07               	movwf	(___lldiv@divisor+2)^0,c
   635  00078A  0E00               	movlw	0
   636  00078C  6E08               	movwf	(___lldiv@divisor+3)^0,c
   637  00078E  C039  F001         	movff	main@cont,___lldiv@dividend
   638  000792  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   639  000796  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   640  00079A  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   641  00079E  ECAE  F00C         	call	___lldiv	;wreg free
   642  0007A2  C001  F00E         	movff	?___lldiv,___llmod@dividend
   643  0007A6  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   644  0007AA  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   645  0007AE  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   646  0007B2  EC00  F00D         	call	___llmod	;wreg free
   647  0007B6  C00E  F021         	movff	?___llmod,_main$1347
   648  0007BA  C00F  F022         	movff	?___llmod+1,_main$1347+1
   649  0007BE  C010  F023         	movff	?___llmod+2,_main$1347+2
   650  0007C2  C011  F024         	movff	?___llmod+3,_main$1347+3
   651                           
   652                           ;main.c: 30:                 lcdChar((((cont / 360000) % 24) % 10) + 48);
   653  0007C6  C021  F00E         	movff	_main$1347,___llmod@dividend
   654  0007CA  C022  F00F         	movff	_main$1347+1,___llmod@dividend+1
   655  0007CE  C023  F010         	movff	_main$1347+2,___llmod@dividend+2
   656  0007D2  C024  F011         	movff	_main$1347+3,___llmod@dividend+3
   657  0007D6  0E0A               	movlw	10
   658  0007D8  6E12               	movwf	___llmod@divisor^0,c
   659  0007DA  0E00               	movlw	0
   660  0007DC  6E13               	movwf	(___llmod@divisor+1)^0,c
   661  0007DE  0E00               	movlw	0
   662  0007E0  6E14               	movwf	(___llmod@divisor+2)^0,c
   663  0007E2  0E00               	movlw	0
   664  0007E4  6E15               	movwf	(___llmod@divisor+3)^0,c
   665  0007E6  EC00  F00D         	call	___llmod	;wreg free
   666  0007EA  500E               	movf	?___llmod^0,w,c
   667  0007EC  0F30               	addlw	48
   668  0007EE  ECE8  F00E         	call	_lcdChar
   669                           
   670                           ;main.c: 31:                 lcdChar(':');
   671  0007F2  0E3A               	movlw	58
   672  0007F4  ECE8  F00E         	call	_lcdChar
   673                           
   674                           ;main.c: 32:                 lcdChar((cont / 60000) % 6 + 48);
   675  0007F8  0E60               	movlw	96
   676  0007FA  6E05               	movwf	___lldiv@divisor^0,c
   677  0007FC  0EEA               	movlw	234
   678  0007FE  6E06               	movwf	(___lldiv@divisor+1)^0,c
   679  000800  0E00               	movlw	0
   680  000802  6E07               	movwf	(___lldiv@divisor+2)^0,c
   681  000804  0E00               	movlw	0
   682  000806  6E08               	movwf	(___lldiv@divisor+3)^0,c
   683  000808  C039  F001         	movff	main@cont,___lldiv@dividend
   684  00080C  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   685  000810  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   686  000814  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   687  000818  ECAE  F00C         	call	___lldiv	;wreg free
   688  00081C  C001  F00E         	movff	?___lldiv,___llmod@dividend
   689  000820  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   690  000824  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   691  000828  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   692  00082C  0E06               	movlw	6
   693  00082E  6E12               	movwf	___llmod@divisor^0,c
   694  000830  0E00               	movlw	0
   695  000832  6E13               	movwf	(___llmod@divisor+1)^0,c
   696  000834  0E00               	movlw	0
   697  000836  6E14               	movwf	(___llmod@divisor+2)^0,c
   698  000838  0E00               	movlw	0
   699  00083A  6E15               	movwf	(___llmod@divisor+3)^0,c
   700  00083C  EC00  F00D         	call	___llmod	;wreg free
   701  000840  500E               	movf	?___llmod^0,w,c
   702  000842  0F30               	addlw	48
   703  000844  ECE8  F00E         	call	_lcdChar
   704                           
   705                           ;main.c: 33:                 lcdChar((cont / 6000) % 10 + 48);
   706  000848  0E70               	movlw	112
   707  00084A  6E05               	movwf	___lldiv@divisor^0,c
   708  00084C  0E17               	movlw	23
   709  00084E  6E06               	movwf	(___lldiv@divisor+1)^0,c
   710  000850  0E00               	movlw	0
   711  000852  6E07               	movwf	(___lldiv@divisor+2)^0,c
   712  000854  0E00               	movlw	0
   713  000856  6E08               	movwf	(___lldiv@divisor+3)^0,c
   714  000858  C039  F001         	movff	main@cont,___lldiv@dividend
   715  00085C  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   716  000860  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   717  000864  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   718  000868  ECAE  F00C         	call	___lldiv	;wreg free
   719  00086C  C001  F00E         	movff	?___lldiv,___llmod@dividend
   720  000870  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   721  000874  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   722  000878  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   723  00087C  0E0A               	movlw	10
   724  00087E  6E12               	movwf	___llmod@divisor^0,c
   725  000880  0E00               	movlw	0
   726  000882  6E13               	movwf	(___llmod@divisor+1)^0,c
   727  000884  0E00               	movlw	0
   728  000886  6E14               	movwf	(___llmod@divisor+2)^0,c
   729  000888  0E00               	movlw	0
   730  00088A  6E15               	movwf	(___llmod@divisor+3)^0,c
   731  00088C  EC00  F00D         	call	___llmod	;wreg free
   732  000890  500E               	movf	?___llmod^0,w,c
   733  000892  0F30               	addlw	48
   734  000894  ECE8  F00E         	call	_lcdChar
   735                           
   736                           ;main.c: 34:                 lcdChar(':');
   737  000898  0E3A               	movlw	58
   738  00089A  ECE8  F00E         	call	_lcdChar
   739                           
   740                           ;main.c: 35:                 lcdChar((cont / 1000) % 6 + 48);
   741  00089E  0EE8               	movlw	232
   742  0008A0  6E05               	movwf	___lldiv@divisor^0,c
   743  0008A2  0E03               	movlw	3
   744  0008A4  6E06               	movwf	(___lldiv@divisor+1)^0,c
   745  0008A6  0E00               	movlw	0
   746  0008A8  6E07               	movwf	(___lldiv@divisor+2)^0,c
   747  0008AA  0E00               	movlw	0
   748  0008AC  6E08               	movwf	(___lldiv@divisor+3)^0,c
   749  0008AE  C039  F001         	movff	main@cont,___lldiv@dividend
   750  0008B2  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   751  0008B6  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   752  0008BA  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   753  0008BE  ECAE  F00C         	call	___lldiv	;wreg free
   754  0008C2  C001  F00E         	movff	?___lldiv,___llmod@dividend
   755  0008C6  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   756  0008CA  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   757  0008CE  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   758  0008D2  0E06               	movlw	6
   759  0008D4  6E12               	movwf	___llmod@divisor^0,c
   760  0008D6  0E00               	movlw	0
   761  0008D8  6E13               	movwf	(___llmod@divisor+1)^0,c
   762  0008DA  0E00               	movlw	0
   763  0008DC  6E14               	movwf	(___llmod@divisor+2)^0,c
   764  0008DE  0E00               	movlw	0
   765  0008E0  6E15               	movwf	(___llmod@divisor+3)^0,c
   766  0008E2  EC00  F00D         	call	___llmod	;wreg free
   767  0008E6  500E               	movf	?___llmod^0,w,c
   768  0008E8  0F30               	addlw	48
   769  0008EA  ECE8  F00E         	call	_lcdChar
   770                           
   771                           ;main.c: 36:                 lcdChar((cont / 100) % 10 + 48);
   772  0008EE  0E64               	movlw	100
   773  0008F0  6E05               	movwf	___lldiv@divisor^0,c
   774  0008F2  0E00               	movlw	0
   775  0008F4  6E06               	movwf	(___lldiv@divisor+1)^0,c
   776  0008F6  0E00               	movlw	0
   777  0008F8  6E07               	movwf	(___lldiv@divisor+2)^0,c
   778  0008FA  0E00               	movlw	0
   779  0008FC  6E08               	movwf	(___lldiv@divisor+3)^0,c
   780  0008FE  C039  F001         	movff	main@cont,___lldiv@dividend
   781  000902  C03A  F002         	movff	main@cont+1,___lldiv@dividend+1
   782  000906  C03B  F003         	movff	main@cont+2,___lldiv@dividend+2
   783  00090A  C03C  F004         	movff	main@cont+3,___lldiv@dividend+3
   784  00090E  ECAE  F00C         	call	___lldiv	;wreg free
   785  000912  C001  F00E         	movff	?___lldiv,___llmod@dividend
   786  000916  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   787  00091A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   788  00091E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   789  000922  0E0A               	movlw	10
   790  000924  6E12               	movwf	___llmod@divisor^0,c
   791  000926  0E00               	movlw	0
   792  000928  6E13               	movwf	(___llmod@divisor+1)^0,c
   793  00092A  0E00               	movlw	0
   794  00092C  6E14               	movwf	(___llmod@divisor+2)^0,c
   795  00092E  0E00               	movlw	0
   796  000930  6E15               	movwf	(___llmod@divisor+3)^0,c
   797  000932  EC00  F00D         	call	___llmod	;wreg free
   798  000936  500E               	movf	?___llmod^0,w,c
   799  000938  0F30               	addlw	48
   800  00093A  ECE8  F00E         	call	_lcdChar
   801  00093E                     
   802                           ;main.c: 37:                 if(cont2!=0){
   803  00093E  5035               	movf	main@cont2^0,w,c
   804  000940  1036               	iorwf	(main@cont2+1)^0,w,c
   805  000942  1037               	iorwf	(main@cont2+2)^0,w,c
   806  000944  1038               	iorwf	(main@cont2+3)^0,w,c
   807  000946  B4D8               	btfsc	status,2,c
   808  000948  EFA8  F004         	goto	u2271
   809  00094C  EFAA  F004         	goto	u2270
   810  000950                     u2271:
   811  000950  EFDE  F005         	goto	l483
   812  000954                     u2270:
   813  000954                     
   814                           ;main.c: 38:                     lcdPosition(1, 0);
   815  000954  0E00               	movlw	0
   816  000956  6E10               	movwf	(lcdPosition@line+1)^0,c
   817  000958  0E01               	movlw	1
   818  00095A  6E0F               	movwf	lcdPosition@line^0,c
   819  00095C  0E00               	movlw	0
   820  00095E  6E12               	movwf	(lcdPosition@col+1)^0,c
   821  000960  0E00               	movlw	0
   822  000962  6E11               	movwf	lcdPosition@col^0,c
   823  000964  EC4E  F00E         	call	_lcdPosition	;wreg free
   824                           
   825                           ;main.c: 39:                     lcdChar((((cont2 / 360000) % 24) / 10) + 48);
   826  000968  0E18               	movlw	24
   827  00096A  6E12               	movwf	___llmod@divisor^0,c
   828  00096C  0E00               	movlw	0
   829  00096E  6E13               	movwf	(___llmod@divisor+1)^0,c
   830  000970  0E00               	movlw	0
   831  000972  6E14               	movwf	(___llmod@divisor+2)^0,c
   832  000974  0E00               	movlw	0
   833  000976  6E15               	movwf	(___llmod@divisor+3)^0,c
   834  000978  0E40               	movlw	64
   835  00097A  6E05               	movwf	___lldiv@divisor^0,c
   836  00097C  0E7E               	movlw	126
   837  00097E  6E06               	movwf	(___lldiv@divisor+1)^0,c
   838  000980  0E05               	movlw	5
   839  000982  6E07               	movwf	(___lldiv@divisor+2)^0,c
   840  000984  0E00               	movlw	0
   841  000986  6E08               	movwf	(___lldiv@divisor+3)^0,c
   842  000988  C035  F001         	movff	main@cont2,___lldiv@dividend
   843  00098C  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
   844  000990  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
   845  000994  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
   846  000998  ECAE  F00C         	call	___lldiv	;wreg free
   847  00099C  C001  F00E         	movff	?___lldiv,___llmod@dividend
   848  0009A0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   849  0009A4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   850  0009A8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   851  0009AC  EC00  F00D         	call	___llmod	;wreg free
   852  0009B0  C00E  F01D         	movff	?___llmod,_main$1346
   853  0009B4  C00F  F01E         	movff	?___llmod+1,_main$1346+1
   854  0009B8  C010  F01F         	movff	?___llmod+2,_main$1346+2
   855  0009BC  C011  F020         	movff	?___llmod+3,_main$1346+3
   856                           
   857                           ;main.c: 39:                     lcdChar((((cont2 / 360000) % 24) / 10) + 48);
   858  0009C0  C01D  F001         	movff	_main$1346,___lldiv@dividend
   859  0009C4  C01E  F002         	movff	_main$1346+1,___lldiv@dividend+1
   860  0009C8  C01F  F003         	movff	_main$1346+2,___lldiv@dividend+2
   861  0009CC  C020  F004         	movff	_main$1346+3,___lldiv@dividend+3
   862  0009D0  0E0A               	movlw	10
   863  0009D2  6E05               	movwf	___lldiv@divisor^0,c
   864  0009D4  0E00               	movlw	0
   865  0009D6  6E06               	movwf	(___lldiv@divisor+1)^0,c
   866  0009D8  0E00               	movlw	0
   867  0009DA  6E07               	movwf	(___lldiv@divisor+2)^0,c
   868  0009DC  0E00               	movlw	0
   869  0009DE  6E08               	movwf	(___lldiv@divisor+3)^0,c
   870  0009E0  ECAE  F00C         	call	___lldiv	;wreg free
   871  0009E4  5001               	movf	?___lldiv^0,w,c
   872  0009E6  0F30               	addlw	48
   873  0009E8  ECE8  F00E         	call	_lcdChar
   874                           
   875                           ;main.c: 40:                     lcdChar((((cont2 / 360000) % 24) % 10) + 48);
   876  0009EC  0E18               	movlw	24
   877  0009EE  6E12               	movwf	___llmod@divisor^0,c
   878  0009F0  0E00               	movlw	0
   879  0009F2  6E13               	movwf	(___llmod@divisor+1)^0,c
   880  0009F4  0E00               	movlw	0
   881  0009F6  6E14               	movwf	(___llmod@divisor+2)^0,c
   882  0009F8  0E00               	movlw	0
   883  0009FA  6E15               	movwf	(___llmod@divisor+3)^0,c
   884  0009FC  0E40               	movlw	64
   885  0009FE  6E05               	movwf	___lldiv@divisor^0,c
   886  000A00  0E7E               	movlw	126
   887  000A02  6E06               	movwf	(___lldiv@divisor+1)^0,c
   888  000A04  0E05               	movlw	5
   889  000A06  6E07               	movwf	(___lldiv@divisor+2)^0,c
   890  000A08  0E00               	movlw	0
   891  000A0A  6E08               	movwf	(___lldiv@divisor+3)^0,c
   892  000A0C  C035  F001         	movff	main@cont2,___lldiv@dividend
   893  000A10  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
   894  000A14  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
   895  000A18  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
   896  000A1C  ECAE  F00C         	call	___lldiv	;wreg free
   897  000A20  C001  F00E         	movff	?___lldiv,___llmod@dividend
   898  000A24  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   899  000A28  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   900  000A2C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   901  000A30  EC00  F00D         	call	___llmod	;wreg free
   902  000A34  C00E  F021         	movff	?___llmod,_main$1347
   903  000A38  C00F  F022         	movff	?___llmod+1,_main$1347+1
   904  000A3C  C010  F023         	movff	?___llmod+2,_main$1347+2
   905  000A40  C011  F024         	movff	?___llmod+3,_main$1347+3
   906                           
   907                           ;main.c: 40:                     lcdChar((((cont2 / 360000) % 24) % 10) + 48);
   908  000A44  C021  F00E         	movff	_main$1347,___llmod@dividend
   909  000A48  C022  F00F         	movff	_main$1347+1,___llmod@dividend+1
   910  000A4C  C023  F010         	movff	_main$1347+2,___llmod@dividend+2
   911  000A50  C024  F011         	movff	_main$1347+3,___llmod@dividend+3
   912  000A54  0E0A               	movlw	10
   913  000A56  6E12               	movwf	___llmod@divisor^0,c
   914  000A58  0E00               	movlw	0
   915  000A5A  6E13               	movwf	(___llmod@divisor+1)^0,c
   916  000A5C  0E00               	movlw	0
   917  000A5E  6E14               	movwf	(___llmod@divisor+2)^0,c
   918  000A60  0E00               	movlw	0
   919  000A62  6E15               	movwf	(___llmod@divisor+3)^0,c
   920  000A64  EC00  F00D         	call	___llmod	;wreg free
   921  000A68  500E               	movf	?___llmod^0,w,c
   922  000A6A  0F30               	addlw	48
   923  000A6C  ECE8  F00E         	call	_lcdChar
   924                           
   925                           ;main.c: 41:                     lcdChar(':');
   926  000A70  0E3A               	movlw	58
   927  000A72  ECE8  F00E         	call	_lcdChar
   928                           
   929                           ;main.c: 42:                     lcdChar((cont2 / 60000) % 6 + 48);
   930  000A76  0E60               	movlw	96
   931  000A78  6E05               	movwf	___lldiv@divisor^0,c
   932  000A7A  0EEA               	movlw	234
   933  000A7C  6E06               	movwf	(___lldiv@divisor+1)^0,c
   934  000A7E  0E00               	movlw	0
   935  000A80  6E07               	movwf	(___lldiv@divisor+2)^0,c
   936  000A82  0E00               	movlw	0
   937  000A84  6E08               	movwf	(___lldiv@divisor+3)^0,c
   938  000A86  C035  F001         	movff	main@cont2,___lldiv@dividend
   939  000A8A  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
   940  000A8E  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
   941  000A92  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
   942  000A96  ECAE  F00C         	call	___lldiv	;wreg free
   943  000A9A  C001  F00E         	movff	?___lldiv,___llmod@dividend
   944  000A9E  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   945  000AA2  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   946  000AA6  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   947  000AAA  0E06               	movlw	6
   948  000AAC  6E12               	movwf	___llmod@divisor^0,c
   949  000AAE  0E00               	movlw	0
   950  000AB0  6E13               	movwf	(___llmod@divisor+1)^0,c
   951  000AB2  0E00               	movlw	0
   952  000AB4  6E14               	movwf	(___llmod@divisor+2)^0,c
   953  000AB6  0E00               	movlw	0
   954  000AB8  6E15               	movwf	(___llmod@divisor+3)^0,c
   955  000ABA  EC00  F00D         	call	___llmod	;wreg free
   956  000ABE  500E               	movf	?___llmod^0,w,c
   957  000AC0  0F30               	addlw	48
   958  000AC2  ECE8  F00E         	call	_lcdChar
   959                           
   960                           ;main.c: 43:                     lcdChar((cont2 / 6000) % 10 + 48);
   961  000AC6  0E70               	movlw	112
   962  000AC8  6E05               	movwf	___lldiv@divisor^0,c
   963  000ACA  0E17               	movlw	23
   964  000ACC  6E06               	movwf	(___lldiv@divisor+1)^0,c
   965  000ACE  0E00               	movlw	0
   966  000AD0  6E07               	movwf	(___lldiv@divisor+2)^0,c
   967  000AD2  0E00               	movlw	0
   968  000AD4  6E08               	movwf	(___lldiv@divisor+3)^0,c
   969  000AD6  C035  F001         	movff	main@cont2,___lldiv@dividend
   970  000ADA  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
   971  000ADE  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
   972  000AE2  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
   973  000AE6  ECAE  F00C         	call	___lldiv	;wreg free
   974  000AEA  C001  F00E         	movff	?___lldiv,___llmod@dividend
   975  000AEE  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   976  000AF2  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   977  000AF6  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   978  000AFA  0E0A               	movlw	10
   979  000AFC  6E12               	movwf	___llmod@divisor^0,c
   980  000AFE  0E00               	movlw	0
   981  000B00  6E13               	movwf	(___llmod@divisor+1)^0,c
   982  000B02  0E00               	movlw	0
   983  000B04  6E14               	movwf	(___llmod@divisor+2)^0,c
   984  000B06  0E00               	movlw	0
   985  000B08  6E15               	movwf	(___llmod@divisor+3)^0,c
   986  000B0A  EC00  F00D         	call	___llmod	;wreg free
   987  000B0E  500E               	movf	?___llmod^0,w,c
   988  000B10  0F30               	addlw	48
   989  000B12  ECE8  F00E         	call	_lcdChar
   990                           
   991                           ;main.c: 44:                     lcdChar(':');
   992  000B16  0E3A               	movlw	58
   993  000B18  ECE8  F00E         	call	_lcdChar
   994                           
   995                           ;main.c: 45:                     lcdChar((cont2 / 1000) % 6 + 48);
   996  000B1C  0EE8               	movlw	232
   997  000B1E  6E05               	movwf	___lldiv@divisor^0,c
   998  000B20  0E03               	movlw	3
   999  000B22  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1000  000B24  0E00               	movlw	0
  1001  000B26  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1002  000B28  0E00               	movlw	0
  1003  000B2A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1004  000B2C  C035  F001         	movff	main@cont2,___lldiv@dividend
  1005  000B30  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
  1006  000B34  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
  1007  000B38  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
  1008  000B3C  ECAE  F00C         	call	___lldiv	;wreg free
  1009  000B40  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1010  000B44  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1011  000B48  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1012  000B4C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1013  000B50  0E06               	movlw	6
  1014  000B52  6E12               	movwf	___llmod@divisor^0,c
  1015  000B54  0E00               	movlw	0
  1016  000B56  6E13               	movwf	(___llmod@divisor+1)^0,c
  1017  000B58  0E00               	movlw	0
  1018  000B5A  6E14               	movwf	(___llmod@divisor+2)^0,c
  1019  000B5C  0E00               	movlw	0
  1020  000B5E  6E15               	movwf	(___llmod@divisor+3)^0,c
  1021  000B60  EC00  F00D         	call	___llmod	;wreg free
  1022  000B64  500E               	movf	?___llmod^0,w,c
  1023  000B66  0F30               	addlw	48
  1024  000B68  ECE8  F00E         	call	_lcdChar
  1025                           
  1026                           ;main.c: 46:                     lcdChar((cont2 / 100) % 10 + 48);
  1027  000B6C  0E64               	movlw	100
  1028  000B6E  6E05               	movwf	___lldiv@divisor^0,c
  1029  000B70  0E00               	movlw	0
  1030  000B72  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1031  000B74  0E00               	movlw	0
  1032  000B76  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1033  000B78  0E00               	movlw	0
  1034  000B7A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1035  000B7C  C035  F001         	movff	main@cont2,___lldiv@dividend
  1036  000B80  C036  F002         	movff	main@cont2+1,___lldiv@dividend+1
  1037  000B84  C037  F003         	movff	main@cont2+2,___lldiv@dividend+2
  1038  000B88  C038  F004         	movff	main@cont2+3,___lldiv@dividend+3
  1039  000B8C  ECAE  F00C         	call	___lldiv	;wreg free
  1040  000B90  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1041  000B94  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1042  000B98  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1043  000B9C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1044  000BA0  0E0A               	movlw	10
  1045  000BA2  6E12               	movwf	___llmod@divisor^0,c
  1046  000BA4  0E00               	movlw	0
  1047  000BA6  6E13               	movwf	(___llmod@divisor+1)^0,c
  1048  000BA8  0E00               	movlw	0
  1049  000BAA  6E14               	movwf	(___llmod@divisor+2)^0,c
  1050  000BAC  0E00               	movlw	0
  1051  000BAE  6E15               	movwf	(___llmod@divisor+3)^0,c
  1052  000BB0  EC00  F00D         	call	___llmod	;wreg free
  1053  000BB4  500E               	movf	?___llmod^0,w,c
  1054  000BB6  0F30               	addlw	48
  1055  000BB8  ECE8  F00E         	call	_lcdChar
  1056  000BBC                     l483:
  1057                           
  1058                           ;main.c: 49:                 kpDebounce();
  1059  000BBC  EC61  F00B         	call	_kpDebounce	;wreg free
  1060  000BC0                     
  1061                           ;main.c: 50:                 op = 2;
  1062  000BC0  0E02               	movlw	2
  1063  000BC2  6E25               	movwf	main@op^0,c
  1064                           
  1065                           ;main.c: 51:                 break;
  1066  000BC4  EF3E  F003         	goto	l2619
  1067  000BC8                     l2639:
  1068                           
  1069                           ;main.c: 53:                 if (kpRead()!=tecla){
  1070  000BC8  EC02  F00F         	call	_kpRead	;wreg free
  1071  000BCC  5033               	movf	main@tecla^0,w,c
  1072  000BCE  1801               	xorwf	?_kpRead^0,w,c
  1073  000BD0  E109               	bnz	u2280
  1074  000BD2  5034               	movf	(main@tecla+1)^0,w,c
  1075  000BD4  1802               	xorwf	(?_kpRead+1)^0,w,c
  1076  000BD6  B4D8               	btfsc	status,2,c
  1077  000BD8  EFF0  F005         	goto	u2281
  1078  000BDC  EFF2  F005         	goto	u2280
  1079  000BE0                     u2281:
  1080  000BE0  EFEF  F006         	goto	l2715
  1081  000BE4                     u2280:
  1082  000BE4                     
  1083                           ;main.c: 54:                     tecla = kpRead();
  1084  000BE4  EC02  F00F         	call	_kpRead	;wreg free
  1085  000BE8  C001  F033         	movff	?_kpRead,main@tecla
  1086  000BEC  C002  F034         	movff	?_kpRead+1,main@tecla+1
  1087  000BF0                     
  1088                           ;main.c: 55:                     if(((tecla) & (1<<(0)))){
  1089  000BF0  A033               	btfss	main@tecla^0,0,c
  1090  000BF2  EFFD  F005         	goto	u2291
  1091  000BF6  EFFF  F005         	goto	u2290
  1092  000BFA                     u2291:
  1093  000BFA  EF0D  F006         	goto	l2651
  1094  000BFE                     u2290:
  1095  000BFE                     
  1096                           ;main.c: 56:                         if(parado == 0){
  1097  000BFE  502E               	movf	main@parado^0,w,c
  1098  000C00  A4D8               	btfss	status,2,c
  1099  000C02  EF05  F006         	goto	u2301
  1100  000C06  EF07  F006         	goto	u2300
  1101  000C0A                     u2301:
  1102  000C0A  EF0B  F006         	goto	l2649
  1103  000C0E                     u2300:
  1104  000C0E                     
  1105                           ;main.c: 57:                             parado = 1;
  1106  000C0E  0E01               	movlw	1
  1107  000C10  6E2E               	movwf	main@parado^0,c
  1108                           
  1109                           ;main.c: 58:                         }else{
  1110  000C12  EF0D  F006         	goto	l2651
  1111  000C16                     l2649:
  1112                           
  1113                           ;main.c: 59:                             parado = 0;
  1114  000C16  0E00               	movlw	0
  1115  000C18  6E2E               	movwf	main@parado^0,c
  1116  000C1A                     l2651:
  1117                           
  1118                           ;main.c: 62:                     if(((tecla) & (1<<(1)))){
  1119  000C1A  A233               	btfss	main@tecla^0,1,c
  1120  000C1C  EF12  F006         	goto	u2311
  1121  000C20  EF14  F006         	goto	u2310
  1122  000C24                     u2311:
  1123  000C24  EF1E  F006         	goto	l2655
  1124  000C28                     u2310:
  1125  000C28                     
  1126                           ;main.c: 63:                         cont = 0;
  1127  000C28  0E00               	movlw	0
  1128  000C2A  6E39               	movwf	main@cont^0,c
  1129  000C2C  0E00               	movlw	0
  1130  000C2E  6E3A               	movwf	(main@cont+1)^0,c
  1131  000C30  0E00               	movlw	0
  1132  000C32  6E3B               	movwf	(main@cont+2)^0,c
  1133  000C34  0E00               	movlw	0
  1134  000C36  6E3C               	movwf	(main@cont+3)^0,c
  1135                           
  1136                           ;main.c: 64:                         parado = 1;
  1137  000C38  0E01               	movlw	1
  1138  000C3A  6E2E               	movwf	main@parado^0,c
  1139  000C3C                     l2655:
  1140                           
  1141                           ;main.c: 66:                     if(((tecla) & (1<<(2)))){
  1142  000C3C  A433               	btfss	main@tecla^0,2,c
  1143  000C3E  EF23  F006         	goto	u2321
  1144  000C42  EF25  F006         	goto	u2320
  1145  000C46                     u2321:
  1146  000C46  EFBE  F006         	goto	l491
  1147  000C4A                     u2320:
  1148  000C4A                     
  1149                           ;main.c: 67:                         if(cont!=0){
  1150  000C4A  5039               	movf	main@cont^0,w,c
  1151  000C4C  103A               	iorwf	(main@cont+1)^0,w,c
  1152  000C4E  103B               	iorwf	(main@cont+2)^0,w,c
  1153  000C50  103C               	iorwf	(main@cont+3)^0,w,c
  1154  000C52  B4D8               	btfsc	status,2,c
  1155  000C54  EF2E  F006         	goto	u2331
  1156  000C58  EF30  F006         	goto	u2330
  1157  000C5C                     u2331:
  1158  000C5C  EFBE  F006         	goto	l491
  1159  000C60                     u2330:
  1160  000C60                     
  1161                           ;main.c: 68:                             cont2 = cont;
  1162  000C60  C039  F035         	movff	main@cont,main@cont2
  1163  000C64  C03A  F036         	movff	main@cont+1,main@cont2+1
  1164  000C68  C03B  F037         	movff	main@cont+2,main@cont2+2
  1165  000C6C  C03C  F038         	movff	main@cont+3,main@cont2+3
  1166  000C70                     
  1167                           ;main.c: 69:                             n++;
  1168  000C70  0E01               	movlw	1
  1169  000C72  262F               	addwf	main@n^0,f,c
  1170  000C74  0E00               	movlw	0
  1171  000C76  2230               	addwfc	(main@n+1)^0,f,c
  1172  000C78  2231               	addwfc	(main@n+2)^0,f,c
  1173  000C7A  2232               	addwfc	(main@n+3)^0,f,c
  1174                           
  1175                           ;main.c: 70:                             switch(nled){
  1176  000C7C  EF86  F006         	goto	l2693
  1177  000C80                     l2663:
  1178  000C80  0E00               	movlw	0
  1179  000C82  6E08               	movwf	(rgbColor@led+1)^0,c
  1180  000C84  0E01               	movlw	1
  1181  000C86  6E07               	movwf	rgbColor@led^0,c
  1182  000C88  EC56  F00C         	call	_rgbColor	;wreg free
  1183  000C8C                     l2665:
  1184                           
  1185                           ;main.c: 72:                                 nled++;
  1186  000C8C  0E01               	movlw	1
  1187  000C8E  262A               	addwf	main@nled^0,f,c
  1188  000C90  0E00               	movlw	0
  1189  000C92  222B               	addwfc	(main@nled+1)^0,f,c
  1190  000C94  222C               	addwfc	(main@nled+2)^0,f,c
  1191  000C96  222D               	addwfc	(main@nled+3)^0,f,c
  1192                           
  1193                           ;main.c: 73:                                 break;
  1194  000C98  EFBE  F006         	goto	l491
  1195  000C9C                     l2667:
  1196  000C9C  0E00               	movlw	0
  1197  000C9E  6E08               	movwf	(rgbColor@led+1)^0,c
  1198  000CA0  0E02               	movlw	2
  1199  000CA2  6E07               	movwf	rgbColor@led^0,c
  1200  000CA4  EC56  F00C         	call	_rgbColor	;wreg free
  1201  000CA8  EF46  F006         	goto	l2665
  1202  000CAC                     l2671:
  1203  000CAC  0E00               	movlw	0
  1204  000CAE  6E08               	movwf	(rgbColor@led+1)^0,c
  1205  000CB0  0E04               	movlw	4
  1206  000CB2  6E07               	movwf	rgbColor@led^0,c
  1207  000CB4  EC56  F00C         	call	_rgbColor	;wreg free
  1208  000CB8  EF46  F006         	goto	l2665
  1209  000CBC                     l2675:
  1210  000CBC  0E00               	movlw	0
  1211  000CBE  6E08               	movwf	(rgbColor@led+1)^0,c
  1212  000CC0  0E03               	movlw	3
  1213  000CC2  6E07               	movwf	rgbColor@led^0,c
  1214  000CC4  EC56  F00C         	call	_rgbColor	;wreg free
  1215  000CC8  EF46  F006         	goto	l2665
  1216  000CCC                     l2679:
  1217  000CCC  0E00               	movlw	0
  1218  000CCE  6E08               	movwf	(rgbColor@led+1)^0,c
  1219  000CD0  0E06               	movlw	6
  1220  000CD2  6E07               	movwf	rgbColor@led^0,c
  1221  000CD4  EC56  F00C         	call	_rgbColor	;wreg free
  1222  000CD8  EF46  F006         	goto	l2665
  1223  000CDC                     l2683:
  1224  000CDC  0E00               	movlw	0
  1225  000CDE  6E08               	movwf	(rgbColor@led+1)^0,c
  1226  000CE0  0E05               	movlw	5
  1227  000CE2  6E07               	movwf	rgbColor@led^0,c
  1228  000CE4  EC56  F00C         	call	_rgbColor	;wreg free
  1229  000CE8                     l2685:
  1230                           
  1231                           ;main.c: 87:                                 nled=0;
  1232  000CE8  0E00               	movlw	0
  1233  000CEA  6E2A               	movwf	main@nled^0,c
  1234  000CEC  0E00               	movlw	0
  1235  000CEE  6E2B               	movwf	(main@nled+1)^0,c
  1236  000CF0  0E00               	movlw	0
  1237  000CF2  6E2C               	movwf	(main@nled+2)^0,c
  1238  000CF4  0E00               	movlw	0
  1239  000CF6  6E2D               	movwf	(main@nled+3)^0,c
  1240                           
  1241                           ;main.c: 88:                                 break;
  1242  000CF8  EFBE  F006         	goto	l491
  1243  000CFC                     l2687:
  1244  000CFC  0E00               	movlw	0
  1245  000CFE  6E08               	movwf	(rgbColor@led+1)^0,c
  1246  000D00  0E07               	movlw	7
  1247  000D02  6E07               	movwf	rgbColor@led^0,c
  1248  000D04  EC56  F00C         	call	_rgbColor	;wreg free
  1249  000D08  EF74  F006         	goto	l2685
  1250  000D0C                     l2693:
  1251  000D0C  C02A  F019         	movff	main@nled,??_main
  1252  000D10  C02B  F01A         	movff	main@nled+1,??_main+1
  1253  000D14  C02C  F01B         	movff	main@nled+2,??_main+2
  1254  000D18  C02D  F01C         	movff	main@nled+3,??_main+3
  1255                           
  1256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 1, Range of values is 0 to 0
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte            4     3 (average)
  1262                           ;	Chosen strategy is simple_byte
  1263  000D1C  501C               	movf	(??_main+3)^0,w,c
  1264  000D1E  0A00               	xorlw	0	; case 0
  1265  000D20  B4D8               	btfsc	status,2,c
  1266  000D22  EFB7  F006         	goto	l2765
  1267  000D26  EF7E  F006         	goto	l2687
  1268  000D2A                     l2763:
  1269                           
  1270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 1, Range of values is 0 to 0
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte            4     3 (average)
  1276                           ;	Chosen strategy is simple_byte
  1277  000D2A  501A               	movf	(??_main+1)^0,w,c
  1278  000D2C  0A00               	xorlw	0	; case 0
  1279  000D2E  B4D8               	btfsc	status,2,c
  1280  000D30  EF9C  F006         	goto	l2767
  1281  000D34  EF7E  F006         	goto	l2687
  1282  000D38                     l2767:
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 6, Range of values is 1 to 6
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           19    10 (average)
  1289                           ;	Chosen strategy is simple_byte
  1290  000D38  5019               	movf	??_main^0,w,c
  1291  000D3A  0A01               	xorlw	1	; case 1
  1292  000D3C  B4D8               	btfsc	status,2,c
  1293  000D3E  EF40  F006         	goto	l2663
  1294  000D42  0A03               	xorlw	3	; case 2
  1295  000D44  B4D8               	btfsc	status,2,c
  1296  000D46  EF4E  F006         	goto	l2667
  1297  000D4A  0A01               	xorlw	1	; case 3
  1298  000D4C  B4D8               	btfsc	status,2,c
  1299  000D4E  EF56  F006         	goto	l2671
  1300  000D52  0A07               	xorlw	7	; case 4
  1301  000D54  B4D8               	btfsc	status,2,c
  1302  000D56  EF5E  F006         	goto	l2675
  1303  000D5A  0A01               	xorlw	1	; case 5
  1304  000D5C  B4D8               	btfsc	status,2,c
  1305  000D5E  EF66  F006         	goto	l2679
  1306  000D62  0A03               	xorlw	3	; case 6
  1307  000D64  B4D8               	btfsc	status,2,c
  1308  000D66  EF6E  F006         	goto	l2683
  1309  000D6A  EF7E  F006         	goto	l2687
  1310  000D6E                     l2765:
  1311                           
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 1, Range of values is 0 to 0
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte            4     3 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318  000D6E  501B               	movf	(??_main+2)^0,w,c
  1319  000D70  0A00               	xorlw	0	; case 0
  1320  000D72  B4D8               	btfsc	status,2,c
  1321  000D74  EF95  F006         	goto	l2763
  1322  000D78  EF7E  F006         	goto	l2687
  1323  000D7C                     l491:
  1324                           
  1325                           ;main.c: 95:                     if(((tecla) & (1<<(3)))){
  1326  000D7C  A633               	btfss	main@tecla^0,3,c
  1327  000D7E  EFC3  F006         	goto	u2341
  1328  000D82  EFC5  F006         	goto	u2340
  1329  000D86                     u2341:
  1330  000D86  EFEF  F006         	goto	l2715
  1331  000D8A                     u2340:
  1332  000D8A                     
  1333                           ;main.c: 96:                         cont2 = 0;
  1334  000D8A  0E00               	movlw	0
  1335  000D8C  6E35               	movwf	main@cont2^0,c
  1336  000D8E  0E00               	movlw	0
  1337  000D90  6E36               	movwf	(main@cont2+1)^0,c
  1338  000D92  0E00               	movlw	0
  1339  000D94  6E37               	movwf	(main@cont2+2)^0,c
  1340  000D96  0E00               	movlw	0
  1341  000D98  6E38               	movwf	(main@cont2+3)^0,c
  1342  000D9A                     
  1343                           ;main.c: 97:                         lcdPosition(1, 0);
  1344  000D9A  0E00               	movlw	0
  1345  000D9C  6E10               	movwf	(lcdPosition@line+1)^0,c
  1346  000D9E  0E01               	movlw	1
  1347  000DA0  6E0F               	movwf	lcdPosition@line^0,c
  1348  000DA2  0E00               	movlw	0
  1349  000DA4  6E12               	movwf	(lcdPosition@col+1)^0,c
  1350  000DA6  0E00               	movlw	0
  1351  000DA8  6E11               	movwf	lcdPosition@col^0,c
  1352  000DAA  EC4E  F00E         	call	_lcdPosition	;wreg free
  1353  000DAE                     
  1354                           ;main.c: 98:                         lcdChar(' ');
  1355  000DAE  0E20               	movlw	32
  1356  000DB0  ECE8  F00E         	call	_lcdChar
  1357  000DB4                     
  1358                           ;main.c: 99:                         lcdChar(' ');
  1359  000DB4  0E20               	movlw	32
  1360  000DB6  ECE8  F00E         	call	_lcdChar
  1361  000DBA                     
  1362                           ;main.c: 100:                         lcdChar(' ');
  1363  000DBA  0E20               	movlw	32
  1364  000DBC  ECE8  F00E         	call	_lcdChar
  1365  000DC0                     
  1366                           ;main.c: 101:                         lcdChar(' ');
  1367  000DC0  0E20               	movlw	32
  1368  000DC2  ECE8  F00E         	call	_lcdChar
  1369  000DC6                     
  1370                           ;main.c: 102:                         lcdChar(' ');
  1371  000DC6  0E20               	movlw	32
  1372  000DC8  ECE8  F00E         	call	_lcdChar
  1373  000DCC                     
  1374                           ;main.c: 103:                         lcdChar(' ');
  1375  000DCC  0E20               	movlw	32
  1376  000DCE  ECE8  F00E         	call	_lcdChar
  1377  000DD2                     
  1378                           ;main.c: 104:                         lcdChar(' ');
  1379  000DD2  0E20               	movlw	32
  1380  000DD4  ECE8  F00E         	call	_lcdChar
  1381  000DD8                     
  1382                           ;main.c: 105:                         lcdChar(' ');
  1383  000DD8  0E20               	movlw	32
  1384  000DDA  ECE8  F00E         	call	_lcdChar
  1385  000DDE                     l2715:
  1386                           
  1387                           ;main.c: 108:                 op = 3;
  1388  000DDE  0E03               	movlw	3
  1389  000DE0  6E25               	movwf	main@op^0,c
  1390                           
  1391                           ;main.c: 109:                 break;
  1392  000DE2  EF3E  F003         	goto	l2619
  1393  000DE6                     l2717:
  1394                           
  1395                           ;main.c: 111:                 ssdDigit(((n / 1000) %10), 0);
  1396  000DE6  0E00               	movlw	0
  1397  000DE8  6E17               	movwf	ssdDigit@pos^0,c
  1398  000DEA  0EE8               	movlw	232
  1399  000DEC  6E05               	movwf	___lldiv@divisor^0,c
  1400  000DEE  0E03               	movlw	3
  1401  000DF0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1402  000DF2  0E00               	movlw	0
  1403  000DF4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1404  000DF6  0E00               	movlw	0
  1405  000DF8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1406  000DFA  C02F  F001         	movff	main@n,___lldiv@dividend
  1407  000DFE  C030  F002         	movff	main@n+1,___lldiv@dividend+1
  1408  000E02  C031  F003         	movff	main@n+2,___lldiv@dividend+2
  1409  000E06  C032  F004         	movff	main@n+3,___lldiv@dividend+3
  1410  000E0A  ECAE  F00C         	call	___lldiv	;wreg free
  1411  000E0E  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1412  000E12  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1413  000E16  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1414  000E1A  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1415  000E1E  0E0A               	movlw	10
  1416  000E20  6E12               	movwf	___llmod@divisor^0,c
  1417  000E22  0E00               	movlw	0
  1418  000E24  6E13               	movwf	(___llmod@divisor+1)^0,c
  1419  000E26  0E00               	movlw	0
  1420  000E28  6E14               	movwf	(___llmod@divisor+2)^0,c
  1421  000E2A  0E00               	movlw	0
  1422  000E2C  6E15               	movwf	(___llmod@divisor+3)^0,c
  1423  000E2E  EC00  F00D         	call	___llmod	;wreg free
  1424  000E32  500E               	movf	?___llmod^0,w,c
  1425  000E34  EC71  F00D         	call	_ssdDigit
  1426                           
  1427                           ;main.c: 112:                 ssdDigit(((n / 100) % 10), 1);
  1428  000E38  0E01               	movlw	1
  1429  000E3A  6E17               	movwf	ssdDigit@pos^0,c
  1430  000E3C  0E64               	movlw	100
  1431  000E3E  6E05               	movwf	___lldiv@divisor^0,c
  1432  000E40  0E00               	movlw	0
  1433  000E42  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1434  000E44  0E00               	movlw	0
  1435  000E46  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1436  000E48  0E00               	movlw	0
  1437  000E4A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1438  000E4C  C02F  F001         	movff	main@n,___lldiv@dividend
  1439  000E50  C030  F002         	movff	main@n+1,___lldiv@dividend+1
  1440  000E54  C031  F003         	movff	main@n+2,___lldiv@dividend+2
  1441  000E58  C032  F004         	movff	main@n+3,___lldiv@dividend+3
  1442  000E5C  ECAE  F00C         	call	___lldiv	;wreg free
  1443  000E60  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1444  000E64  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1445  000E68  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1446  000E6C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1447  000E70  0E0A               	movlw	10
  1448  000E72  6E12               	movwf	___llmod@divisor^0,c
  1449  000E74  0E00               	movlw	0
  1450  000E76  6E13               	movwf	(___llmod@divisor+1)^0,c
  1451  000E78  0E00               	movlw	0
  1452  000E7A  6E14               	movwf	(___llmod@divisor+2)^0,c
  1453  000E7C  0E00               	movlw	0
  1454  000E7E  6E15               	movwf	(___llmod@divisor+3)^0,c
  1455  000E80  EC00  F00D         	call	___llmod	;wreg free
  1456  000E84  500E               	movf	?___llmod^0,w,c
  1457  000E86  EC71  F00D         	call	_ssdDigit
  1458                           
  1459                           ;main.c: 113:                 ssdDigit(((n / 10) % 10), 2);
  1460  000E8A  0E02               	movlw	2
  1461  000E8C  6E17               	movwf	ssdDigit@pos^0,c
  1462  000E8E  0E0A               	movlw	10
  1463  000E90  6E05               	movwf	___lldiv@divisor^0,c
  1464  000E92  0E00               	movlw	0
  1465  000E94  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1466  000E96  0E00               	movlw	0
  1467  000E98  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1468  000E9A  0E00               	movlw	0
  1469  000E9C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1470  000E9E  C02F  F001         	movff	main@n,___lldiv@dividend
  1471  000EA2  C030  F002         	movff	main@n+1,___lldiv@dividend+1
  1472  000EA6  C031  F003         	movff	main@n+2,___lldiv@dividend+2
  1473  000EAA  C032  F004         	movff	main@n+3,___lldiv@dividend+3
  1474  000EAE  ECAE  F00C         	call	___lldiv	;wreg free
  1475  000EB2  C001  F00E         	movff	?___lldiv,___llmod@dividend
  1476  000EB6  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  1477  000EBA  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  1478  000EBE  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  1479  000EC2  0E0A               	movlw	10
  1480  000EC4  6E12               	movwf	___llmod@divisor^0,c
  1481  000EC6  0E00               	movlw	0
  1482  000EC8  6E13               	movwf	(___llmod@divisor+1)^0,c
  1483  000ECA  0E00               	movlw	0
  1484  000ECC  6E14               	movwf	(___llmod@divisor+2)^0,c
  1485  000ECE  0E00               	movlw	0
  1486  000ED0  6E15               	movwf	(___llmod@divisor+3)^0,c
  1487  000ED2  EC00  F00D         	call	___llmod	;wreg free
  1488  000ED6  500E               	movf	?___llmod^0,w,c
  1489  000ED8  EC71  F00D         	call	_ssdDigit
  1490                           
  1491                           ;main.c: 114:                 ssdDigit((n % 10), 3);
  1492  000EDC  0E03               	movlw	3
  1493  000EDE  6E17               	movwf	ssdDigit@pos^0,c
  1494  000EE0  C02F  F00E         	movff	main@n,___llmod@dividend
  1495  000EE4  C030  F00F         	movff	main@n+1,___llmod@dividend+1
  1496  000EE8  C031  F010         	movff	main@n+2,___llmod@dividend+2
  1497  000EEC  C032  F011         	movff	main@n+3,___llmod@dividend+3
  1498  000EF0  0E0A               	movlw	10
  1499  000EF2  6E12               	movwf	___llmod@divisor^0,c
  1500  000EF4  0E00               	movlw	0
  1501  000EF6  6E13               	movwf	(___llmod@divisor+1)^0,c
  1502  000EF8  0E00               	movlw	0
  1503  000EFA  6E14               	movwf	(___llmod@divisor+2)^0,c
  1504  000EFC  0E00               	movlw	0
  1505  000EFE  6E15               	movwf	(___llmod@divisor+3)^0,c
  1506  000F00  EC00  F00D         	call	___llmod	;wreg free
  1507  000F04  500E               	movf	?___llmod^0,w,c
  1508  000F06  EC71  F00D         	call	_ssdDigit
  1509  000F0A                     l2719:
  1510                           
  1511                           ;main.c: 115:                 op = 0;
  1512  000F0A  0E00               	movlw	0
  1513  000F0C  6E25               	movwf	main@op^0,c
  1514                           
  1515                           ;main.c: 116:                 break;
  1516  000F0E  EF3E  F003         	goto	l2619
  1517  000F12                     l2725:
  1518  000F12  5025               	movf	main@op^0,w,c
  1519  000F14  6E19               	movwf	??_main^0,c
  1520  000F16  6A1A               	clrf	(??_main+1)^0,c
  1521                           
  1522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1523                           ; Switch size 1, requested type "simple"
  1524                           ; Number of cases is 1, Range of values is 0 to 0
  1525                           ; switch strategies available:
  1526                           ; Name         Instructions Cycles
  1527                           ; simple_byte            4     3 (average)
  1528                           ;	Chosen strategy is simple_byte
  1529  000F18  501A               	movf	(??_main+1)^0,w,c
  1530  000F1A  0A00               	xorlw	0	; case 0
  1531  000F1C  B4D8               	btfsc	status,2,c
  1532  000F1E  EF93  F007         	goto	l2769
  1533  000F22  EF85  F007         	goto	l2719
  1534  000F26                     l2769:
  1535                           
  1536                           ; Switch size 1, requested type "simple"
  1537                           ; Number of cases is 4, Range of values is 0 to 3
  1538                           ; switch strategies available:
  1539                           ; Name         Instructions Cycles
  1540                           ; simple_byte           13     7 (average)
  1541                           ;	Chosen strategy is simple_byte
  1542  000F26  5019               	movf	??_main^0,w,c
  1543  000F28  0A00               	xorlw	0	; case 0
  1544  000F2A  B4D8               	btfsc	status,2,c
  1545  000F2C  EF42  F003         	goto	l2621
  1546  000F30  0A01               	xorlw	1	; case 1
  1547  000F32  B4D8               	btfsc	status,2,c
  1548  000F34  EFDE  F005         	goto	l483
  1549  000F38  0A03               	xorlw	3	; case 2
  1550  000F3A  B4D8               	btfsc	status,2,c
  1551  000F3C  EFE4  F005         	goto	l2639
  1552  000F40  0A01               	xorlw	1	; case 3
  1553  000F42  B4D8               	btfsc	status,2,c
  1554  000F44  EFF3  F006         	goto	l2717
  1555  000F48  EF85  F007         	goto	l2719
  1556  000F4C  EF00  F000         	goto	start
  1557  000F50                     __end_of_main:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _ssdUpdate *****************
  1561 ;; Defined at:
  1562 ;;		line 50 in file "ssd.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1576 ;;      Params:         0       0       0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0
  1578 ;;      Temps:          2       0       0       0       0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 3
  1583 ;; This function calls:
  1584 ;;		_digitalWrite
  1585 ;;		_soWrite
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text1
  1592  0013EC                     __ptext1:
  1593                           	callstack 0
  1594  0013EC                     _ssdUpdate:
  1595                           	callstack 27
  1596  0013EC                     
  1597                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1598  0013EC  0E00               	movlw	0
  1599  0013EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1600  0013F0  0E18               	movlw	24
  1601  0013F2  6E01               	movwf	digitalWrite@pin^0,c
  1602  0013F4  0E00               	movlw	0
  1603  0013F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1604  0013F8  0E00               	movlw	0
  1605  0013FA  6E03               	movwf	digitalWrite@value^0,c
  1606  0013FC  ECCF  F008         	call	_digitalWrite	;wreg free
  1607                           
  1608                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1609  001400  0E00               	movlw	0
  1610  001402  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1611  001404  0E19               	movlw	25
  1612  001406  6E01               	movwf	digitalWrite@pin^0,c
  1613  001408  0E00               	movlw	0
  1614  00140A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1615  00140C  0E00               	movlw	0
  1616  00140E  6E03               	movwf	digitalWrite@value^0,c
  1617  001410  ECCF  F008         	call	_digitalWrite	;wreg free
  1618                           
  1619                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1620  001414  0E00               	movlw	0
  1621  001416  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1622  001418  0E1A               	movlw	26
  1623  00141A  6E01               	movwf	digitalWrite@pin^0,c
  1624  00141C  0E00               	movlw	0
  1625  00141E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1626  001420  0E00               	movlw	0
  1627  001422  6E03               	movwf	digitalWrite@value^0,c
  1628  001424  ECCF  F008         	call	_digitalWrite	;wreg free
  1629                           
  1630                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1631  001428  0E00               	movlw	0
  1632  00142A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1633  00142C  0E1B               	movlw	27
  1634  00142E  6E01               	movwf	digitalWrite@pin^0,c
  1635  001430  0E00               	movlw	0
  1636  001432  6E04               	movwf	(digitalWrite@value+1)^0,c
  1637  001434  0E00               	movlw	0
  1638  001436  6E03               	movwf	digitalWrite@value^0,c
  1639  001438  ECCF  F008         	call	_digitalWrite	;wreg free
  1640                           
  1641                           ;ssd.c: 60:     soWrite(0x00);
  1642  00143C  0E00               	movlw	0
  1643  00143E  6E08               	movwf	(soWrite@value+1)^0,c
  1644  001440  0E00               	movlw	0
  1645  001442  6E07               	movwf	soWrite@value^0,c
  1646  001444  ECC8  F00D         	call	_soWrite	;wreg free
  1647                           
  1648                           ;ssd.c: 62:     switch (display)
  1649  001448  EF8E  F00A         	goto	l2453
  1650  00144C                     l2425:
  1651                           
  1652                           ;ssd.c: 65:             soWrite(valor[v0]);
  1653  00144C  0E01               	movlw	low _valor
  1654  00144E  2446               	addwf	_v0^0,w,c
  1655  001450  6EF6               	movwf	tblptrl,c
  1656  001452  6AF7               	clrf	tblptrh,c
  1657  001454  0E06               	movlw	high _valor
  1658  001456  22F7               	addwfc	tblptrh,f,c
  1659  001458                     	if	0	;There are less than 3 active tblptr bytes
  1660  001458                     	endif
  1661  001458  0008               	tblrd		*
  1662  00145A  50F5               	movf	tablat,w,c
  1663  00145C  6E07               	movwf	soWrite@value^0,c
  1664  00145E  6A08               	clrf	(soWrite@value+1)^0,c
  1665  001460  ECC8  F00D         	call	_soWrite	;wreg free
  1666  001464                     
  1667                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1668  001464  0E00               	movlw	0
  1669  001466  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1670  001468  0E18               	movlw	24
  1671  00146A  6E01               	movwf	digitalWrite@pin^0,c
  1672  00146C  0E00               	movlw	0
  1673  00146E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1674  001470  0E01               	movlw	1
  1675  001472  6E03               	movwf	digitalWrite@value^0,c
  1676  001474  ECCF  F008         	call	_digitalWrite	;wreg free
  1677  001478                     
  1678                           ;ssd.c: 67:             display = 1;
  1679  001478  0E01               	movlw	1
  1680  00147A  6E47               	movwf	_display^0,c
  1681                           
  1682                           ;ssd.c: 68:             break;
  1683  00147C  EFAB  F00A         	goto	l423
  1684  001480                     l2431:
  1685                           
  1686                           ;ssd.c: 71:             soWrite(valor[v1]);
  1687  001480  0E01               	movlw	low _valor
  1688  001482  2445               	addwf	_v1^0,w,c
  1689  001484  6EF6               	movwf	tblptrl,c
  1690  001486  6AF7               	clrf	tblptrh,c
  1691  001488  0E06               	movlw	high _valor
  1692  00148A  22F7               	addwfc	tblptrh,f,c
  1693  00148C                     	if	0	;There are less than 3 active tblptr bytes
  1694  00148C                     	endif
  1695  00148C  0008               	tblrd		*
  1696  00148E  50F5               	movf	tablat,w,c
  1697  001490  6E07               	movwf	soWrite@value^0,c
  1698  001492  6A08               	clrf	(soWrite@value+1)^0,c
  1699  001494  ECC8  F00D         	call	_soWrite	;wreg free
  1700  001498                     
  1701                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1702  001498  0E00               	movlw	0
  1703  00149A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1704  00149C  0E19               	movlw	25
  1705  00149E  6E01               	movwf	digitalWrite@pin^0,c
  1706  0014A0  0E00               	movlw	0
  1707  0014A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1708  0014A4  0E01               	movlw	1
  1709  0014A6  6E03               	movwf	digitalWrite@value^0,c
  1710  0014A8  ECCF  F008         	call	_digitalWrite	;wreg free
  1711  0014AC                     
  1712                           ;ssd.c: 73:             display = 2;
  1713  0014AC  0E02               	movlw	2
  1714  0014AE  6E47               	movwf	_display^0,c
  1715                           
  1716                           ;ssd.c: 74:             break;
  1717  0014B0  EFAB  F00A         	goto	l423
  1718  0014B4                     l2437:
  1719                           
  1720                           ;ssd.c: 77:             soWrite(valor[v2]);
  1721  0014B4  0E01               	movlw	low _valor
  1722  0014B6  2444               	addwf	_v2^0,w,c
  1723  0014B8  6EF6               	movwf	tblptrl,c
  1724  0014BA  6AF7               	clrf	tblptrh,c
  1725  0014BC  0E06               	movlw	high _valor
  1726  0014BE  22F7               	addwfc	tblptrh,f,c
  1727  0014C0                     	if	0	;There are less than 3 active tblptr bytes
  1728  0014C0                     	endif
  1729  0014C0  0008               	tblrd		*
  1730  0014C2  50F5               	movf	tablat,w,c
  1731  0014C4  6E07               	movwf	soWrite@value^0,c
  1732  0014C6  6A08               	clrf	(soWrite@value+1)^0,c
  1733  0014C8  ECC8  F00D         	call	_soWrite	;wreg free
  1734  0014CC                     
  1735                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1736  0014CC  0E00               	movlw	0
  1737  0014CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1738  0014D0  0E1A               	movlw	26
  1739  0014D2  6E01               	movwf	digitalWrite@pin^0,c
  1740  0014D4  0E00               	movlw	0
  1741  0014D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1742  0014D8  0E01               	movlw	1
  1743  0014DA  6E03               	movwf	digitalWrite@value^0,c
  1744  0014DC  ECCF  F008         	call	_digitalWrite	;wreg free
  1745  0014E0                     
  1746                           ;ssd.c: 79:             display = 3;
  1747  0014E0  0E03               	movlw	3
  1748  0014E2  6E47               	movwf	_display^0,c
  1749                           
  1750                           ;ssd.c: 80:             break;
  1751  0014E4  EFAB  F00A         	goto	l423
  1752  0014E8                     l2443:
  1753                           
  1754                           ;ssd.c: 83:             soWrite(valor[v3]);
  1755  0014E8  0E01               	movlw	low _valor
  1756  0014EA  2443               	addwf	_v3^0,w,c
  1757  0014EC  6EF6               	movwf	tblptrl,c
  1758  0014EE  6AF7               	clrf	tblptrh,c
  1759  0014F0  0E06               	movlw	high _valor
  1760  0014F2  22F7               	addwfc	tblptrh,f,c
  1761  0014F4                     	if	0	;There are less than 3 active tblptr bytes
  1762  0014F4                     	endif
  1763  0014F4  0008               	tblrd		*
  1764  0014F6  50F5               	movf	tablat,w,c
  1765  0014F8  6E07               	movwf	soWrite@value^0,c
  1766  0014FA  6A08               	clrf	(soWrite@value+1)^0,c
  1767  0014FC  ECC8  F00D         	call	_soWrite	;wreg free
  1768  001500                     
  1769                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1770  001500  0E00               	movlw	0
  1771  001502  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1772  001504  0E1B               	movlw	27
  1773  001506  6E01               	movwf	digitalWrite@pin^0,c
  1774  001508  0E00               	movlw	0
  1775  00150A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1776  00150C  0E01               	movlw	1
  1777  00150E  6E03               	movwf	digitalWrite@value^0,c
  1778  001510  ECCF  F008         	call	_digitalWrite	;wreg free
  1779  001514                     l2447:
  1780                           
  1781                           ;ssd.c: 85:             display = 0;
  1782  001514  0E00               	movlw	0
  1783  001516  6E47               	movwf	_display^0,c
  1784                           
  1785                           ;ssd.c: 86:             break;
  1786  001518  EFAB  F00A         	goto	l423
  1787  00151C                     l2453:
  1788  00151C  5047               	movf	_display^0,w,c
  1789  00151E  6E0A               	movwf	??_ssdUpdate^0,c
  1790  001520  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1791                           
  1792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1793                           ; Switch size 1, requested type "simple"
  1794                           ; Number of cases is 1, Range of values is 0 to 0
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte            4     3 (average)
  1798                           ;	Chosen strategy is simple_byte
  1799  001522  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1800  001524  0A00               	xorlw	0	; case 0
  1801  001526  B4D8               	btfsc	status,2,c
  1802  001528  EF98  F00A         	goto	l2771
  1803  00152C  EF8A  F00A         	goto	l2447
  1804  001530                     l2771:
  1805                           
  1806                           ; Switch size 1, requested type "simple"
  1807                           ; Number of cases is 4, Range of values is 0 to 3
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           13     7 (average)
  1811                           ;	Chosen strategy is simple_byte
  1812  001530  500A               	movf	??_ssdUpdate^0,w,c
  1813  001532  0A00               	xorlw	0	; case 0
  1814  001534  B4D8               	btfsc	status,2,c
  1815  001536  EF26  F00A         	goto	l2425
  1816  00153A  0A01               	xorlw	1	; case 1
  1817  00153C  B4D8               	btfsc	status,2,c
  1818  00153E  EF40  F00A         	goto	l2431
  1819  001542  0A03               	xorlw	3	; case 2
  1820  001544  B4D8               	btfsc	status,2,c
  1821  001546  EF5A  F00A         	goto	l2437
  1822  00154A  0A01               	xorlw	1	; case 3
  1823  00154C  B4D8               	btfsc	status,2,c
  1824  00154E  EF74  F00A         	goto	l2443
  1825  001552  EF8A  F00A         	goto	l2447
  1826  001556                     l423:
  1827  001556  0012               	return		;funcret
  1828  001558                     __end_of_ssdUpdate:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _ssdInit *****************
  1832 ;; Defined at:
  1833 ;;		line 94 in file "ssd.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1847 ;;      Params:         0       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 2
  1854 ;; This function calls:
  1855 ;;		_pinMode
  1856 ;;		_soInit
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text2
  1863  001B3A                     __ptext2:
  1864                           	callstack 0
  1865  001B3A                     _ssdInit:
  1866                           	callstack 28
  1867  001B3A                     
  1868                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1869  001B3A  0E00               	movlw	0
  1870  001B3C  6E02               	movwf	(pinMode@pin+1)^0,c
  1871  001B3E  0E18               	movlw	24
  1872  001B40  6E01               	movwf	pinMode@pin^0,c
  1873  001B42  0E00               	movlw	0
  1874  001B44  6E04               	movwf	(pinMode@type+1)^0,c
  1875  001B46  0E00               	movlw	0
  1876  001B48  6E03               	movwf	pinMode@type^0,c
  1877  001B4A  ECA8  F007         	call	_pinMode	;wreg free
  1878                           
  1879                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1880  001B4E  0E00               	movlw	0
  1881  001B50  6E02               	movwf	(pinMode@pin+1)^0,c
  1882  001B52  0E19               	movlw	25
  1883  001B54  6E01               	movwf	pinMode@pin^0,c
  1884  001B56  0E00               	movlw	0
  1885  001B58  6E04               	movwf	(pinMode@type+1)^0,c
  1886  001B5A  0E00               	movlw	0
  1887  001B5C  6E03               	movwf	pinMode@type^0,c
  1888  001B5E  ECA8  F007         	call	_pinMode	;wreg free
  1889                           
  1890                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1891  001B62  0E00               	movlw	0
  1892  001B64  6E02               	movwf	(pinMode@pin+1)^0,c
  1893  001B66  0E1A               	movlw	26
  1894  001B68  6E01               	movwf	pinMode@pin^0,c
  1895  001B6A  0E00               	movlw	0
  1896  001B6C  6E04               	movwf	(pinMode@type+1)^0,c
  1897  001B6E  0E00               	movlw	0
  1898  001B70  6E03               	movwf	pinMode@type^0,c
  1899  001B72  ECA8  F007         	call	_pinMode	;wreg free
  1900                           
  1901                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1902  001B76  0E00               	movlw	0
  1903  001B78  6E02               	movwf	(pinMode@pin+1)^0,c
  1904  001B7A  0E1B               	movlw	27
  1905  001B7C  6E01               	movwf	pinMode@pin^0,c
  1906  001B7E  0E00               	movlw	0
  1907  001B80  6E04               	movwf	(pinMode@type+1)^0,c
  1908  001B82  0E00               	movlw	0
  1909  001B84  6E03               	movwf	pinMode@type^0,c
  1910  001B86  ECA8  F007         	call	_pinMode	;wreg free
  1911                           
  1912                           ;ssd.c: 102:     soInit();
  1913  001B8A  EC2F  F00E         	call	_soInit	;wreg free
  1914  001B8E  0012               	return		;funcret
  1915  001B90                     __end_of_ssdInit:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _ssdDigit *****************
  1919 ;; Defined at:
  1920 ;;		line 34 in file "ssd.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  val             1    wreg     unsigned char 
  1923 ;;  pos             1   22[COMRAM] unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  val             1   23[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1935 ;;      Params:         1       0       0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0
  1938 ;;      Totals:         2       0       0       0       0       0       0
  1939 ;;Total ram usage:        2 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text3
  1949  001AE2                     __ptext3:
  1950                           	callstack 0
  1951  001AE2                     _ssdDigit:
  1952                           	callstack 30
  1953                           
  1954                           ;incstack = 0
  1955                           ;ssdDigit@val stored from wreg
  1956  001AE2  6E18               	movwf	ssdDigit@val^0,c
  1957  001AE4                     
  1958                           ;ssd.c: 35:     if (pos == 0) {
  1959  001AE4  5017               	movf	ssdDigit@pos^0,w,c
  1960  001AE6  A4D8               	btfss	status,2,c
  1961  001AE8  EF78  F00D         	goto	u2001
  1962  001AEC  EF7A  F00D         	goto	u2000
  1963  001AF0                     u2001:
  1964  001AF0  EF7C  F00D         	goto	l2411
  1965  001AF4                     u2000:
  1966  001AF4                     
  1967                           ;ssd.c: 36:         v0 = val;
  1968  001AF4  C018  F046         	movff	ssdDigit@val,_v0
  1969  001AF8                     l2411:
  1970                           
  1971                           ;ssd.c: 38:     if (pos == 1) {
  1972  001AF8  0417               	decf	ssdDigit@pos^0,w,c
  1973  001AFA  A4D8               	btfss	status,2,c
  1974  001AFC  EF82  F00D         	goto	u2011
  1975  001B00  EF84  F00D         	goto	u2010
  1976  001B04                     u2011:
  1977  001B04  EF86  F00D         	goto	l2415
  1978  001B08                     u2010:
  1979  001B08                     
  1980                           ;ssd.c: 39:         v1 = val;
  1981  001B08  C018  F045         	movff	ssdDigit@val,_v1
  1982  001B0C                     l2415:
  1983                           
  1984                           ;ssd.c: 41:     if (pos == 2) {
  1985  001B0C  0E02               	movlw	2
  1986  001B0E  1817               	xorwf	ssdDigit@pos^0,w,c
  1987  001B10  A4D8               	btfss	status,2,c
  1988  001B12  EF8D  F00D         	goto	u2021
  1989  001B16  EF8F  F00D         	goto	u2020
  1990  001B1A                     u2021:
  1991  001B1A  EF91  F00D         	goto	l2419
  1992  001B1E                     u2020:
  1993  001B1E                     
  1994                           ;ssd.c: 42:         v2 = val;
  1995  001B1E  C018  F044         	movff	ssdDigit@val,_v2
  1996  001B22                     l2419:
  1997                           
  1998                           ;ssd.c: 44:     if (pos == 3) {
  1999  001B22  0E03               	movlw	3
  2000  001B24  1817               	xorwf	ssdDigit@pos^0,w,c
  2001  001B26  A4D8               	btfss	status,2,c
  2002  001B28  EF98  F00D         	goto	u2031
  2003  001B2C  EF9A  F00D         	goto	u2030
  2004  001B30                     u2031:
  2005  001B30  EF9C  F00D         	goto	l413
  2006  001B34                     u2030:
  2007  001B34                     
  2008                           ;ssd.c: 45:         v3 = val;
  2009  001B34  C018  F043         	movff	ssdDigit@val,_v3
  2010  001B38                     l413:
  2011  001B38  0012               	return		;funcret
  2012  001B3A                     __end_of_ssdDigit:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _rgbInit *****************
  2016 ;; Defined at:
  2017 ;;		line 45 in file "rgb.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         0       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 1
  2038 ;; This function calls:
  2039 ;;		_pinMode
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text4
  2046  001C20                     __ptext4:
  2047                           	callstack 0
  2048  001C20                     _rgbInit:
  2049                           	callstack 29
  2050  001C20                     
  2051                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  2052  001C20  0E00               	movlw	0
  2053  001C22  6E02               	movwf	(pinMode@pin+1)^0,c
  2054  001C24  0E18               	movlw	24
  2055  001C26  6E01               	movwf	pinMode@pin^0,c
  2056  001C28  0E00               	movlw	0
  2057  001C2A  6E04               	movwf	(pinMode@type+1)^0,c
  2058  001C2C  0E00               	movlw	0
  2059  001C2E  6E03               	movwf	pinMode@type^0,c
  2060  001C30  ECA8  F007         	call	_pinMode	;wreg free
  2061                           
  2062                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  2063  001C34  0E00               	movlw	0
  2064  001C36  6E02               	movwf	(pinMode@pin+1)^0,c
  2065  001C38  0E19               	movlw	25
  2066  001C3A  6E01               	movwf	pinMode@pin^0,c
  2067  001C3C  0E00               	movlw	0
  2068  001C3E  6E04               	movwf	(pinMode@type+1)^0,c
  2069  001C40  0E00               	movlw	0
  2070  001C42  6E03               	movwf	pinMode@type^0,c
  2071  001C44  ECA8  F007         	call	_pinMode	;wreg free
  2072                           
  2073                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  2074  001C48  0E00               	movlw	0
  2075  001C4A  6E02               	movwf	(pinMode@pin+1)^0,c
  2076  001C4C  0E1A               	movlw	26
  2077  001C4E  6E01               	movwf	pinMode@pin^0,c
  2078  001C50  0E00               	movlw	0
  2079  001C52  6E04               	movwf	(pinMode@type+1)^0,c
  2080  001C54  0E00               	movlw	0
  2081  001C56  6E03               	movwf	pinMode@type^0,c
  2082  001C58  ECA8  F007         	call	_pinMode	;wreg free
  2083  001C5C  0012               	return		;funcret
  2084  001C5E                     __end_of_rgbInit:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _rgbColor *****************
  2088 ;; Defined at:
  2089 ;;		line 3 in file "rgb.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  led             2    6[COMRAM] int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         2       0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0
  2106 ;;      Totals:         2       0       0       0       0       0       0
  2107 ;;Total ram usage:        2 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 1
  2110 ;; This function calls:
  2111 ;;		_digitalWrite
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text5
  2118  0018AC                     __ptext5:
  2119                           	callstack 0
  2120  0018AC                     _rgbColor:
  2121                           	callstack 29
  2122  0018AC                     
  2123                           ;rgb.c: 4:  if (led & 1) {
  2124  0018AC  A007               	btfss	rgbColor@led^0,0,c
  2125  0018AE  EF5B  F00C         	goto	u1971
  2126  0018B2  EF5D  F00C         	goto	u1970
  2127  0018B6                     u1971:
  2128  0018B6  EF69  F00C         	goto	l2391
  2129  0018BA                     u1970:
  2130  0018BA                     
  2131                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  2132  0018BA  0E00               	movlw	0
  2133  0018BC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2134  0018BE  0E18               	movlw	24
  2135  0018C0  6E01               	movwf	digitalWrite@pin^0,c
  2136  0018C2  0E00               	movlw	0
  2137  0018C4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2138  0018C6  0E01               	movlw	1
  2139  0018C8  6E03               	movwf	digitalWrite@value^0,c
  2140  0018CA  ECCF  F008         	call	_digitalWrite	;wreg free
  2141                           
  2142                           ;rgb.c: 6:  } else {
  2143  0018CE  EF73  F00C         	goto	l2393
  2144  0018D2                     l2391:
  2145                           
  2146                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  2147  0018D2  0E00               	movlw	0
  2148  0018D4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2149  0018D6  0E18               	movlw	24
  2150  0018D8  6E01               	movwf	digitalWrite@pin^0,c
  2151  0018DA  0E00               	movlw	0
  2152  0018DC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2153  0018DE  0E00               	movlw	0
  2154  0018E0  6E03               	movwf	digitalWrite@value^0,c
  2155  0018E2  ECCF  F008         	call	_digitalWrite	;wreg free
  2156  0018E6                     l2393:
  2157                           
  2158                           ;rgb.c: 9:  if (led & 2) {
  2159  0018E6  A207               	btfss	rgbColor@led^0,1,c
  2160  0018E8  EF78  F00C         	goto	u1981
  2161  0018EC  EF7A  F00C         	goto	u1980
  2162  0018F0                     u1981:
  2163  0018F0  EF86  F00C         	goto	l2397
  2164  0018F4                     u1980:
  2165  0018F4                     
  2166                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2167  0018F4  0E00               	movlw	0
  2168  0018F6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2169  0018F8  0E19               	movlw	25
  2170  0018FA  6E01               	movwf	digitalWrite@pin^0,c
  2171  0018FC  0E00               	movlw	0
  2172  0018FE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2173  001900  0E01               	movlw	1
  2174  001902  6E03               	movwf	digitalWrite@value^0,c
  2175  001904  ECCF  F008         	call	_digitalWrite	;wreg free
  2176                           
  2177                           ;rgb.c: 11:  } else {
  2178  001908  EF90  F00C         	goto	l2399
  2179  00190C                     l2397:
  2180                           
  2181                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2182  00190C  0E00               	movlw	0
  2183  00190E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2184  001910  0E19               	movlw	25
  2185  001912  6E01               	movwf	digitalWrite@pin^0,c
  2186  001914  0E00               	movlw	0
  2187  001916  6E04               	movwf	(digitalWrite@value+1)^0,c
  2188  001918  0E00               	movlw	0
  2189  00191A  6E03               	movwf	digitalWrite@value^0,c
  2190  00191C  ECCF  F008         	call	_digitalWrite	;wreg free
  2191  001920                     l2399:
  2192                           
  2193                           ;rgb.c: 14:  if (led & 4) {
  2194  001920  A407               	btfss	rgbColor@led^0,2,c
  2195  001922  EF95  F00C         	goto	u1991
  2196  001926  EF97  F00C         	goto	u1990
  2197  00192A                     u1991:
  2198  00192A  EFA3  F00C         	goto	l2403
  2199  00192E                     u1990:
  2200  00192E                     
  2201                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2202  00192E  0E00               	movlw	0
  2203  001930  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2204  001932  0E1A               	movlw	26
  2205  001934  6E01               	movwf	digitalWrite@pin^0,c
  2206  001936  0E00               	movlw	0
  2207  001938  6E04               	movwf	(digitalWrite@value+1)^0,c
  2208  00193A  0E01               	movlw	1
  2209  00193C  6E03               	movwf	digitalWrite@value^0,c
  2210  00193E  ECCF  F008         	call	_digitalWrite	;wreg free
  2211                           
  2212                           ;rgb.c: 16:  } else {
  2213  001942  EFAD  F00C         	goto	l321
  2214  001946                     l2403:
  2215                           
  2216                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2217  001946  0E00               	movlw	0
  2218  001948  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2219  00194A  0E1A               	movlw	26
  2220  00194C  6E01               	movwf	digitalWrite@pin^0,c
  2221  00194E  0E00               	movlw	0
  2222  001950  6E04               	movwf	(digitalWrite@value+1)^0,c
  2223  001952  0E00               	movlw	0
  2224  001954  6E03               	movwf	digitalWrite@value^0,c
  2225  001956  ECCF  F008         	call	_digitalWrite	;wreg free
  2226  00195A                     l321:
  2227  00195A  0012               	return		;funcret
  2228  00195C                     __end_of_rgbColor:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _lcdPosition *****************
  2232 ;; Defined at:
  2233 ;;		line 44 in file "lcd.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  line            2   14[COMRAM] int 
  2236 ;;  col             2   16[COMRAM] int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2248 ;;      Params:         4       0       0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0
  2251 ;;      Totals:         4       0       0       0       0       0       0
  2252 ;;Total ram usage:        4 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 5
  2255 ;; This function calls:
  2256 ;;		_lcdCommand
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text6
  2263  001C9C                     __ptext6:
  2264                           	callstack 0
  2265  001C9C                     _lcdPosition:
  2266                           	callstack 25
  2267  001C9C                     
  2268                           ;lcd.c: 45:  if (line == 0) {
  2269  001C9C  500F               	movf	lcdPosition@line^0,w,c
  2270  001C9E  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2271  001CA0  A4D8               	btfss	status,2,c
  2272  001CA2  EF55  F00E         	goto	u1951
  2273  001CA6  EF57  F00E         	goto	u1950
  2274  001CAA                     u1951:
  2275  001CAA  EF5C  F00E         	goto	l2363
  2276  001CAE                     u1950:
  2277  001CAE                     
  2278                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2279  001CAE  5011               	movf	lcdPosition@col^0,w,c
  2280  001CB0  0B0F               	andlw	15
  2281  001CB2  0F80               	addlw	128
  2282  001CB4  ECD9  F00E         	call	_lcdCommand
  2283  001CB8                     l2363:
  2284                           
  2285                           ;lcd.c: 48:  if (line == 1) {
  2286  001CB8  040F               	decf	lcdPosition@line^0,w,c
  2287  001CBA  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2288  001CBC  A4D8               	btfss	status,2,c
  2289  001CBE  EF63  F00E         	goto	u1961
  2290  001CC2  EF65  F00E         	goto	u1960
  2291  001CC6                     u1961:
  2292  001CC6  EF6A  F00E         	goto	l271
  2293  001CCA                     u1960:
  2294  001CCA                     
  2295                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2296  001CCA  5011               	movf	lcdPosition@col^0,w,c
  2297  001CCC  0B0F               	andlw	15
  2298  001CCE  0FC0               	addlw	192
  2299  001CD0  ECD9  F00E         	call	_lcdCommand
  2300  001CD4                     l271:
  2301  001CD4  0012               	return		;funcret
  2302  001CD6                     __end_of_lcdPosition:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _lcdInit *****************
  2306 ;; Defined at:
  2307 ;;		line 72 in file "lcd.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2321 ;;      Params:         0       0       0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0
  2324 ;;      Totals:         0       0       0       0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 5
  2328 ;; This function calls:
  2329 ;;		_delayMicro
  2330 ;;		_delayMili
  2331 ;;		_lcdCommand
  2332 ;;		_pinMode
  2333 ;;		_pushNibble
  2334 ;;		_soInit
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text7
  2341  0017F8                     __ptext7:
  2342                           	callstack 0
  2343  0017F8                     _lcdInit:
  2344                           	callstack 25
  2345  0017F8                     
  2346                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2347  0017F8  0E00               	movlw	0
  2348  0017FA  6E02               	movwf	(pinMode@pin+1)^0,c
  2349  0017FC  0E1C               	movlw	28
  2350  0017FE  6E01               	movwf	pinMode@pin^0,c
  2351  001800  0E00               	movlw	0
  2352  001802  6E04               	movwf	(pinMode@type+1)^0,c
  2353  001804  0E00               	movlw	0
  2354  001806  6E03               	movwf	pinMode@type^0,c
  2355  001808  ECA8  F007         	call	_pinMode	;wreg free
  2356                           
  2357                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2358  00180C  0E00               	movlw	0
  2359  00180E  6E02               	movwf	(pinMode@pin+1)^0,c
  2360  001810  0E1D               	movlw	29
  2361  001812  6E01               	movwf	pinMode@pin^0,c
  2362  001814  0E00               	movlw	0
  2363  001816  6E04               	movwf	(pinMode@type+1)^0,c
  2364  001818  0E00               	movlw	0
  2365  00181A  6E03               	movwf	pinMode@type^0,c
  2366  00181C  ECA8  F007         	call	_pinMode	;wreg free
  2367                           
  2368                           ;lcd.c: 75:  soInit();
  2369  001820  EC2F  F00E         	call	_soInit	;wreg free
  2370                           
  2371                           ;lcd.c: 76:  delayMili(15);
  2372  001824  0E00               	movlw	0
  2373  001826  6E02               	movwf	(delayMili@a+1)^0,c
  2374  001828  0E0F               	movlw	15
  2375  00182A  6E01               	movwf	delayMili@a^0,c
  2376  00182C  EC84  F00E         	call	_delayMili	;wreg free
  2377                           
  2378                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2379  001830  0E00               	movlw	0
  2380  001832  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2381  001834  0E00               	movlw	0
  2382  001836  6E0A               	movwf	pushNibble@rs^0,c
  2383  001838  0E03               	movlw	3
  2384  00183A  ECC6  F00E         	call	_pushNibble
  2385                           
  2386                           ;lcd.c: 79:  delayMili(5);
  2387  00183E  0E00               	movlw	0
  2388  001840  6E02               	movwf	(delayMili@a+1)^0,c
  2389  001842  0E05               	movlw	5
  2390  001844  6E01               	movwf	delayMili@a^0,c
  2391  001846  EC84  F00E         	call	_delayMili	;wreg free
  2392                           
  2393                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2394  00184A  0E00               	movlw	0
  2395  00184C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2396  00184E  0E00               	movlw	0
  2397  001850  6E0A               	movwf	pushNibble@rs^0,c
  2398  001852  0E03               	movlw	3
  2399  001854  ECC6  F00E         	call	_pushNibble
  2400  001858                     
  2401                           ;lcd.c: 81:  delayMicro(160);
  2402  001858  0E00               	movlw	0
  2403  00185A  6E02               	movwf	(delayMicro@a+1)^0,c
  2404  00185C  0EA0               	movlw	160
  2405  00185E  6E01               	movwf	delayMicro@a^0,c
  2406  001860  EC07  F00F         	call	_delayMicro	;wreg free
  2407  001864                     
  2408                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2409  001864  0E00               	movlw	0
  2410  001866  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2411  001868  0E00               	movlw	0
  2412  00186A  6E0A               	movwf	pushNibble@rs^0,c
  2413  00186C  0E03               	movlw	3
  2414  00186E  ECC6  F00E         	call	_pushNibble
  2415                           
  2416                           ;lcd.c: 83:  delayMicro(160);
  2417  001872  0E00               	movlw	0
  2418  001874  6E02               	movwf	(delayMicro@a+1)^0,c
  2419  001876  0EA0               	movlw	160
  2420  001878  6E01               	movwf	delayMicro@a^0,c
  2421  00187A  EC07  F00F         	call	_delayMicro	;wreg free
  2422  00187E                     
  2423                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2424  00187E  0E00               	movlw	0
  2425  001880  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2426  001882  0E00               	movlw	0
  2427  001884  6E0A               	movwf	pushNibble@rs^0,c
  2428  001886  0E02               	movlw	2
  2429  001888  ECC6  F00E         	call	_pushNibble
  2430  00188C                     
  2431                           ;lcd.c: 86:  delayMili(10);
  2432  00188C  0E00               	movlw	0
  2433  00188E  6E02               	movwf	(delayMili@a+1)^0,c
  2434  001890  0E0A               	movlw	10
  2435  001892  6E01               	movwf	delayMili@a^0,c
  2436  001894  EC84  F00E         	call	_delayMili	;wreg free
  2437  001898                     
  2438                           ;lcd.c: 88:  lcdCommand(0x28);
  2439  001898  0E28               	movlw	40
  2440  00189A  ECD9  F00E         	call	_lcdCommand
  2441  00189E                     
  2442                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2443  00189E  0E0C               	movlw	12
  2444  0018A0  ECD9  F00E         	call	_lcdCommand
  2445  0018A4                     
  2446                           ;lcd.c: 90:  lcdCommand(0x01);
  2447  0018A4  0E01               	movlw	1
  2448  0018A6  ECD9  F00E         	call	_lcdCommand
  2449  0018AA  0012               	return		;funcret
  2450  0018AC                     __end_of_lcdInit:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _pushNibble *****************
  2454 ;; Defined at:
  2455 ;;		line 25 in file "lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  value           1    wreg     unsigned char 
  2458 ;;  rs              2    9[COMRAM] int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  value           1   11[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2470 ;;      Params:         2       0       0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0
  2473 ;;      Totals:         3       0       0       0       0       0       0
  2474 ;;Total ram usage:        3 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 3
  2477 ;; This function calls:
  2478 ;;		_digitalWrite
  2479 ;;		_pulseEnablePin
  2480 ;;		_soWrite
  2481 ;; This function is called by:
  2482 ;;		_lcdInit
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text8
  2487  001D8C                     __ptext8:
  2488                           	callstack 0
  2489  001D8C                     _pushNibble:
  2490                           	callstack 26
  2491                           
  2492                           ;incstack = 0
  2493                           ;pushNibble@value stored from wreg
  2494  001D8C  6E0C               	movwf	pushNibble@value^0,c
  2495  001D8E                     
  2496                           ;lcd.c: 26:  soWrite(value);
  2497  001D8E  C00C  F007         	movff	pushNibble@value,soWrite@value
  2498  001D92  6A08               	clrf	(soWrite@value+1)^0,c
  2499  001D94  ECC8  F00D         	call	_soWrite	;wreg free
  2500                           
  2501                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2502  001D98  0E00               	movlw	0
  2503  001D9A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2504  001D9C  0E1D               	movlw	29
  2505  001D9E  6E01               	movwf	digitalWrite@pin^0,c
  2506  001DA0  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2507  001DA4  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2508  001DA8  ECCF  F008         	call	_digitalWrite	;wreg free
  2509                           
  2510                           ;lcd.c: 28:  pulseEnablePin();
  2511  001DAC  ECEF  F00D         	call	_pulseEnablePin	;wreg free
  2512  001DB0  0012               	return		;funcret
  2513  001DB2                     __end_of_pushNibble:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _lcdCommand *****************
  2517 ;; Defined at:
  2518 ;;		line 40 in file "lcd.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  value           1    wreg     unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  value           1   13[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         0       0       0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0
  2535 ;;      Totals:         1       0       0       0       0       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 4
  2539 ;; This function calls:
  2540 ;;		_delayMili
  2541 ;;		_pushByte
  2542 ;; This function is called by:
  2543 ;;		_lcdPosition
  2544 ;;		_lcdInit
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text9
  2549  001DB2                     __ptext9:
  2550                           	callstack 0
  2551  001DB2                     _lcdCommand:
  2552                           	callstack 25
  2553                           
  2554                           ;incstack = 0
  2555                           ;lcdCommand@value stored from wreg
  2556  001DB2  6E0E               	movwf	lcdCommand@value^0,c
  2557  001DB4                     
  2558                           ;lcd.c: 41:  pushByte(value, 0);
  2559  001DB4  0E00               	movlw	0
  2560  001DB6  6E0B               	movwf	(pushByte@rs+1)^0,c
  2561  001DB8  0E00               	movlw	0
  2562  001DBA  6E0A               	movwf	pushByte@rs^0,c
  2563  001DBC  500E               	movf	lcdCommand@value^0,w,c
  2564  001DBE  EC44  F00D         	call	_pushByte
  2565                           
  2566                           ;lcd.c: 42:  delayMili(2);
  2567  001DC2  0E00               	movlw	0
  2568  001DC4  6E02               	movwf	(delayMili@a+1)^0,c
  2569  001DC6  0E02               	movlw	2
  2570  001DC8  6E01               	movwf	delayMili@a^0,c
  2571  001DCA  EC84  F00E         	call	_delayMili	;wreg free
  2572  001DCE  0012               	return		;funcret
  2573  001DD0                     __end_of_lcdCommand:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _delayMili *****************
  2577 ;; Defined at:
  2578 ;;		line 10 in file "lcd.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  a               2    0[COMRAM] int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  i               2    3[COMRAM] volatile int 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2592 ;;      Params:         2       0       0       0       0       0       0
  2593 ;;      Locals:         2       0       0       0       0       0       0
  2594 ;;      Temps:          1       0       0       0       0       0       0
  2595 ;;      Totals:         5       0       0       0       0       0       0
  2596 ;;Total ram usage:        5 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_lcdCommand
  2602 ;;		_lcdInit
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text10
  2607  001D08                     __ptext10:
  2608                           	callstack 0
  2609  001D08                     _delayMili:
  2610                           	callstack 28
  2611  001D08                     
  2612                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2613  001D08  0E00               	movlw	0
  2614  001D0A  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2615  001D0C  0E00               	movlw	0
  2616  001D0E  6E04               	movwf	delayMili@i^0,c	;volatile
  2617  001D10  EF8C  F00E         	goto	l2195
  2618  001D14                     l2193:
  2619                           
  2620                           ;lcd.c: 15:  }
  2621  001D14  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2622  001D16  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2623  001D18                     l2195:
  2624  001D18  5001               	movf	delayMili@a^0,w,c
  2625  001D1A  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2626  001D1C  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2627  001D1E  0A80               	xorlw	128
  2628  001D20  6E03               	movwf	??_delayMili^0,c
  2629  001D22  5002               	movf	(delayMili@a+1)^0,w,c
  2630  001D24  0A80               	xorlw	128
  2631  001D26  5803               	subwfb	??_delayMili^0,w,c
  2632  001D28  A0D8               	btfss	status,0,c
  2633  001D2A  EF99  F00E         	goto	u1651
  2634  001D2E  EF9B  F00E         	goto	u1650
  2635  001D32                     u1651:
  2636  001D32  EF8A  F00E         	goto	l2193
  2637  001D36                     u1650:
  2638  001D36  0012               	return		;funcret
  2639  001D38                     __end_of_delayMili:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _lcdChar *****************
  2643 ;; Defined at:
  2644 ;;		line 52 in file "lcd.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  value           1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  value           1   13[COMRAM] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2658 ;;      Params:         0       0       0       0       0       0       0
  2659 ;;      Locals:         1       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0
  2661 ;;      Totals:         1       0       0       0       0       0       0
  2662 ;;Total ram usage:        1 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 4
  2665 ;; This function calls:
  2666 ;;		_delayMicro
  2667 ;;		_pushByte
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;;		_lcdString
  2671 ;;		_lcdNumber
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text11
  2676  001DD0                     __ptext11:
  2677                           	callstack 0
  2678  001DD0                     _lcdChar:
  2679                           	callstack 26
  2680                           
  2681                           ;incstack = 0
  2682                           ;lcdChar@value stored from wreg
  2683  001DD0  6E0E               	movwf	lcdChar@value^0,c
  2684  001DD2                     
  2685                           ;lcd.c: 53:  pushByte(value, 1);
  2686  001DD2  0E00               	movlw	0
  2687  001DD4  6E0B               	movwf	(pushByte@rs+1)^0,c
  2688  001DD6  0E01               	movlw	1
  2689  001DD8  6E0A               	movwf	pushByte@rs^0,c
  2690  001DDA  500E               	movf	lcdChar@value^0,w,c
  2691  001DDC  EC44  F00D         	call	_pushByte
  2692  001DE0                     
  2693                           ;lcd.c: 54:  delayMicro(80);
  2694  001DE0  0E00               	movlw	0
  2695  001DE2  6E02               	movwf	(delayMicro@a+1)^0,c
  2696  001DE4  0E50               	movlw	80
  2697  001DE6  6E01               	movwf	delayMicro@a^0,c
  2698  001DE8  EC07  F00F         	call	_delayMicro	;wreg free
  2699  001DEC  0012               	return		;funcret
  2700  001DEE                     __end_of_lcdChar:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _pushByte *****************
  2704 ;; Defined at:
  2705 ;;		line 31 in file "lcd.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  value           1    wreg     unsigned char 
  2708 ;;  rs              2    9[COMRAM] int 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  value           1   12[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         2       0       0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0
  2722 ;;      Temps:          1       0       0       0       0       0       0
  2723 ;;      Totals:         4       0       0       0       0       0       0
  2724 ;;Total ram usage:        4 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 3
  2727 ;; This function calls:
  2728 ;;		_digitalWrite
  2729 ;;		_pulseEnablePin
  2730 ;;		_soWrite
  2731 ;; This function is called by:
  2732 ;;		_lcdCommand
  2733 ;;		_lcdChar
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text12
  2738  001A88                     __ptext12:
  2739                           	callstack 0
  2740  001A88                     _pushByte:
  2741                           	callstack 25
  2742                           
  2743                           ;incstack = 0
  2744                           ;pushByte@value stored from wreg
  2745  001A88  6E0D               	movwf	pushByte@value^0,c
  2746  001A8A                     
  2747                           ;lcd.c: 32:  soWrite(value >> 4);
  2748  001A8A  C00D  F00C         	movff	pushByte@value,??_pushByte
  2749  001A8E  3A0C               	swapf	??_pushByte^0,f,c
  2750  001A90  0E0F               	movlw	15
  2751  001A92  160C               	andwf	??_pushByte^0,f,c
  2752  001A94  500C               	movf	??_pushByte^0,w,c
  2753  001A96  6E07               	movwf	soWrite@value^0,c
  2754  001A98  6A08               	clrf	(soWrite@value+1)^0,c
  2755  001A9A  ECC8  F00D         	call	_soWrite	;wreg free
  2756                           
  2757                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2758  001A9E  0E00               	movlw	0
  2759  001AA0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2760  001AA2  0E1D               	movlw	29
  2761  001AA4  6E01               	movwf	digitalWrite@pin^0,c
  2762  001AA6  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2763  001AAA  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2764  001AAE  ECCF  F008         	call	_digitalWrite	;wreg free
  2765                           
  2766                           ;lcd.c: 34:  pulseEnablePin();
  2767  001AB2  ECEF  F00D         	call	_pulseEnablePin	;wreg free
  2768                           
  2769                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2770  001AB6  C00D  F00C         	movff	pushByte@value,??_pushByte
  2771  001ABA  0E0F               	movlw	15
  2772  001ABC  160C               	andwf	??_pushByte^0,f,c
  2773  001ABE  500C               	movf	??_pushByte^0,w,c
  2774  001AC0  6E07               	movwf	soWrite@value^0,c
  2775  001AC2  6A08               	clrf	(soWrite@value+1)^0,c
  2776  001AC4  ECC8  F00D         	call	_soWrite	;wreg free
  2777                           
  2778                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2779  001AC8  0E00               	movlw	0
  2780  001ACA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2781  001ACC  0E1D               	movlw	29
  2782  001ACE  6E01               	movwf	digitalWrite@pin^0,c
  2783  001AD0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2784  001AD4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2785  001AD8  ECCF  F008         	call	_digitalWrite	;wreg free
  2786                           
  2787                           ;lcd.c: 38:  pulseEnablePin();
  2788  001ADC  ECEF  F00D         	call	_pulseEnablePin	;wreg free
  2789  001AE0  0012               	return		;funcret
  2790  001AE2                     __end_of_pushByte:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _pulseEnablePin *****************
  2794 ;; Defined at:
  2795 ;;		line 18 in file "lcd.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2809 ;;      Params:         0       0       0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0
  2812 ;;      Totals:         0       0       0       0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 1
  2816 ;; This function calls:
  2817 ;;		_delayMicro
  2818 ;;		_digitalWrite
  2819 ;; This function is called by:
  2820 ;;		_pushNibble
  2821 ;;		_pushByte
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text13
  2826  001BDE                     __ptext13:
  2827                           	callstack 0
  2828  001BDE                     _pulseEnablePin:
  2829                           	callstack 26
  2830  001BDE                     
  2831                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2832  001BDE  0E00               	movlw	0
  2833  001BE0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2834  001BE2  0E1C               	movlw	28
  2835  001BE4  6E01               	movwf	digitalWrite@pin^0,c
  2836  001BE6  0E00               	movlw	0
  2837  001BE8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2838  001BEA  0E01               	movlw	1
  2839  001BEC  6E03               	movwf	digitalWrite@value^0,c
  2840  001BEE  ECCF  F008         	call	_digitalWrite	;wreg free
  2841  001BF2                     
  2842                           ;lcd.c: 20:  delayMicro(5);
  2843  001BF2  0E00               	movlw	0
  2844  001BF4  6E02               	movwf	(delayMicro@a+1)^0,c
  2845  001BF6  0E05               	movlw	5
  2846  001BF8  6E01               	movwf	delayMicro@a^0,c
  2847  001BFA  EC07  F00F         	call	_delayMicro	;wreg free
  2848  001BFE                     
  2849                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2850  001BFE  0E00               	movlw	0
  2851  001C00  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2852  001C02  0E1C               	movlw	28
  2853  001C04  6E01               	movwf	digitalWrite@pin^0,c
  2854  001C06  0E00               	movlw	0
  2855  001C08  6E04               	movwf	(digitalWrite@value+1)^0,c
  2856  001C0A  0E00               	movlw	0
  2857  001C0C  6E03               	movwf	digitalWrite@value^0,c
  2858  001C0E  ECCF  F008         	call	_digitalWrite	;wreg free
  2859                           
  2860                           ;lcd.c: 22:  delayMicro(5);
  2861  001C12  0E00               	movlw	0
  2862  001C14  6E02               	movwf	(delayMicro@a+1)^0,c
  2863  001C16  0E05               	movlw	5
  2864  001C18  6E01               	movwf	delayMicro@a^0,c
  2865  001C1A  EC07  F00F         	call	_delayMicro	;wreg free
  2866  001C1E  0012               	return		;funcret
  2867  001C20                     __end_of_pulseEnablePin:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _delayMicro *****************
  2871 ;; Defined at:
  2872 ;;		line 5 in file "lcd.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  a               2    0[COMRAM] int 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  i               2    0        volatile int 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		None
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2886 ;;      Params:         2       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0
  2889 ;;      Totals:         2       0       0       0       0       0       0
  2890 ;;Total ram usage:        2 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_pulseEnablePin
  2896 ;;		_lcdChar
  2897 ;;		_lcdInit
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text14
  2902  001E0E                     __ptext14:
  2903                           	callstack 0
  2904  001E0E                     _delayMicro:
  2905                           	callstack 26
  2906  001E0E  0012               	return		;funcret
  2907  001E10                     __end_of_delayMicro:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _kpRead *****************
  2911 ;; Defined at:
  2912 ;;		line 14 in file "keypad.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  2    0[COMRAM] unsigned int 
  2919 ;; Registers used:
  2920 ;;		None
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2926 ;;      Params:         2       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0
  2929 ;;      Totals:         2       0       0       0       0       0       0
  2930 ;;Total ram usage:        2 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text15
  2940  001E04                     __ptext15:
  2941                           	callstack 0
  2942  001E04                     _kpRead:
  2943                           	callstack 30
  2944  001E04                     
  2945                           ;keypad.c: 15:     return keys;
  2946  001E04  C041  F001         	movff	_keys,?_kpRead
  2947  001E08  C042  F002         	movff	_keys+1,?_kpRead+1
  2948  001E0C  0012               	return		;funcret
  2949  001E0E                     __end_of_kpRead:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _kpInit *****************
  2953 ;; Defined at:
  2954 ;;		line 54 in file "keypad.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2968 ;;      Params:         0       0       0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 2
  2975 ;; This function calls:
  2976 ;;		_pinMode
  2977 ;;		_soInit
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text16
  2984  001CD6                     __ptext16:
  2985                           	callstack 0
  2986  001CD6                     _kpInit:
  2987                           	callstack 28
  2988  001CD6                     
  2989                           ;keypad.c: 55:   soInit();
  2990  001CD6  EC2F  F00E         	call	_soInit	;wreg free
  2991                           
  2992                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2993  001CDA  0E00               	movlw	0
  2994  001CDC  6E02               	movwf	(pinMode@pin+1)^0,c
  2995  001CDE  0E0A               	movlw	10
  2996  001CE0  6E01               	movwf	pinMode@pin^0,c
  2997  001CE2  0E00               	movlw	0
  2998  001CE4  6E04               	movwf	(pinMode@type+1)^0,c
  2999  001CE6  0E01               	movlw	1
  3000  001CE8  6E03               	movwf	pinMode@type^0,c
  3001  001CEA  ECA8  F007         	call	_pinMode	;wreg free
  3002                           
  3003                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3004  001CEE  0E00               	movlw	0
  3005  001CF0  6E02               	movwf	(pinMode@pin+1)^0,c
  3006  001CF2  0E09               	movlw	9
  3007  001CF4  6E01               	movwf	pinMode@pin^0,c
  3008  001CF6  0E00               	movlw	0
  3009  001CF8  6E04               	movwf	(pinMode@type+1)^0,c
  3010  001CFA  0E01               	movlw	1
  3011  001CFC  6E03               	movwf	pinMode@type^0,c
  3012  001CFE  ECA8  F007         	call	_pinMode	;wreg free
  3013  001D02                     
  3014                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3015  001D02  0E0C               	movlw	12
  3016  001D04  6EC1               	movwf	193,c	;volatile
  3017  001D06  0012               	return		;funcret
  3018  001D08                     __end_of_kpInit:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _soInit *****************
  3022 ;; Defined at:
  3023 ;;		line 3 in file "so.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3037 ;;      Params:         0       0       0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 1
  3044 ;; This function calls:
  3045 ;;		_pinMode
  3046 ;; This function is called by:
  3047 ;;		_kpInit
  3048 ;;		_lcdInit
  3049 ;;		_ssdInit
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text17
  3054  001C5E                     __ptext17:
  3055                           	callstack 0
  3056  001C5E                     _soInit:
  3057                           	callstack 28
  3058  001C5E                     
  3059                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3060  001C5E  0E00               	movlw	0
  3061  001C60  6E02               	movwf	(pinMode@pin+1)^0,c
  3062  001C62  0E1F               	movlw	31
  3063  001C64  6E01               	movwf	pinMode@pin^0,c
  3064  001C66  0E00               	movlw	0
  3065  001C68  6E04               	movwf	(pinMode@type+1)^0,c
  3066  001C6A  0E00               	movlw	0
  3067  001C6C  6E03               	movwf	pinMode@type^0,c
  3068  001C6E  ECA8  F007         	call	_pinMode	;wreg free
  3069                           
  3070                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3071  001C72  0E00               	movlw	0
  3072  001C74  6E02               	movwf	(pinMode@pin+1)^0,c
  3073  001C76  0E08               	movlw	8
  3074  001C78  6E01               	movwf	pinMode@pin^0,c
  3075  001C7A  0E00               	movlw	0
  3076  001C7C  6E04               	movwf	(pinMode@type+1)^0,c
  3077  001C7E  0E00               	movlw	0
  3078  001C80  6E03               	movwf	pinMode@type^0,c
  3079  001C82  ECA8  F007         	call	_pinMode	;wreg free
  3080                           
  3081                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3082  001C86  0E00               	movlw	0
  3083  001C88  6E02               	movwf	(pinMode@pin+1)^0,c
  3084  001C8A  0E1E               	movlw	30
  3085  001C8C  6E01               	movwf	pinMode@pin^0,c
  3086  001C8E  0E00               	movlw	0
  3087  001C90  6E04               	movwf	(pinMode@type+1)^0,c
  3088  001C92  0E00               	movlw	0
  3089  001C94  6E03               	movwf	pinMode@type^0,c
  3090  001C96  ECA8  F007         	call	_pinMode	;wreg free
  3091  001C9A  0012               	return		;funcret
  3092  001C9C                     __end_of_soInit:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _pinMode *****************
  3096 ;; Defined at:
  3097 ;;		line 54 in file "io.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  pin             2    0[COMRAM] int 
  3100 ;;  type            2    2[COMRAM] int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         4       0       0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0
  3114 ;;      Temps:          2       0       0       0       0       0       0
  3115 ;;      Totals:         6       0       0       0       0       0       0
  3116 ;;Total ram usage:        6 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_kpInit
  3122 ;;		_lcdInit
  3123 ;;		_rgbInit
  3124 ;;		_soInit
  3125 ;;		_ssdInit
  3126 ;;		_adcInit
  3127 ;;		_i2cInit
  3128 ;;		_read_SCL
  3129 ;;		_read_SDA
  3130 ;;		_clear_SCL
  3131 ;;		_clear_SDA
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text18
  3136  000F50                     __ptext18:
  3137                           	callstack 0
  3138  000F50                     _pinMode:
  3139                           	callstack 28
  3140  000F50                     
  3141                           ;io.c: 56:     if(pin <8){
  3142  000F50  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3143  000F52  EFB6  F007         	goto	u1450
  3144  000F56  5002               	movf	(pinMode@pin+1)^0,w,c
  3145  000F58  E107               	bnz	u1451
  3146  000F5A  0E08               	movlw	8
  3147  000F5C  5C01               	subwf	pinMode@pin^0,w,c
  3148  000F5E  B0D8               	btfsc	status,0,c
  3149  000F60  EFB4  F007         	goto	u1451
  3150  000F64  EFB6  F007         	goto	u1450
  3151  000F68                     u1451:
  3152  000F68  EFE0  F007         	goto	l2159
  3153  000F6C                     u1450:
  3154  000F6C                     
  3155                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3156  000F6C  5003               	movf	pinMode@type^0,w,c
  3157  000F6E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3158  000F70  B4D8               	btfsc	status,2,c
  3159  000F72  EFBD  F007         	goto	u1461
  3160  000F76  EFBF  F007         	goto	u1460
  3161  000F7A                     u1461:
  3162  000F7A  EFCF  F007         	goto	l2157
  3163  000F7E                     u1460:
  3164  000F7E  C001  F005         	movff	pinMode@pin,??_pinMode
  3165  000F82  0E01               	movlw	1
  3166  000F84  6E06               	movwf	(??_pinMode+1)^0,c
  3167  000F86  2A05               	incf	??_pinMode^0,f,c
  3168  000F88  EFC8  F007         	goto	u1474
  3169  000F8C                     u1475:
  3170  000F8C  90D8               	bcf	status,0,c
  3171  000F8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3172  000F90                     u1474:
  3173  000F90  2E05               	decfsz	??_pinMode^0,f,c
  3174  000F92  EFC6  F007         	goto	u1475
  3175  000F96  5006               	movf	(??_pinMode+1)^0,w,c
  3176  000F98  1292               	iorwf	146,f,c	;volatile
  3177  000F9A  EFCE  F008         	goto	l195
  3178  000F9E                     l2157:
  3179  000F9E  C001  F005         	movff	pinMode@pin,??_pinMode
  3180  000FA2  0E01               	movlw	1
  3181  000FA4  6E06               	movwf	(??_pinMode+1)^0,c
  3182  000FA6  2A05               	incf	??_pinMode^0,f,c
  3183  000FA8  EFD8  F007         	goto	u1484
  3184  000FAC                     u1485:
  3185  000FAC  90D8               	bcf	status,0,c
  3186  000FAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  3187  000FB0                     u1484:
  3188  000FB0  2E05               	decfsz	??_pinMode^0,f,c
  3189  000FB2  EFD6  F007         	goto	u1485
  3190  000FB6  5006               	movf	(??_pinMode+1)^0,w,c
  3191  000FB8  0AFF               	xorlw	255
  3192  000FBA  1692               	andwf	146,f,c	;volatile
  3193  000FBC  EFCE  F008         	goto	l195
  3194  000FC0                     l2159:
  3195  000FC0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3196  000FC2  EFEE  F007         	goto	u1490
  3197  000FC6  5002               	movf	(pinMode@pin+1)^0,w,c
  3198  000FC8  E107               	bnz	u1491
  3199  000FCA  0E10               	movlw	16
  3200  000FCC  5C01               	subwf	pinMode@pin^0,w,c
  3201  000FCE  B0D8               	btfsc	status,0,c
  3202  000FD0  EFEC  F007         	goto	u1491
  3203  000FD4  EFEE  F007         	goto	u1490
  3204  000FD8                     u1491:
  3205  000FD8  EF1C  F008         	goto	l2167
  3206  000FDC                     u1490:
  3207  000FDC                     
  3208                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3209  000FDC  5003               	movf	pinMode@type^0,w,c
  3210  000FDE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3211  000FE0  B4D8               	btfsc	status,2,c
  3212  000FE2  EFF5  F007         	goto	u1501
  3213  000FE6  EFF7  F007         	goto	u1500
  3214  000FEA                     u1501:
  3215  000FEA  EF09  F008         	goto	l2165
  3216  000FEE                     u1500:
  3217  000FEE  C001  F005         	movff	pinMode@pin,??_pinMode
  3218  000FF2  0EF8               	movlw	-8
  3219  000FF4  2605               	addwf	??_pinMode^0,f,c
  3220  000FF6  0E01               	movlw	1
  3221  000FF8  6E06               	movwf	(??_pinMode+1)^0,c
  3222  000FFA  2A05               	incf	??_pinMode^0,f,c
  3223  000FFC  EF02  F008         	goto	u1514
  3224  001000                     u1515:
  3225  001000  90D8               	bcf	status,0,c
  3226  001002  3606               	rlcf	(??_pinMode+1)^0,f,c
  3227  001004                     u1514:
  3228  001004  2E05               	decfsz	??_pinMode^0,f,c
  3229  001006  EF00  F008         	goto	u1515
  3230  00100A  5006               	movf	(??_pinMode+1)^0,w,c
  3231  00100C  1293               	iorwf	147,f,c	;volatile
  3232  00100E  EFCE  F008         	goto	l195
  3233  001012                     l2165:
  3234  001012  C001  F005         	movff	pinMode@pin,??_pinMode
  3235  001016  0EF8               	movlw	-8
  3236  001018  2605               	addwf	??_pinMode^0,f,c
  3237  00101A  0E01               	movlw	1
  3238  00101C  6E06               	movwf	(??_pinMode+1)^0,c
  3239  00101E  2A05               	incf	??_pinMode^0,f,c
  3240  001020  EF14  F008         	goto	u1524
  3241  001024                     u1525:
  3242  001024  90D8               	bcf	status,0,c
  3243  001026  3606               	rlcf	(??_pinMode+1)^0,f,c
  3244  001028                     u1524:
  3245  001028  2E05               	decfsz	??_pinMode^0,f,c
  3246  00102A  EF12  F008         	goto	u1525
  3247  00102E  5006               	movf	(??_pinMode+1)^0,w,c
  3248  001030  0AFF               	xorlw	255
  3249  001032  1693               	andwf	147,f,c	;volatile
  3250  001034  EFCE  F008         	goto	l195
  3251  001038                     l2167:
  3252  001038  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3253  00103A  EF2A  F008         	goto	u1530
  3254  00103E  5002               	movf	(pinMode@pin+1)^0,w,c
  3255  001040  E107               	bnz	u1531
  3256  001042  0E18               	movlw	24
  3257  001044  5C01               	subwf	pinMode@pin^0,w,c
  3258  001046  B0D8               	btfsc	status,0,c
  3259  001048  EF28  F008         	goto	u1531
  3260  00104C  EF2A  F008         	goto	u1530
  3261  001050                     u1531:
  3262  001050  EF58  F008         	goto	l2175
  3263  001054                     u1530:
  3264  001054                     
  3265                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3266  001054  5003               	movf	pinMode@type^0,w,c
  3267  001056  1004               	iorwf	(pinMode@type+1)^0,w,c
  3268  001058  B4D8               	btfsc	status,2,c
  3269  00105A  EF31  F008         	goto	u1541
  3270  00105E  EF33  F008         	goto	u1540
  3271  001062                     u1541:
  3272  001062  EF45  F008         	goto	l2173
  3273  001066                     u1540:
  3274  001066  C001  F005         	movff	pinMode@pin,??_pinMode
  3275  00106A  0EF0               	movlw	-16
  3276  00106C  2605               	addwf	??_pinMode^0,f,c
  3277  00106E  0E01               	movlw	1
  3278  001070  6E06               	movwf	(??_pinMode+1)^0,c
  3279  001072  2A05               	incf	??_pinMode^0,f,c
  3280  001074  EF3E  F008         	goto	u1554
  3281  001078                     u1555:
  3282  001078  90D8               	bcf	status,0,c
  3283  00107A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3284  00107C                     u1554:
  3285  00107C  2E05               	decfsz	??_pinMode^0,f,c
  3286  00107E  EF3C  F008         	goto	u1555
  3287  001082  5006               	movf	(??_pinMode+1)^0,w,c
  3288  001084  1294               	iorwf	148,f,c	;volatile
  3289  001086  EFCE  F008         	goto	l195
  3290  00108A                     l2173:
  3291  00108A  C001  F005         	movff	pinMode@pin,??_pinMode
  3292  00108E  0EF0               	movlw	-16
  3293  001090  2605               	addwf	??_pinMode^0,f,c
  3294  001092  0E01               	movlw	1
  3295  001094  6E06               	movwf	(??_pinMode+1)^0,c
  3296  001096  2A05               	incf	??_pinMode^0,f,c
  3297  001098  EF50  F008         	goto	u1564
  3298  00109C                     u1565:
  3299  00109C  90D8               	bcf	status,0,c
  3300  00109E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3301  0010A0                     u1564:
  3302  0010A0  2E05               	decfsz	??_pinMode^0,f,c
  3303  0010A2  EF4E  F008         	goto	u1565
  3304  0010A6  5006               	movf	(??_pinMode+1)^0,w,c
  3305  0010A8  0AFF               	xorlw	255
  3306  0010AA  1694               	andwf	148,f,c	;volatile
  3307  0010AC  EFCE  F008         	goto	l195
  3308  0010B0                     l2175:
  3309  0010B0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3310  0010B2  EF66  F008         	goto	u1570
  3311  0010B6  5002               	movf	(pinMode@pin+1)^0,w,c
  3312  0010B8  E107               	bnz	u1571
  3313  0010BA  0E20               	movlw	32
  3314  0010BC  5C01               	subwf	pinMode@pin^0,w,c
  3315  0010BE  B0D8               	btfsc	status,0,c
  3316  0010C0  EF64  F008         	goto	u1571
  3317  0010C4  EF66  F008         	goto	u1570
  3318  0010C8                     u1571:
  3319  0010C8  EF94  F008         	goto	l2183
  3320  0010CC                     u1570:
  3321  0010CC                     
  3322                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3323  0010CC  5003               	movf	pinMode@type^0,w,c
  3324  0010CE  1004               	iorwf	(pinMode@type+1)^0,w,c
  3325  0010D0  B4D8               	btfsc	status,2,c
  3326  0010D2  EF6D  F008         	goto	u1581
  3327  0010D6  EF6F  F008         	goto	u1580
  3328  0010DA                     u1581:
  3329  0010DA  EF81  F008         	goto	l2181
  3330  0010DE                     u1580:
  3331  0010DE  C001  F005         	movff	pinMode@pin,??_pinMode
  3332  0010E2  0EE8               	movlw	-24
  3333  0010E4  2605               	addwf	??_pinMode^0,f,c
  3334  0010E6  0E01               	movlw	1
  3335  0010E8  6E06               	movwf	(??_pinMode+1)^0,c
  3336  0010EA  2A05               	incf	??_pinMode^0,f,c
  3337  0010EC  EF7A  F008         	goto	u1594
  3338  0010F0                     u1595:
  3339  0010F0  90D8               	bcf	status,0,c
  3340  0010F2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3341  0010F4                     u1594:
  3342  0010F4  2E05               	decfsz	??_pinMode^0,f,c
  3343  0010F6  EF78  F008         	goto	u1595
  3344  0010FA  5006               	movf	(??_pinMode+1)^0,w,c
  3345  0010FC  1295               	iorwf	149,f,c	;volatile
  3346  0010FE  EFCE  F008         	goto	l195
  3347  001102                     l2181:
  3348  001102  C001  F005         	movff	pinMode@pin,??_pinMode
  3349  001106  0EE8               	movlw	-24
  3350  001108  2605               	addwf	??_pinMode^0,f,c
  3351  00110A  0E01               	movlw	1
  3352  00110C  6E06               	movwf	(??_pinMode+1)^0,c
  3353  00110E  2A05               	incf	??_pinMode^0,f,c
  3354  001110  EF8C  F008         	goto	u1604
  3355  001114                     u1605:
  3356  001114  90D8               	bcf	status,0,c
  3357  001116  3606               	rlcf	(??_pinMode+1)^0,f,c
  3358  001118                     u1604:
  3359  001118  2E05               	decfsz	??_pinMode^0,f,c
  3360  00111A  EF8A  F008         	goto	u1605
  3361  00111E  5006               	movf	(??_pinMode+1)^0,w,c
  3362  001120  0AFF               	xorlw	255
  3363  001122  1695               	andwf	149,f,c	;volatile
  3364  001124  EFCE  F008         	goto	l195
  3365  001128                     l2183:
  3366  001128  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3367  00112A  EFA2  F008         	goto	u1610
  3368  00112E  5002               	movf	(pinMode@pin+1)^0,w,c
  3369  001130  E107               	bnz	u1611
  3370  001132  0E28               	movlw	40
  3371  001134  5C01               	subwf	pinMode@pin^0,w,c
  3372  001136  B0D8               	btfsc	status,0,c
  3373  001138  EFA0  F008         	goto	u1611
  3374  00113C  EFA2  F008         	goto	u1610
  3375  001140                     u1611:
  3376  001140  EFCE  F008         	goto	l195
  3377  001144                     u1610:
  3378  001144                     
  3379                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3380  001144  5003               	movf	pinMode@type^0,w,c
  3381  001146  1004               	iorwf	(pinMode@type+1)^0,w,c
  3382  001148  B4D8               	btfsc	status,2,c
  3383  00114A  EFA9  F008         	goto	u1621
  3384  00114E  EFAB  F008         	goto	u1620
  3385  001152                     u1621:
  3386  001152  EFBD  F008         	goto	l2189
  3387  001156                     u1620:
  3388  001156  C001  F005         	movff	pinMode@pin,??_pinMode
  3389  00115A  0EE0               	movlw	-32
  3390  00115C  2605               	addwf	??_pinMode^0,f,c
  3391  00115E  0E01               	movlw	1
  3392  001160  6E06               	movwf	(??_pinMode+1)^0,c
  3393  001162  2A05               	incf	??_pinMode^0,f,c
  3394  001164  EFB6  F008         	goto	u1634
  3395  001168                     u1635:
  3396  001168  90D8               	bcf	status,0,c
  3397  00116A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3398  00116C                     u1634:
  3399  00116C  2E05               	decfsz	??_pinMode^0,f,c
  3400  00116E  EFB4  F008         	goto	u1635
  3401  001172  5006               	movf	(??_pinMode+1)^0,w,c
  3402  001174  1296               	iorwf	150,f,c	;volatile
  3403  001176  EFCE  F008         	goto	l195
  3404  00117A                     l2189:
  3405  00117A  C001  F005         	movff	pinMode@pin,??_pinMode
  3406  00117E  0EE0               	movlw	-32
  3407  001180  2605               	addwf	??_pinMode^0,f,c
  3408  001182  0E01               	movlw	1
  3409  001184  6E06               	movwf	(??_pinMode+1)^0,c
  3410  001186  2A05               	incf	??_pinMode^0,f,c
  3411  001188  EFC8  F008         	goto	u1644
  3412  00118C                     u1645:
  3413  00118C  90D8               	bcf	status,0,c
  3414  00118E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3415  001190                     u1644:
  3416  001190  2E05               	decfsz	??_pinMode^0,f,c
  3417  001192  EFC6  F008         	goto	u1645
  3418  001196  5006               	movf	(??_pinMode+1)^0,w,c
  3419  001198  0AFF               	xorlw	255
  3420  00119A  1696               	andwf	150,f,c	;volatile
  3421  00119C                     l195:
  3422  00119C  0012               	return		;funcret
  3423  00119E                     __end_of_pinMode:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _kpDebounce *****************
  3427 ;; Defined at:
  3428 ;;		line 27 in file "keypad.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               2   12[COMRAM] int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         0       0       0       0       0       0       0
  3443 ;;      Locals:         2       0       0       0       0       0       0
  3444 ;;      Temps:          3       0       0       0       0       0       0
  3445 ;;      Totals:         5       0       0       0       0       0       0
  3446 ;;Total ram usage:        5 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 3
  3449 ;; This function calls:
  3450 ;;		_digitalRead
  3451 ;;		_soWrite
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text19
  3458  0016C2                     __ptext19:
  3459                           	callstack 0
  3460  0016C2                     _kpDebounce:
  3461                           	callstack 27
  3462  0016C2                     
  3463                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3464  0016C2  0E00               	movlw	0
  3465  0016C4  6E40               	movwf	(kpDebounce@newRead+1)^0,c
  3466  0016C6  0E00               	movlw	0
  3467  0016C8  6E3F               	movwf	kpDebounce@newRead^0,c
  3468                           
  3469                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3470  0016CA  0E00               	movlw	0
  3471  0016CC  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3472  0016CE  0E00               	movlw	0
  3473  0016D0  6E0D               	movwf	kpDebounce@i^0,c
  3474  0016D2                     l2329:
  3475  0016D2  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3476  0016D4  EF75  F00B         	goto	u1871
  3477  0016D8  500E               	movf	(kpDebounce@i+1)^0,w,c
  3478  0016DA  E109               	bnz	u1870
  3479  0016DC  0E05               	movlw	5
  3480  0016DE  5C0D               	subwf	kpDebounce@i^0,w,c
  3481  0016E0  A0D8               	btfss	status,0,c
  3482  0016E2  EF75  F00B         	goto	u1871
  3483  0016E6  EF77  F00B         	goto	u1870
  3484  0016EA                     u1871:
  3485  0016EA  EF79  F00B         	goto	l2333
  3486  0016EE                     u1870:
  3487  0016EE  EFDA  F00B         	goto	l2345
  3488  0016F2                     l2333:
  3489                           
  3490                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3491  0016F2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3492  0016F6  0E03               	movlw	3
  3493  0016F8  260A               	addwf	??_kpDebounce^0,f,c
  3494  0016FA  0E01               	movlw	1
  3495  0016FC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3496  0016FE  0E00               	movlw	0
  3497  001700  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3498  001702  2A0A               	incf	??_kpDebounce^0,f,c
  3499  001704  EF87  F00B         	goto	u1884
  3500  001708                     u1885:
  3501  001708  90D8               	bcf	status,0,c
  3502  00170A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3503  00170C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3504  00170E                     u1884:
  3505  00170E  2E0A               	decfsz	??_kpDebounce^0,f,c
  3506  001710  EF84  F00B         	goto	u1885
  3507  001714  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3508  001718  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3509  00171C  ECC8  F00D         	call	_soWrite	;wreg free
  3510                           
  3511                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3512  001720  0E00               	movlw	0
  3513  001722  6E02               	movwf	(digitalRead@pin+1)^0,c
  3514  001724  0E0A               	movlw	10
  3515  001726  6E01               	movwf	digitalRead@pin^0,c
  3516  001728  ECAC  F00A         	call	_digitalRead	;wreg free
  3517  00172C  5001               	movf	?_digitalRead^0,w,c
  3518  00172E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3519  001730  B4D8               	btfsc	status,2,c
  3520  001732  EF9D  F00B         	goto	u1891
  3521  001736  EF9F  F00B         	goto	u1890
  3522  00173A                     u1891:
  3523  00173A  EFB2  F00B         	goto	l2337
  3524  00173E                     u1890:
  3525  00173E                     
  3526                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3527  00173E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3528  001742  0E01               	movlw	1
  3529  001744  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3530  001746  0E00               	movlw	0
  3531  001748  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3532  00174A  2A0A               	incf	??_kpDebounce^0,f,c
  3533  00174C  EFAB  F00B         	goto	u1904
  3534  001750                     u1905:
  3535  001750  90D8               	bcf	status,0,c
  3536  001752  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3537  001754  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3538  001756                     u1904:
  3539  001756  2E0A               	decfsz	??_kpDebounce^0,f,c
  3540  001758  EFA8  F00B         	goto	u1905
  3541  00175C  500B               	movf	(??_kpDebounce+1)^0,w,c
  3542  00175E  123F               	iorwf	kpDebounce@newRead^0,f,c
  3543  001760  500C               	movf	(??_kpDebounce+2)^0,w,c
  3544  001762  1240               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3545  001764                     l2337:
  3546                           
  3547                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3548  001764  0E00               	movlw	0
  3549  001766  6E02               	movwf	(digitalRead@pin+1)^0,c
  3550  001768  0E09               	movlw	9
  3551  00176A  6E01               	movwf	digitalRead@pin^0,c
  3552  00176C  ECAC  F00A         	call	_digitalRead	;wreg free
  3553  001770  5001               	movf	?_digitalRead^0,w,c
  3554  001772  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3555  001774  B4D8               	btfsc	status,2,c
  3556  001776  EFBF  F00B         	goto	u1911
  3557  00177A  EFC1  F00B         	goto	u1910
  3558  00177E                     u1911:
  3559  00177E  EFD6  F00B         	goto	l2341
  3560  001782                     u1910:
  3561  001782                     
  3562                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3563  001782  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3564  001786  0E05               	movlw	5
  3565  001788  260A               	addwf	??_kpDebounce^0,f,c
  3566  00178A  0E01               	movlw	1
  3567  00178C  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3568  00178E  0E00               	movlw	0
  3569  001790  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3570  001792  2A0A               	incf	??_kpDebounce^0,f,c
  3571  001794  EFCF  F00B         	goto	u1924
  3572  001798                     u1925:
  3573  001798  90D8               	bcf	status,0,c
  3574  00179A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3575  00179C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3576  00179E                     u1924:
  3577  00179E  2E0A               	decfsz	??_kpDebounce^0,f,c
  3578  0017A0  EFCC  F00B         	goto	u1925
  3579  0017A4  500B               	movf	(??_kpDebounce+1)^0,w,c
  3580  0017A6  123F               	iorwf	kpDebounce@newRead^0,f,c
  3581  0017A8  500C               	movf	(??_kpDebounce+2)^0,w,c
  3582  0017AA  1240               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3583  0017AC                     l2341:
  3584                           
  3585                           ;keypad.c: 42:     }
  3586  0017AC  4A0D               	infsnz	kpDebounce@i^0,f,c
  3587  0017AE  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3588  0017B0  EF69  F00B         	goto	l2329
  3589  0017B4                     l2345:
  3590                           
  3591                           ;keypad.c: 43:     if (oldRead == newRead) {
  3592  0017B4  503F               	movf	kpDebounce@newRead^0,w,c
  3593  0017B6  183D               	xorwf	kpDebounce@oldRead^0,w,c
  3594  0017B8  E107               	bnz	u1931
  3595  0017BA  5040               	movf	(kpDebounce@newRead+1)^0,w,c
  3596  0017BC  183E               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3597  0017BE  A4D8               	btfss	status,2,c
  3598  0017C0  EFE4  F00B         	goto	u1931
  3599  0017C4  EFE6  F00B         	goto	u1930
  3600  0017C8                     u1931:
  3601  0017C8  EFE9  F00B         	goto	l2349
  3602  0017CC                     u1930:
  3603  0017CC                     
  3604                           ;keypad.c: 44:         tempo--;
  3605  0017CC  0648               	decf	kpDebounce@tempo^0,f,c
  3606                           
  3607                           ;keypad.c: 45:     } else {
  3608  0017CE  EFEF  F00B         	goto	l232
  3609  0017D2                     l2349:
  3610                           
  3611                           ;keypad.c: 46:         tempo = 1;
  3612  0017D2  0E01               	movlw	1
  3613  0017D4  6E48               	movwf	kpDebounce@tempo^0,c
  3614  0017D6                     
  3615                           ;keypad.c: 47:         oldRead = newRead;
  3616  0017D6  C03F  F03D         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3617  0017DA  C040  F03E         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3618  0017DE                     l232:
  3619                           
  3620                           ;keypad.c: 49:     if (tempo == 0) {
  3621  0017DE  5048               	movf	kpDebounce@tempo^0,w,c
  3622  0017E0  A4D8               	btfss	status,2,c
  3623  0017E2  EFF5  F00B         	goto	u1941
  3624  0017E6  EFF7  F00B         	goto	u1940
  3625  0017EA                     u1941:
  3626  0017EA  EFFB  F00B         	goto	l234
  3627  0017EE                     u1940:
  3628  0017EE                     
  3629                           ;keypad.c: 50:         keys = oldRead;
  3630  0017EE  C03D  F041         	movff	kpDebounce@oldRead,_keys
  3631  0017F2  C03E  F042         	movff	kpDebounce@oldRead+1,_keys+1
  3632  0017F6                     l234:
  3633  0017F6  0012               	return		;funcret
  3634  0017F8                     __end_of_kpDebounce:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _soWrite *****************
  3638 ;; Defined at:
  3639 ;;		line 18 in file "so.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  value           2    6[COMRAM] int 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  i               1    8[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3653 ;;      Params:         2       0       0       0       0       0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0
  3656 ;;      Totals:         3       0       0       0       0       0       0
  3657 ;;Total ram usage:        3 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 2
  3660 ;; This function calls:
  3661 ;;		_PulseClockData
  3662 ;;		_PulseEnClock
  3663 ;;		_digitalWrite
  3664 ;; This function is called by:
  3665 ;;		_kpDebounce
  3666 ;;		_pushNibble
  3667 ;;		_pushByte
  3668 ;;		_ssdUpdate
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text20
  3673  001B90                     __ptext20:
  3674                           	callstack 0
  3675  001B90                     _soWrite:
  3676                           	callstack 27
  3677  001B90                     
  3678                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3679  001B90  0E00               	movlw	0
  3680  001B92  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3681  001B94  0E08               	movlw	8
  3682  001B96  6E01               	movwf	digitalWrite@pin^0,c
  3683  001B98  0E00               	movlw	0
  3684  001B9A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3685  001B9C  0E00               	movlw	0
  3686  001B9E  6E03               	movwf	digitalWrite@value^0,c
  3687  001BA0  ECCF  F008         	call	_digitalWrite	;wreg free
  3688  001BA4                     
  3689                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3690  001BA4  0E00               	movlw	0
  3691  001BA6  6E09               	movwf	soWrite@i^0,c
  3692  001BA8                     l2135:
  3693                           
  3694                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3695  001BA8  0E00               	movlw	0
  3696  001BAA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3697  001BAC  0E1E               	movlw	30
  3698  001BAE  6E01               	movwf	digitalWrite@pin^0,c
  3699  001BB0  0E80               	movlw	128
  3700  001BB2  1407               	andwf	soWrite@value^0,w,c
  3701  001BB4  6E03               	movwf	digitalWrite@value^0,c
  3702  001BB6  6A04               	clrf	(digitalWrite@value+1)^0,c
  3703  001BB8  ECCF  F008         	call	_digitalWrite	;wreg free
  3704                           
  3705                           ;so.c: 23:   PulseClockData();
  3706  001BBC  ECB1  F00E         	call	_PulseClockData	;wreg free
  3707  001BC0                     
  3708                           ;so.c: 24:   value <<= 1;
  3709  001BC0  90D8               	bcf	status,0,c
  3710  001BC2  3607               	rlcf	soWrite@value^0,f,c
  3711  001BC4  3608               	rlcf	(soWrite@value+1)^0,f,c
  3712  001BC6                     
  3713                           ;so.c: 25:  }
  3714  001BC6  2A09               	incf	soWrite@i^0,f,c
  3715  001BC8  0E07               	movlw	7
  3716  001BCA  6409               	cpfsgt	soWrite@i^0,c
  3717  001BCC  EFEA  F00D         	goto	u1441
  3718  001BD0  EFEC  F00D         	goto	u1440
  3719  001BD4                     u1441:
  3720  001BD4  EFD4  F00D         	goto	l2135
  3721  001BD8                     u1440:
  3722  001BD8                     
  3723                           ;so.c: 26:  PulseEnClock();
  3724  001BD8  EC9C  F00E         	call	_PulseEnClock	;wreg free
  3725  001BDC  0012               	return		;funcret
  3726  001BDE                     __end_of_soWrite:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _PulseEnClock *****************
  3730 ;; Defined at:
  3731 ;;		line 9 in file "so.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3745 ;;      Params:         0       0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 1
  3752 ;; This function calls:
  3753 ;;		_digitalWrite
  3754 ;; This function is called by:
  3755 ;;		_soWrite
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text21
  3760  001D38                     __ptext21:
  3761                           	callstack 0
  3762  001D38                     _PulseEnClock:
  3763                           	callstack 27
  3764  001D38                     
  3765                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3766  001D38  0E00               	movlw	0
  3767  001D3A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3768  001D3C  0E1F               	movlw	31
  3769  001D3E  6E01               	movwf	digitalWrite@pin^0,c
  3770  001D40  0E00               	movlw	0
  3771  001D42  6E04               	movwf	(digitalWrite@value+1)^0,c
  3772  001D44  0E01               	movlw	1
  3773  001D46  6E03               	movwf	digitalWrite@value^0,c
  3774  001D48  ECCF  F008         	call	_digitalWrite	;wreg free
  3775                           
  3776                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3777  001D4C  0E00               	movlw	0
  3778  001D4E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3779  001D50  0E1F               	movlw	31
  3780  001D52  6E01               	movwf	digitalWrite@pin^0,c
  3781  001D54  0E00               	movlw	0
  3782  001D56  6E04               	movwf	(digitalWrite@value+1)^0,c
  3783  001D58  0E00               	movlw	0
  3784  001D5A  6E03               	movwf	digitalWrite@value^0,c
  3785  001D5C  ECCF  F008         	call	_digitalWrite	;wreg free
  3786  001D60  0012               	return		;funcret
  3787  001D62                     __end_of_PulseEnClock:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _PulseClockData *****************
  3791 ;; Defined at:
  3792 ;;		line 14 in file "so.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3806 ;;      Params:         0       0       0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0
  3809 ;;      Totals:         0       0       0       0       0       0       0
  3810 ;;Total ram usage:        0 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 1
  3813 ;; This function calls:
  3814 ;;		_digitalWrite
  3815 ;; This function is called by:
  3816 ;;		_soWrite
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text22
  3821  001D62                     __ptext22:
  3822                           	callstack 0
  3823  001D62                     _PulseClockData:
  3824                           	callstack 27
  3825  001D62                     
  3826                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3827  001D62  0E00               	movlw	0
  3828  001D64  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3829  001D66  0E08               	movlw	8
  3830  001D68  6E01               	movwf	digitalWrite@pin^0,c
  3831  001D6A  0E00               	movlw	0
  3832  001D6C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3833  001D6E  0E01               	movlw	1
  3834  001D70  6E03               	movwf	digitalWrite@value^0,c
  3835  001D72  ECCF  F008         	call	_digitalWrite	;wreg free
  3836                           
  3837                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3838  001D76  0E00               	movlw	0
  3839  001D78  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3840  001D7A  0E08               	movlw	8
  3841  001D7C  6E01               	movwf	digitalWrite@pin^0,c
  3842  001D7E  0E00               	movlw	0
  3843  001D80  6E04               	movwf	(digitalWrite@value+1)^0,c
  3844  001D82  0E00               	movlw	0
  3845  001D84  6E03               	movwf	digitalWrite@value^0,c
  3846  001D86  ECCF  F008         	call	_digitalWrite	;wreg free
  3847  001D8A  0012               	return		;funcret
  3848  001D8C                     __end_of_PulseClockData:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _digitalWrite *****************
  3852 ;; Defined at:
  3853 ;;		line 14 in file "io.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  pin             2    0[COMRAM] int 
  3856 ;;  value           2    2[COMRAM] int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3868 ;;      Params:         4       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0
  3870 ;;      Temps:          2       0       0       0       0       0       0
  3871 ;;      Totals:         6       0       0       0       0       0       0
  3872 ;;Total ram usage:        6 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_pulseEnablePin
  3878 ;;		_pushNibble
  3879 ;;		_pushByte
  3880 ;;		_rgbColor
  3881 ;;		_PulseEnClock
  3882 ;;		_PulseClockData
  3883 ;;		_soWrite
  3884 ;;		_ssdUpdate
  3885 ;;		_clear_SCL
  3886 ;;		_clear_SDA
  3887 ;;		_turnOn
  3888 ;;		_turnOff
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text23
  3893  00119E                     __ptext23:
  3894                           	callstack 0
  3895  00119E                     _digitalWrite:
  3896                           	callstack 28
  3897  00119E                     
  3898                           ;io.c: 16:     if(pin <8){
  3899  00119E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3900  0011A0  EFDD  F008         	goto	u1240
  3901  0011A4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3902  0011A6  E107               	bnz	u1241
  3903  0011A8  0E08               	movlw	8
  3904  0011AA  5C01               	subwf	digitalWrite@pin^0,w,c
  3905  0011AC  B0D8               	btfsc	status,0,c
  3906  0011AE  EFDB  F008         	goto	u1241
  3907  0011B2  EFDD  F008         	goto	u1240
  3908  0011B6                     u1241:
  3909  0011B6  EF07  F009         	goto	l2091
  3910  0011BA                     u1240:
  3911  0011BA                     
  3912                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3913  0011BA  5003               	movf	digitalWrite@value^0,w,c
  3914  0011BC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3915  0011BE  B4D8               	btfsc	status,2,c
  3916  0011C0  EFE4  F008         	goto	u1251
  3917  0011C4  EFE6  F008         	goto	u1250
  3918  0011C8                     u1251:
  3919  0011C8  EFF6  F008         	goto	l2089
  3920  0011CC                     u1250:
  3921  0011CC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3922  0011D0  0E01               	movlw	1
  3923  0011D2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3924  0011D4  2A05               	incf	??_digitalWrite^0,f,c
  3925  0011D6  EFEF  F008         	goto	u1264
  3926  0011DA                     u1265:
  3927  0011DA  90D8               	bcf	status,0,c
  3928  0011DC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3929  0011DE                     u1264:
  3930  0011DE  2E05               	decfsz	??_digitalWrite^0,f,c
  3931  0011E0  EFED  F008         	goto	u1265
  3932  0011E4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3933  0011E6  1280               	iorwf	128,f,c	;volatile
  3934  0011E8  EFF5  F009         	goto	l161
  3935  0011EC                     l2089:
  3936  0011EC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3937  0011F0  0E01               	movlw	1
  3938  0011F2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3939  0011F4  2A05               	incf	??_digitalWrite^0,f,c
  3940  0011F6  EFFF  F008         	goto	u1274
  3941  0011FA                     u1275:
  3942  0011FA  90D8               	bcf	status,0,c
  3943  0011FC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3944  0011FE                     u1274:
  3945  0011FE  2E05               	decfsz	??_digitalWrite^0,f,c
  3946  001200  EFFD  F008         	goto	u1275
  3947  001204  5006               	movf	(??_digitalWrite+1)^0,w,c
  3948  001206  0AFF               	xorlw	255
  3949  001208  1680               	andwf	128,f,c	;volatile
  3950  00120A  EFF5  F009         	goto	l161
  3951  00120E                     l2091:
  3952  00120E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3953  001210  EF15  F009         	goto	u1280
  3954  001214  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3955  001216  E107               	bnz	u1281
  3956  001218  0E10               	movlw	16
  3957  00121A  5C01               	subwf	digitalWrite@pin^0,w,c
  3958  00121C  B0D8               	btfsc	status,0,c
  3959  00121E  EF13  F009         	goto	u1281
  3960  001222  EF15  F009         	goto	u1280
  3961  001226                     u1281:
  3962  001226  EF43  F009         	goto	l2099
  3963  00122A                     u1280:
  3964  00122A                     
  3965                           ;io.c: 20:         pin -=8;
  3966  00122A  0EF8               	movlw	248
  3967  00122C  2601               	addwf	digitalWrite@pin^0,f,c
  3968  00122E  0EFF               	movlw	255
  3969  001230  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3970                           
  3971                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3972  001232  5003               	movf	digitalWrite@value^0,w,c
  3973  001234  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3974  001236  B4D8               	btfsc	status,2,c
  3975  001238  EF20  F009         	goto	u1291
  3976  00123C  EF22  F009         	goto	u1290
  3977  001240                     u1291:
  3978  001240  EF32  F009         	goto	l2097
  3979  001244                     u1290:
  3980  001244  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3981  001248  0E01               	movlw	1
  3982  00124A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3983  00124C  2A05               	incf	??_digitalWrite^0,f,c
  3984  00124E  EF2B  F009         	goto	u1304
  3985  001252                     u1305:
  3986  001252  90D8               	bcf	status,0,c
  3987  001254  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3988  001256                     u1304:
  3989  001256  2E05               	decfsz	??_digitalWrite^0,f,c
  3990  001258  EF29  F009         	goto	u1305
  3991  00125C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3992  00125E  1281               	iorwf	129,f,c	;volatile
  3993  001260  EFF5  F009         	goto	l161
  3994  001264                     l2097:
  3995  001264  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3996  001268  0E01               	movlw	1
  3997  00126A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3998  00126C  2A05               	incf	??_digitalWrite^0,f,c
  3999  00126E  EF3B  F009         	goto	u1314
  4000  001272                     u1315:
  4001  001272  90D8               	bcf	status,0,c
  4002  001274  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4003  001276                     u1314:
  4004  001276  2E05               	decfsz	??_digitalWrite^0,f,c
  4005  001278  EF39  F009         	goto	u1315
  4006  00127C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4007  00127E  0AFF               	xorlw	255
  4008  001280  1681               	andwf	129,f,c	;volatile
  4009  001282  EFF5  F009         	goto	l161
  4010  001286                     l2099:
  4011  001286  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4012  001288  EF51  F009         	goto	u1320
  4013  00128C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4014  00128E  E107               	bnz	u1321
  4015  001290  0E18               	movlw	24
  4016  001292  5C01               	subwf	digitalWrite@pin^0,w,c
  4017  001294  B0D8               	btfsc	status,0,c
  4018  001296  EF4F  F009         	goto	u1321
  4019  00129A  EF51  F009         	goto	u1320
  4020  00129E                     u1321:
  4021  00129E  EF7F  F009         	goto	l2107
  4022  0012A2                     u1320:
  4023  0012A2                     
  4024                           ;io.c: 24:         pin -=16;
  4025  0012A2  0EF0               	movlw	240
  4026  0012A4  2601               	addwf	digitalWrite@pin^0,f,c
  4027  0012A6  0EFF               	movlw	255
  4028  0012A8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4029                           
  4030                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4031  0012AA  5003               	movf	digitalWrite@value^0,w,c
  4032  0012AC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4033  0012AE  B4D8               	btfsc	status,2,c
  4034  0012B0  EF5C  F009         	goto	u1331
  4035  0012B4  EF5E  F009         	goto	u1330
  4036  0012B8                     u1331:
  4037  0012B8  EF6E  F009         	goto	l2105
  4038  0012BC                     u1330:
  4039  0012BC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4040  0012C0  0E01               	movlw	1
  4041  0012C2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4042  0012C4  2A05               	incf	??_digitalWrite^0,f,c
  4043  0012C6  EF67  F009         	goto	u1344
  4044  0012CA                     u1345:
  4045  0012CA  90D8               	bcf	status,0,c
  4046  0012CC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4047  0012CE                     u1344:
  4048  0012CE  2E05               	decfsz	??_digitalWrite^0,f,c
  4049  0012D0  EF65  F009         	goto	u1345
  4050  0012D4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4051  0012D6  1282               	iorwf	130,f,c	;volatile
  4052  0012D8  EFF5  F009         	goto	l161
  4053  0012DC                     l2105:
  4054  0012DC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4055  0012E0  0E01               	movlw	1
  4056  0012E2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4057  0012E4  2A05               	incf	??_digitalWrite^0,f,c
  4058  0012E6  EF77  F009         	goto	u1354
  4059  0012EA                     u1355:
  4060  0012EA  90D8               	bcf	status,0,c
  4061  0012EC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4062  0012EE                     u1354:
  4063  0012EE  2E05               	decfsz	??_digitalWrite^0,f,c
  4064  0012F0  EF75  F009         	goto	u1355
  4065  0012F4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4066  0012F6  0AFF               	xorlw	255
  4067  0012F8  1682               	andwf	130,f,c	;volatile
  4068  0012FA  EFF5  F009         	goto	l161
  4069  0012FE                     l2107:
  4070  0012FE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4071  001300  EF8D  F009         	goto	u1360
  4072  001304  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4073  001306  E107               	bnz	u1361
  4074  001308  0E20               	movlw	32
  4075  00130A  5C01               	subwf	digitalWrite@pin^0,w,c
  4076  00130C  B0D8               	btfsc	status,0,c
  4077  00130E  EF8B  F009         	goto	u1361
  4078  001312  EF8D  F009         	goto	u1360
  4079  001316                     u1361:
  4080  001316  EFBB  F009         	goto	l2115
  4081  00131A                     u1360:
  4082  00131A                     
  4083                           ;io.c: 28:         pin -=24;
  4084  00131A  0EE8               	movlw	232
  4085  00131C  2601               	addwf	digitalWrite@pin^0,f,c
  4086  00131E  0EFF               	movlw	255
  4087  001320  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4088                           
  4089                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4090  001322  5003               	movf	digitalWrite@value^0,w,c
  4091  001324  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4092  001326  B4D8               	btfsc	status,2,c
  4093  001328  EF98  F009         	goto	u1371
  4094  00132C  EF9A  F009         	goto	u1370
  4095  001330                     u1371:
  4096  001330  EFAA  F009         	goto	l2113
  4097  001334                     u1370:
  4098  001334  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4099  001338  0E01               	movlw	1
  4100  00133A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4101  00133C  2A05               	incf	??_digitalWrite^0,f,c
  4102  00133E  EFA3  F009         	goto	u1384
  4103  001342                     u1385:
  4104  001342  90D8               	bcf	status,0,c
  4105  001344  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4106  001346                     u1384:
  4107  001346  2E05               	decfsz	??_digitalWrite^0,f,c
  4108  001348  EFA1  F009         	goto	u1385
  4109  00134C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4110  00134E  1283               	iorwf	131,f,c	;volatile
  4111  001350  EFF5  F009         	goto	l161
  4112  001354                     l2113:
  4113  001354  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4114  001358  0E01               	movlw	1
  4115  00135A  6E06               	movwf	(??_digitalWrite+1)^0,c
  4116  00135C  2A05               	incf	??_digitalWrite^0,f,c
  4117  00135E  EFB3  F009         	goto	u1394
  4118  001362                     u1395:
  4119  001362  90D8               	bcf	status,0,c
  4120  001364  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4121  001366                     u1394:
  4122  001366  2E05               	decfsz	??_digitalWrite^0,f,c
  4123  001368  EFB1  F009         	goto	u1395
  4124  00136C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4125  00136E  0AFF               	xorlw	255
  4126  001370  1683               	andwf	131,f,c	;volatile
  4127  001372  EFF5  F009         	goto	l161
  4128  001376                     l2115:
  4129  001376  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4130  001378  EFC9  F009         	goto	u1400
  4131  00137C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4132  00137E  E107               	bnz	u1401
  4133  001380  0E28               	movlw	40
  4134  001382  5C01               	subwf	digitalWrite@pin^0,w,c
  4135  001384  B0D8               	btfsc	status,0,c
  4136  001386  EFC7  F009         	goto	u1401
  4137  00138A  EFC9  F009         	goto	u1400
  4138  00138E                     u1401:
  4139  00138E  EFF5  F009         	goto	l161
  4140  001392                     u1400:
  4141  001392                     
  4142                           ;io.c: 32:         pin -=32;
  4143  001392  0EE0               	movlw	224
  4144  001394  2601               	addwf	digitalWrite@pin^0,f,c
  4145  001396  0EFF               	movlw	255
  4146  001398  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4147                           
  4148                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4149  00139A  5003               	movf	digitalWrite@value^0,w,c
  4150  00139C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4151  00139E  B4D8               	btfsc	status,2,c
  4152  0013A0  EFD4  F009         	goto	u1411
  4153  0013A4  EFD6  F009         	goto	u1410
  4154  0013A8                     u1411:
  4155  0013A8  EFE6  F009         	goto	l2121
  4156  0013AC                     u1410:
  4157  0013AC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4158  0013B0  0E01               	movlw	1
  4159  0013B2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4160  0013B4  2A05               	incf	??_digitalWrite^0,f,c
  4161  0013B6  EFDF  F009         	goto	u1424
  4162  0013BA                     u1425:
  4163  0013BA  90D8               	bcf	status,0,c
  4164  0013BC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4165  0013BE                     u1424:
  4166  0013BE  2E05               	decfsz	??_digitalWrite^0,f,c
  4167  0013C0  EFDD  F009         	goto	u1425
  4168  0013C4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4169  0013C6  1284               	iorwf	132,f,c	;volatile
  4170  0013C8  EFF5  F009         	goto	l161
  4171  0013CC                     l2121:
  4172  0013CC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4173  0013D0  0E01               	movlw	1
  4174  0013D2  6E06               	movwf	(??_digitalWrite+1)^0,c
  4175  0013D4  2A05               	incf	??_digitalWrite^0,f,c
  4176  0013D6  EFEF  F009         	goto	u1434
  4177  0013DA                     u1435:
  4178  0013DA  90D8               	bcf	status,0,c
  4179  0013DC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4180  0013DE                     u1434:
  4181  0013DE  2E05               	decfsz	??_digitalWrite^0,f,c
  4182  0013E0  EFED  F009         	goto	u1435
  4183  0013E4  5006               	movf	(??_digitalWrite+1)^0,w,c
  4184  0013E6  0AFF               	xorlw	255
  4185  0013E8  1684               	andwf	132,f,c	;volatile
  4186  0013EA                     l161:
  4187  0013EA  0012               	return		;funcret
  4188  0013EC                     __end_of_digitalWrite:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _digitalRead *****************
  4192 ;; Defined at:
  4193 ;;		line 39 in file "io.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  pin             2    0[COMRAM] int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    0[COMRAM] int 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         2       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0
  4209 ;;      Temps:          3       0       0       0       0       0       0
  4210 ;;      Totals:         5       0       0       0       0       0       0
  4211 ;;Total ram usage:        5 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_kpDebounce
  4217 ;;		_read_SCL
  4218 ;;		_read_SDA
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text24
  4223  001558                     __ptext24:
  4224                           	callstack 0
  4225  001558                     _digitalRead:
  4226                           	callstack 29
  4227  001558                     
  4228                           ;io.c: 40:     if(pin <8){
  4229  001558  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4230  00155A  EFBA  F00A         	goto	u1680
  4231  00155E  5002               	movf	(digitalRead@pin+1)^0,w,c
  4232  001560  E107               	bnz	u1681
  4233  001562  0E08               	movlw	8
  4234  001564  5C01               	subwf	digitalRead@pin^0,w,c
  4235  001566  B0D8               	btfsc	status,0,c
  4236  001568  EFB8  F00A         	goto	u1681
  4237  00156C  EFBA  F00A         	goto	u1680
  4238  001570                     u1681:
  4239  001570  EFCE  F00A         	goto	l2211
  4240  001574                     u1680:
  4241  001574                     
  4242                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4243  001574  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4244  001578  0E01               	movlw	1
  4245  00157A  6E04               	movwf	(??_digitalRead+1)^0,c
  4246  00157C  2A03               	incf	??_digitalRead^0,f,c
  4247  00157E  EFC3  F00A         	goto	u1694
  4248  001582                     u1695:
  4249  001582  90D8               	bcf	status,0,c
  4250  001584  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4251  001586                     u1694:
  4252  001586  2E03               	decfsz	??_digitalRead^0,f,c
  4253  001588  EFC1  F00A         	goto	u1695
  4254  00158C  5004               	movf	(??_digitalRead+1)^0,w,c
  4255  00158E  1480               	andwf	128,w,c	;volatile
  4256  001590  6E05               	movwf	(??_digitalRead+2)^0,c
  4257  001592  5005               	movf	(??_digitalRead+2)^0,w,c
  4258  001594  6E01               	movwf	?_digitalRead^0,c
  4259  001596  6A02               	clrf	(?_digitalRead+1)^0,c
  4260  001598  EF60  F00B         	goto	l165
  4261  00159C                     l2211:
  4262  00159C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4263  00159E  EFDC  F00A         	goto	u1700
  4264  0015A2  5002               	movf	(digitalRead@pin+1)^0,w,c
  4265  0015A4  E107               	bnz	u1701
  4266  0015A6  0E10               	movlw	16
  4267  0015A8  5C01               	subwf	digitalRead@pin^0,w,c
  4268  0015AA  B0D8               	btfsc	status,0,c
  4269  0015AC  EFDA  F00A         	goto	u1701
  4270  0015B0  EFDC  F00A         	goto	u1700
  4271  0015B4                     u1701:
  4272  0015B4  EFF2  F00A         	goto	l2219
  4273  0015B8                     u1700:
  4274  0015B8                     
  4275                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4276  0015B8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4277  0015BC  0EF8               	movlw	-8
  4278  0015BE  2603               	addwf	??_digitalRead^0,f,c
  4279  0015C0  0E01               	movlw	1
  4280  0015C2  6E04               	movwf	(??_digitalRead+1)^0,c
  4281  0015C4  2A03               	incf	??_digitalRead^0,f,c
  4282  0015C6  EFE7  F00A         	goto	u1714
  4283  0015CA                     u1715:
  4284  0015CA  90D8               	bcf	status,0,c
  4285  0015CC  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4286  0015CE                     u1714:
  4287  0015CE  2E03               	decfsz	??_digitalRead^0,f,c
  4288  0015D0  EFE5  F00A         	goto	u1715
  4289  0015D4  5004               	movf	(??_digitalRead+1)^0,w,c
  4290  0015D6  1481               	andwf	129,w,c	;volatile
  4291  0015D8  6E05               	movwf	(??_digitalRead+2)^0,c
  4292  0015DA  5005               	movf	(??_digitalRead+2)^0,w,c
  4293  0015DC  6E01               	movwf	?_digitalRead^0,c
  4294  0015DE  6A02               	clrf	(?_digitalRead+1)^0,c
  4295  0015E0  EF60  F00B         	goto	l165
  4296  0015E4                     l2219:
  4297  0015E4  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4298  0015E6  EF00  F00B         	goto	u1720
  4299  0015EA  5002               	movf	(digitalRead@pin+1)^0,w,c
  4300  0015EC  E107               	bnz	u1721
  4301  0015EE  0E18               	movlw	24
  4302  0015F0  5C01               	subwf	digitalRead@pin^0,w,c
  4303  0015F2  B0D8               	btfsc	status,0,c
  4304  0015F4  EFFE  F00A         	goto	u1721
  4305  0015F8  EF00  F00B         	goto	u1720
  4306  0015FC                     u1721:
  4307  0015FC  EF16  F00B         	goto	l2227
  4308  001600                     u1720:
  4309  001600                     
  4310                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4311  001600  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4312  001604  0EF0               	movlw	-16
  4313  001606  2603               	addwf	??_digitalRead^0,f,c
  4314  001608  0E01               	movlw	1
  4315  00160A  6E04               	movwf	(??_digitalRead+1)^0,c
  4316  00160C  2A03               	incf	??_digitalRead^0,f,c
  4317  00160E  EF0B  F00B         	goto	u1734
  4318  001612                     u1735:
  4319  001612  90D8               	bcf	status,0,c
  4320  001614  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4321  001616                     u1734:
  4322  001616  2E03               	decfsz	??_digitalRead^0,f,c
  4323  001618  EF09  F00B         	goto	u1735
  4324  00161C  5004               	movf	(??_digitalRead+1)^0,w,c
  4325  00161E  1482               	andwf	130,w,c	;volatile
  4326  001620  6E05               	movwf	(??_digitalRead+2)^0,c
  4327  001622  5005               	movf	(??_digitalRead+2)^0,w,c
  4328  001624  6E01               	movwf	?_digitalRead^0,c
  4329  001626  6A02               	clrf	(?_digitalRead+1)^0,c
  4330  001628  EF60  F00B         	goto	l165
  4331  00162C                     l2227:
  4332  00162C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4333  00162E  EF24  F00B         	goto	u1740
  4334  001632  5002               	movf	(digitalRead@pin+1)^0,w,c
  4335  001634  E107               	bnz	u1741
  4336  001636  0E20               	movlw	32
  4337  001638  5C01               	subwf	digitalRead@pin^0,w,c
  4338  00163A  B0D8               	btfsc	status,0,c
  4339  00163C  EF22  F00B         	goto	u1741
  4340  001640  EF24  F00B         	goto	u1740
  4341  001644                     u1741:
  4342  001644  EF3A  F00B         	goto	l2235
  4343  001648                     u1740:
  4344  001648                     
  4345                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4346  001648  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4347  00164C  0EE8               	movlw	-24
  4348  00164E  2603               	addwf	??_digitalRead^0,f,c
  4349  001650  0E01               	movlw	1
  4350  001652  6E04               	movwf	(??_digitalRead+1)^0,c
  4351  001654  2A03               	incf	??_digitalRead^0,f,c
  4352  001656  EF2F  F00B         	goto	u1754
  4353  00165A                     u1755:
  4354  00165A  90D8               	bcf	status,0,c
  4355  00165C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4356  00165E                     u1754:
  4357  00165E  2E03               	decfsz	??_digitalRead^0,f,c
  4358  001660  EF2D  F00B         	goto	u1755
  4359  001664  5004               	movf	(??_digitalRead+1)^0,w,c
  4360  001666  1483               	andwf	131,w,c	;volatile
  4361  001668  6E05               	movwf	(??_digitalRead+2)^0,c
  4362  00166A  5005               	movf	(??_digitalRead+2)^0,w,c
  4363  00166C  6E01               	movwf	?_digitalRead^0,c
  4364  00166E  6A02               	clrf	(?_digitalRead+1)^0,c
  4365  001670  EF60  F00B         	goto	l165
  4366  001674                     l2235:
  4367  001674  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4368  001676  EF48  F00B         	goto	u1760
  4369  00167A  5002               	movf	(digitalRead@pin+1)^0,w,c
  4370  00167C  E107               	bnz	u1761
  4371  00167E  0E28               	movlw	40
  4372  001680  5C01               	subwf	digitalRead@pin^0,w,c
  4373  001682  B0D8               	btfsc	status,0,c
  4374  001684  EF46  F00B         	goto	u1761
  4375  001688  EF48  F00B         	goto	u1760
  4376  00168C                     u1761:
  4377  00168C  EF5E  F00B         	goto	l170
  4378  001690                     u1760:
  4379  001690                     
  4380                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4381  001690  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4382  001694  0EE0               	movlw	-32
  4383  001696  2603               	addwf	??_digitalRead^0,f,c
  4384  001698  0E01               	movlw	1
  4385  00169A  6E04               	movwf	(??_digitalRead+1)^0,c
  4386  00169C  2A03               	incf	??_digitalRead^0,f,c
  4387  00169E  EF53  F00B         	goto	u1774
  4388  0016A2                     u1775:
  4389  0016A2  90D8               	bcf	status,0,c
  4390  0016A4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4391  0016A6                     u1774:
  4392  0016A6  2E03               	decfsz	??_digitalRead^0,f,c
  4393  0016A8  EF51  F00B         	goto	u1775
  4394  0016AC  5004               	movf	(??_digitalRead+1)^0,w,c
  4395  0016AE  1484               	andwf	132,w,c	;volatile
  4396  0016B0  6E05               	movwf	(??_digitalRead+2)^0,c
  4397  0016B2  5005               	movf	(??_digitalRead+2)^0,w,c
  4398  0016B4  6E01               	movwf	?_digitalRead^0,c
  4399  0016B6  6A02               	clrf	(?_digitalRead+1)^0,c
  4400  0016B8  EF60  F00B         	goto	l165
  4401  0016BC                     l170:
  4402  0016BC                     
  4403                           ;io.c: 51:     return -1;
  4404  0016BC  6801               	setf	?_digitalRead^0,c
  4405  0016BE  6802               	setf	(?_digitalRead+1)^0,c
  4406  0016C0                     l165:
  4407  0016C0  0012               	return		;funcret
  4408  0016C2                     __end_of_digitalRead:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function ___llmod *****************
  4412 ;; Defined at:
  4413 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  dividend        4   13[COMRAM] unsigned long 
  4416 ;;  divisor         4   17[COMRAM] unsigned long 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  counter         1   21[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  4   13[COMRAM] unsigned long 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         8       0       0       0       0       0       0
  4429 ;;      Locals:         1       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0
  4431 ;;      Totals:         9       0       0       0       0       0       0
  4432 ;;Total ram usage:        9 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_main
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text25
  4442  001A00                     __ptext25:
  4443                           	callstack 0
  4444  001A00                     ___llmod:
  4445                           	callstack 30
  4446  001A00  5012               	movf	___llmod@divisor^0,w,c
  4447  001A02  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  4448  001A04  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  4449  001A06  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  4450  001A08  B4D8               	btfsc	status,2,c
  4451  001A0A  EF09  F00D         	goto	u2071
  4452  001A0E  EF0B  F00D         	goto	u2070
  4453  001A12                     u2071:
  4454  001A12  EF3B  F00D         	goto	l972
  4455  001A16                     u2070:
  4456  001A16  0E01               	movlw	1
  4457  001A18  6E16               	movwf	___llmod@counter^0,c
  4458  001A1A  EF15  F00D         	goto	l2489
  4459  001A1E                     l2487:
  4460  001A1E  90D8               	bcf	status,0,c
  4461  001A20  3612               	rlcf	___llmod@divisor^0,f,c
  4462  001A22  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  4463  001A24  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  4464  001A26  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  4465  001A28  2A16               	incf	___llmod@counter^0,f,c
  4466  001A2A                     l2489:
  4467  001A2A  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  4468  001A2C  EF1A  F00D         	goto	u2081
  4469  001A30  EF1C  F00D         	goto	u2080
  4470  001A34                     u2081:
  4471  001A34  EF0F  F00D         	goto	l2487
  4472  001A38                     u2080:
  4473  001A38                     l2491:
  4474  001A38  5012               	movf	___llmod@divisor^0,w,c
  4475  001A3A  5C0E               	subwf	___llmod@dividend^0,w,c
  4476  001A3C  5013               	movf	(___llmod@divisor+1)^0,w,c
  4477  001A3E  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  4478  001A40  5014               	movf	(___llmod@divisor+2)^0,w,c
  4479  001A42  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  4480  001A44  5015               	movf	(___llmod@divisor+3)^0,w,c
  4481  001A46  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  4482  001A48  A0D8               	btfss	status,0,c
  4483  001A4A  EF29  F00D         	goto	u2091
  4484  001A4E  EF2B  F00D         	goto	u2090
  4485  001A52                     u2091:
  4486  001A52  EF33  F00D         	goto	l2495
  4487  001A56                     u2090:
  4488  001A56  5012               	movf	___llmod@divisor^0,w,c
  4489  001A58  5E0E               	subwf	___llmod@dividend^0,f,c
  4490  001A5A  5013               	movf	(___llmod@divisor+1)^0,w,c
  4491  001A5C  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  4492  001A5E  5014               	movf	(___llmod@divisor+2)^0,w,c
  4493  001A60  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  4494  001A62  5015               	movf	(___llmod@divisor+3)^0,w,c
  4495  001A64  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  4496  001A66                     l2495:
  4497  001A66  90D8               	bcf	status,0,c
  4498  001A68  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  4499  001A6A  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  4500  001A6C  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  4501  001A6E  3212               	rrcf	___llmod@divisor^0,f,c
  4502  001A70  2E16               	decfsz	___llmod@counter^0,f,c
  4503  001A72  EF1C  F00D         	goto	l2491
  4504  001A76                     l972:
  4505  001A76  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4506  001A7A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4507  001A7E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4508  001A82  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4509  001A86  0012               	return		;funcret
  4510  001A88                     __end_of___llmod:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function ___lldiv *****************
  4514 ;; Defined at:
  4515 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  dividend        4    0[COMRAM] unsigned long 
  4518 ;;  divisor         4    4[COMRAM] unsigned long 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  quotient        4    8[COMRAM] unsigned long 
  4521 ;;  counter         1   12[COMRAM] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  4    0[COMRAM] unsigned long 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4531 ;;      Params:         8       0       0       0       0       0       0
  4532 ;;      Locals:         5       0       0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0
  4534 ;;      Totals:        13       0       0       0       0       0       0
  4535 ;;Total ram usage:       13 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text26
  4545  00195C                     __ptext26:
  4546                           	callstack 0
  4547  00195C                     ___lldiv:
  4548                           	callstack 30
  4549  00195C  0E00               	movlw	0
  4550  00195E  6E09               	movwf	___lldiv@quotient^0,c
  4551  001960  0E00               	movlw	0
  4552  001962  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4553  001964  0E00               	movlw	0
  4554  001966  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4555  001968  0E00               	movlw	0
  4556  00196A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4557  00196C  5005               	movf	___lldiv@divisor^0,w,c
  4558  00196E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4559  001970  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4560  001972  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4561  001974  B4D8               	btfsc	status,2,c
  4562  001976  EFBF  F00C         	goto	u2041
  4563  00197A  EFC1  F00C         	goto	u2040
  4564  00197E                     u2041:
  4565  00197E  EFF7  F00C         	goto	l579
  4566  001982                     u2040:
  4567  001982  0E01               	movlw	1
  4568  001984  6E0D               	movwf	___lldiv@counter^0,c
  4569  001986  EFCB  F00C         	goto	l2469
  4570  00198A                     l2467:
  4571  00198A  90D8               	bcf	status,0,c
  4572  00198C  3605               	rlcf	___lldiv@divisor^0,f,c
  4573  00198E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4574  001990  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4575  001992  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4576  001994  2A0D               	incf	___lldiv@counter^0,f,c
  4577  001996                     l2469:
  4578  001996  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4579  001998  EFD0  F00C         	goto	u2051
  4580  00199C  EFD2  F00C         	goto	u2050
  4581  0019A0                     u2051:
  4582  0019A0  EFC5  F00C         	goto	l2467
  4583  0019A4                     u2050:
  4584  0019A4                     l2471:
  4585  0019A4  90D8               	bcf	status,0,c
  4586  0019A6  3609               	rlcf	___lldiv@quotient^0,f,c
  4587  0019A8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4588  0019AA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4589  0019AC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4590  0019AE  5005               	movf	___lldiv@divisor^0,w,c
  4591  0019B0  5C01               	subwf	___lldiv@dividend^0,w,c
  4592  0019B2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4593  0019B4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4594  0019B6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4595  0019B8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4596  0019BA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4597  0019BC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4598  0019BE  A0D8               	btfss	status,0,c
  4599  0019C0  EFE4  F00C         	goto	u2061
  4600  0019C4  EFE6  F00C         	goto	u2060
  4601  0019C8                     u2061:
  4602  0019C8  EFEF  F00C         	goto	l2479
  4603  0019CC                     u2060:
  4604  0019CC  5005               	movf	___lldiv@divisor^0,w,c
  4605  0019CE  5E01               	subwf	___lldiv@dividend^0,f,c
  4606  0019D0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4607  0019D2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4608  0019D4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4609  0019D6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4610  0019D8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4611  0019DA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4612  0019DC  8009               	bsf	___lldiv@quotient^0,0,c
  4613  0019DE                     l2479:
  4614  0019DE  90D8               	bcf	status,0,c
  4615  0019E0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4616  0019E2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4617  0019E4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4618  0019E6  3205               	rrcf	___lldiv@divisor^0,f,c
  4619  0019E8  2E0D               	decfsz	___lldiv@counter^0,f,c
  4620  0019EA  EFD2  F00C         	goto	l2471
  4621  0019EE                     l579:
  4622  0019EE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4623  0019F2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4624  0019F6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4625  0019FA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4626  0019FE  0012               	return		;funcret
  4627  001A00                     __end_of___lldiv:
  4628                           	callstack 0
  4629                           
  4630                           	psect	rparam
  4631  0000                     
  4632                           	psect	idloc
  4633                           
  4634                           ;Config register IDLOC0 @ 0x200000
  4635                           ;	unspecified, using default values
  4636  200000                     	org	2097152
  4637  200000  FF                 	db	255
  4638                           
  4639                           ;Config register IDLOC1 @ 0x200001
  4640                           ;	unspecified, using default values
  4641  200001                     	org	2097153
  4642  200001  FF                 	db	255
  4643                           
  4644                           ;Config register IDLOC2 @ 0x200002
  4645                           ;	unspecified, using default values
  4646  200002                     	org	2097154
  4647  200002  FF                 	db	255
  4648                           
  4649                           ;Config register IDLOC3 @ 0x200003
  4650                           ;	unspecified, using default values
  4651  200003                     	org	2097155
  4652  200003  FF                 	db	255
  4653                           
  4654                           ;Config register IDLOC4 @ 0x200004
  4655                           ;	unspecified, using default values
  4656  200004                     	org	2097156
  4657  200004  FF                 	db	255
  4658                           
  4659                           ;Config register IDLOC5 @ 0x200005
  4660                           ;	unspecified, using default values
  4661  200005                     	org	2097157
  4662  200005  FF                 	db	255
  4663                           
  4664                           ;Config register IDLOC6 @ 0x200006
  4665                           ;	unspecified, using default values
  4666  200006                     	org	2097158
  4667  200006  FF                 	db	255
  4668                           
  4669                           ;Config register IDLOC7 @ 0x200007
  4670                           ;	unspecified, using default values
  4671  200007                     	org	2097159
  4672  200007  FF                 	db	255
  4673                           
  4674                           	psect	config
  4675                           
  4676                           ; Padding undefined space
  4677  300000                     	org	3145728
  4678  300000  FF                 	db	255
  4679                           
  4680                           ;Config register CONFIG1H @ 0x300001
  4681                           ;	Oscillator Selection bits
  4682                           ;	OSC = HS, HS oscillator
  4683                           ;	Fail-Safe Clock Monitor Enable bit
  4684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4685                           ;	Internal/External Oscillator Switchover bit
  4686                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4687  300001                     	org	3145729
  4688  300001  02                 	db	2
  4689                           
  4690                           ;Config register CONFIG2L @ 0x300002
  4691                           ;	Power-up Timer Enable bit
  4692                           ;	PWRT = OFF, PWRT disabled
  4693                           ;	Brown-out Reset Enable bits
  4694                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4695                           ;	Brown Out Reset Voltage bits
  4696                           ;	BORV = 0x2E, user specified literal
  4697  300002                     	org	3145730
  4698  300002  71                 	db	369
  4699                           
  4700                           ;Config register CONFIG2H @ 0x300003
  4701                           ;	Watchdog Timer Enable bit
  4702                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4703                           ;	Watchdog Timer Postscale Select bits
  4704                           ;	WDTPS = 1, 1:1
  4705  300003                     	org	3145731
  4706  300003  00                 	db	0
  4707                           
  4708                           ; Padding undefined space
  4709  300004                     	org	3145732
  4710  300004  FF                 	db	255
  4711                           
  4712                           ;Config register CONFIG3H @ 0x300005
  4713                           ;	CCP2 MUX bit
  4714                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4715                           ;	PORTB A/D Enable bit
  4716                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4717                           ;	Low-Power Timer1 Oscillator Enable bit
  4718                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4719                           ;	MCLR Pin Enable bit
  4720                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4721  300005                     	org	3145733
  4722  300005  83                 	db	131
  4723                           
  4724                           ;Config register CONFIG4L @ 0x300006
  4725                           ;	Stack Full/Underflow Reset Enable bit
  4726                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4727                           ;	Single-Supply ICSP Enable bit
  4728                           ;	LVP = OFF, Single-Supply ICSP disabled
  4729                           ;	Extended Instruction Set Enable bit
  4730                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4731                           ;	Background Debugger Enable bit
  4732                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4733  300006                     	org	3145734
  4734  300006  80                 	db	128
  4735                           
  4736                           ; Padding undefined space
  4737  300007                     	org	3145735
  4738  300007  FF                 	db	255
  4739                           
  4740                           ;Config register CONFIG5L @ 0x300008
  4741                           ;	Code Protection bit
  4742                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4743                           ;	Code Protection bit
  4744                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4745                           ;	Code Protection bit
  4746                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4747                           ;	Code Protection bit
  4748                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4749  300008                     	org	3145736
  4750  300008  0F                 	db	15
  4751                           
  4752                           ;Config register CONFIG5H @ 0x300009
  4753                           ;	Boot Block Code Protection bit
  4754                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4755                           ;	Data EEPROM Code Protection bit
  4756                           ;	CPD = OFF, Data EEPROM not code-protected
  4757  300009                     	org	3145737
  4758  300009  C0                 	db	192
  4759                           
  4760                           ;Config register CONFIG6L @ 0x30000A
  4761                           ;	Write Protection bit
  4762                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4763                           ;	Write Protection bit
  4764                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4765                           ;	Write Protection bit
  4766                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4767                           ;	Write Protection bit
  4768                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4769  30000A                     	org	3145738
  4770  30000A  0F                 	db	15
  4771                           
  4772                           ;Config register CONFIG6H @ 0x30000B
  4773                           ;	Configuration Register Write Protection bit
  4774                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4775                           ;	Boot Block Write Protection bit
  4776                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4777                           ;	Data EEPROM Write Protection bit
  4778                           ;	WRTD = OFF, Data EEPROM not write-protected
  4779  30000B                     	org	3145739
  4780  30000B  E0                 	db	224
  4781                           
  4782                           ;Config register CONFIG7L @ 0x30000C
  4783                           ;	Table Read Protection bit
  4784                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4785                           ;	Table Read Protection bit
  4786                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4787                           ;	Table Read Protection bit
  4788                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4789                           ;	Table Read Protection bit
  4790                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4791  30000C                     	org	3145740
  4792  30000C  0F                 	db	15
  4793                           
  4794                           ;Config register CONFIG7H @ 0x30000D
  4795                           ;	Boot Block Table Read Protection bit
  4796                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4797  30000D                     	org	3145741
  4798  30000D  40                 	db	64
  4799                           tosu	equ	0xFFF
  4800                           tosh	equ	0xFFE
  4801                           tosl	equ	0xFFD
  4802                           stkptr	equ	0xFFC
  4803                           pclatu	equ	0xFFB
  4804                           pclath	equ	0xFFA
  4805                           pcl	equ	0xFF9
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           indf0	equ	0xFEF
  4813                           postinc0	equ	0xFEE
  4814                           postdec0	equ	0xFED
  4815                           preinc0	equ	0xFEC
  4816                           plusw0	equ	0xFEB
  4817                           fsr0h	equ	0xFEA
  4818                           fsr0l	equ	0xFE9
  4819                           wreg	equ	0xFE8
  4820                           indf1	equ	0xFE7
  4821                           postinc1	equ	0xFE6
  4822                           postdec1	equ	0xFE5
  4823                           preinc1	equ	0xFE4
  4824                           plusw1	equ	0xFE3
  4825                           fsr1h	equ	0xFE2
  4826                           fsr1l	equ	0xFE1
  4827                           bsr	equ	0xFE0
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           preinc2	equ	0xFDC
  4832                           plusw2	equ	0xFDB
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ssdDigit
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___llmod
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _lcdChar->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0  198095
                                             24 COMRAM    36    36      0
                            ___lldiv
                            ___llmod
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                            _lcdInit
                        _lcdPosition
                           _rgbColor
                            _rgbInit
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             22 COMRAM     2     1      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    6058
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   29589
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8    2895
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8    2746
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _ssdDigit
     ___lldiv (ARG)
     ___llmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      15        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 17:30:43 2021

         _pulseEnablePin 1BDE                       _v0 0046                       _v1 0045  
                     _v2 0044                       _v3 0043                      l212 1E0C  
                    l232 17DE                      l161 13EA                      l321 195A  
                    l170 16BC                      l234 17F6                      l260 1DB0  
                    l165 16C0                      l237 1D06                      l413 1B38  
                    l166 16BC                      l254 1D36                      l263 1AE0  
                    l271 1CD4                      l423 1556                      l248 1E0E  
                    l336 1C5C                      l257 1C1E                      l274 1DEC  
                    l266 1DCE                      l426 1B8E                      l195 119C  
                    l381 1D8A                      l375 1C9A                      l289 18AA  
                    l481 06B0                      l378 1D60                      l386 1BDC  
                    l491 0D7C                      l483 0BBC                      l586 19FE  
                    l579 19EE                      l972 1A76                      l979 1A86  
                    _PR2 000FCB                      wreg 000FE8                     l2101 12A2  
                   l2111 1334                     l2103 12BC                     l2121 13CC  
                   l2113 1354                     l2105 12DC                     l2211 159C  
                   l2203 1558                     l2115 1376                     l2107 12FE  
                   l2123 1D38                     l2221 1600                     l2213 15B8  
                   l2205 1574                     l2117 1392                     l2109 131A  
                   l2125 1D62                     l2141 1BC8                     l2119 13AC  
                   l2143 1BD8                     l2135 1BA8                     l2127 1B90  
                   l2151 0F50                     l2137 1BC0                     l2129 1BA4  
                   l2161 0FDC                     l2153 0F6C                     l2145 1BDE  
                   l2401 192E                     l2235 1674                     l2227 162C  
                   l2219 15E4                     l2091 120E                     l2083 119E  
                   l2139 1BC6                     l2171 1066                     l2163 0FEE  
                   l2155 0F7E                     l2147 1BF2                     l2251 1D8E  
                   l2403 1946                     l2411 1AF8                     l2237 1690  
                   l2229 1648                     l2093 122A                     l2085 11BA  
                   l2341 17AC                     l2333 16F2                     l2181 1102  
                   l2173 108A                     l2165 1012                     l2157 0F9E  
                   l2325 1E04                     l2149 1BFE                     l2253 1DB4  
                   l2405 1C20                     l2421 1B34                     l2413 1B08  
                   l2095 1244                     l2087 11CC                     l2351 17D6  
                   l2335 173E                     l2327 16C2                     l2183 1128  
                   l2175 10B0                     l2167 1038                     l2159 0FC0  
                   l2191 1D08                     l2415 1B0C                     l2407 1AE4  
                   l2431 1480                     l2423 13EC                     l2097 1264  
                   l2089 11EC                     l2353 17EE                     l2337 1764  
                   l2345 17B4                     l2329 16D2                     l2185 1144  
                   l2177 10CC                     l2169 1054                     l2249 1C5E  
                   l2193 1D14                     l2361 1CAE                     l2417 1B1E  
                   l2409 1AF4                     l2441 14E0                     l2433 1498  
                   l2425 144C                     l2099 1286                     l2347 17CC  
                   l2339 1782                     l2187 1156                     l2179 10DE  
                   l2355 1CD6                     l2195 1D18                     l2371 17F8  
                   l2363 1CB8                     l2419 1B22                     l2443 14E8  
                   l2435 14AC                     l2427 1464                     l2611 066C  
                   l2461 195C                     l2349 17D2                     l2189 117A  
                   l2357 1D02                     l2197 1A8A                     l2381 1898  
                   l2373 1858                     l2365 1CCA                     l2445 1500  
                   l2437 14B4                     l2429 1478                     l2453 151C  
                   l2701 0DB4                     l2621 0684                     l2613 0670  
                   l2471 19A4                     l2463 196C                     l2367 1DD2  
                   l2383 189E                     l2375 1864                     l2359 1C9C  
                   l2391 18D2                     l2447 1514                     l2439 14CC  
                   l2711 0DD2                     l2703 0DBA                     l2631 06D6  
                   l2615 0674                     l2481 19E8                     l2473 19AE  
                   l2465 1982                     l2369 1DE0                     l2385 18A4  
                   l2377 187E                     l2393 18E6                     l2713 0DD8  
                   l2705 0DC0                     l2641 0BE4                     l2633 093E  
                   l2617 0678                     l2609 061C                     l2475 19CC  
                   l2467 198A                     l2491 1A38                     l2483 1A00  
                   l2379 188C                     l2395 18F4                     l2387 18AC  
                   l2459 1B3A                     l2707 0DC6                     l2651 0C1A  
                   l2643 0BF0                     l2715 0DDE                     l2635 0954  
                   l2627 0694                     l2619 067C                     l2477 19DC  
                   l2469 1996                     l2493 1A56                     l2485 1A16  
                   l2397 190C                     l2389 18BA                     l2717 0DE6  
                   l2709 0DCC                     l2661 0C70                     l2653 0C28  
                   l2645 0BFE                     l2637 0BC0                     l2629 06A4  
                   l2725 0F12                     l2479 19DE                     l2495 1A66  
                   l2487 1A1E                     l2399 1920                     l2719 0F0A  
                   l2671 0CAC                     l2663 0C80                     l2655 0C3C  
                   l2647 0C0E                     l2639 0BC8                     l2497 1A70  
                   l2489 1A2A                     l2665 0C8C                     l2657 0C4A  
                   l2649 0C16                     l2771 1530                     l2763 0D2A  
                   l2683 0CDC                     l2675 0CBC                     l2667 0C9C  
                   l2659 0C60                     l2765 0D6E                     l2685 0CE8  
                   l2693 0D0C                     l2695 0D8A                     l2767 0D38  
                   l2687 0CFC                     l2679 0CCC                     l2769 0F26  
                   l2697 0D9A                     l2699 0DAE                     u2000 1AF4  
                   u2001 1AF0                     u2010 1B08                     u2011 1B04  
                   u2020 1B1E                     u2021 1B1A                     u2030 1B34  
                   u2031 1B30                     u2040 1982                     u1400 1392  
                   u1320 12A2                     u1304 1256                     u1240 11BA  
                   u2041 197E                     u1401 138E                     u1321 129E  
                   u1305 1252                     u1241 11B6                     u2050 19A4  
                   u1410 13AC                     u1330 12BC                     u1314 1276  
                   u1250 11CC                     u2051 19A0                     u1411 13A8  
                   u1331 12B8                     u1315 1272                     u1251 11C8  
                   u2060 19CC                     u1500 0FEE                     u2300 0C0E  
                   u2061 19C8                     u1501 0FEA                     u2301 0C0A  
                   u2070 1A16                     u2310 0C28                     u2071 1A12  
                   u2311 0C24                     u2080 1A38                     u1424 13BE  
                   u1360 131A                     u1344 12CE                     u1280 122A  
                   u1264 11DE                     u1440 1BD8                     u2320 0C4A  
                   u2081 1A34                     u1425 13BA                     u1361 1316  
                   u1345 12CA                     u1281 1226                     u1265 11DA  
                   u1441 1BD4                     u2321 0C46                     u2090 1A56  
                   u1434 13DE                     u1370 1334                     u1354 12EE  
                   u1290 1244                     u1274 11FE                     u1610 1144  
                   u1530 1054                     u1514 1004                     u1450 0F6C  
                   u2330 0C60                     u2250 06A4                     u2091 1A52  
                   u1435 13DA                     u1371 1330                     u1355 12EA  
                   u1291 1240                     u1275 11FA                     u1611 1140  
                   u1531 1050                     u1515 1000                     u1451 0F68  
                   u2331 0C5C                     u2251 06A0                     u1700 15B8  
                   u1620 1156                     u1604 1118                     u1540 1066  
                   u1524 1028                     u1460 0F7E                     u2340 0D8A  
                   u2260 06D6                     u1701 15B4                     u1621 1152  
                   u1605 1114                     u1541 1062                     u1525 1024  
                   u1461 0F7A                     u2341 0D86                     u2261 06D2  
                   u2270 0954                     u2271 0950                     u1720 1600  
                   u1384 1346                     u2280 0BE4                     u1721 15FC  
                   u1385 1342                     u2281 0BE0                     u1714 15CE  
                   u1394 1366                     u1634 116C                     u1570 10CC  
                   u1554 107C                     u1490 0FDC                     u1474 0F90  
                   u1650 1D36                     u2290 0BFE                     u1715 15CA  
                   u1395 1362                     u1635 1168                     u1571 10C8  
                   u1555 1078                     u1491 0FD8                     u1475 0F8C  
                   u1651 1D32                     u2291 0BFA                     u1740 1648  
                   u1644 1190                     u1580 10DE                     u1564 10A0  
                   u1484 0FB0                     u1741 1644                     u1645 118C  
                   u1581 10DA                     u1565 109C                     u1485 0FAC  
                   u1734 1616                     u1910 1782                     u1735 1612  
                   u1911 177E                     u1760 1690                     u1680 1574  
                   u1904 1756                     u1761 168C                     u1681 1570  
                   u1905 1750                     u1754 165E                     u1930 17CC  
                   u1594 10F4                     u1755 165A                     u1931 17C8  
                   u1595 10F0                     u1940 17EE                     u1924 179E  
                   u1941 17EA                     u1925 1798                     u1774 16A6  
                   u1694 1586                     u1870 16EE                     u1950 1CAE  
                   u1775 16A2                     u1695 1582                     u1871 16EA  
                   u1951 1CAA                     u1960 1CCA                     u1961 1CC6  
                   u1890 173E                     u1970 18BA                     u1891 173A  
                   u1971 18B6                     u1884 170E                     u1980 18F4  
                   u1885 1708                     u1981 18F0                     u1990 192E  
                   u1991 192A                     _PIR1 000F9E                     _main 061C  
                   _keys 0041         ??_PulseClockData 0007                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 1C20  
                  ?_main 0001          __end_of___lldiv 1A00                    _T0CON 000FD5  
        __end_of___llmod 1A88                    _T2CON 000FCA                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC          __end_of_lcdChar 1DEE  
        __end_of_lcdInit 18AC          __end_of_rgbInit 1C5E          __end_of_pinMode 119E  
                  _valor 0601                    main@i 0026                    main@n 002F  
        __end_of_soWrite 1BDE                    tablat 000FF5          __end_of_ssdInit 1B90  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 13EC  
        __initialization 1DEE          ?_pulseEnablePin 0001             __end_of_main 0F50  
                 ??_main 0019            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 000E                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB              rgbColor@led 0007                   _INTCON 000FF2  
                 _SPBRGH 000FB0     __size_of_lcdPosition 003A                ??___lldiv 0009  
              ??___llmod 0016                   _kpInit 1CD6                   _kpRead 1E04  
       __end_of_rgbColor 195C                   clear_0 1DF4                   _soInit 1C5E  
              ??_lcdChar 000E                   isa$std 000001                ??_lcdInit 000F  
                 main@op 0025                ??_rgbInit 0007         __end_of_ssdDigit 1B3A  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007         __end_of_pushByte 1AE2               __accesstop 0080  
__end_of__initialization 1DFA            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_valor 0611  
     __size_of_delayMili 0030    __size_of_digitalWrite 024E               _delayMicro 1E0E  
             _lcdCommand 1DB2                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP2CON 000FBA                  _BAUDCON 000FB8                  ?_soInit 0001  
             _kpDebounce 16C2       __size_of_ssdUpdate 016C             _digitalWrite 119E  
      __end_of_delayMili 1D38                ?_rgbColor 0007         ??_pulseEnablePin 0007  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 0017  
        kpDebounce@tempo 0048                ?_pushByte 000A                  ___lldiv 195C  
                ___llmod 1A00             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611              ssdDigit@val 0018  
            ssdDigit@pos 0017                  __pcinit 1DEE                  _lcdChar 1DD0  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 17F8  
                __ptext0 061C                  __ptext1 13EC                  __ptext2 1B3A  
                __ptext3 1AE2                  __ptext4 1C20                  __ptext5 18AC  
                __ptext6 1C9C                  __ptext7 17F8                  __ptext8 1D8C  
                __ptext9 1DB2                  _display 0047                  _rgbInit 1C20  
                _pinMode 0F50               delayMili@a 0001               delayMili@i 0004  
                _soWrite 1B90                  _ssdInit 1B3A                  _started 0049  
   end_of_initialization 1DFA            ?_PulseEnClock 0001               ??_rgbColor 0009  
          __Lmediumconst 0000           digitalRead@pin 0001              ?_delayMicro 0001  
        ___lldiv@divisor 0005        __end_of_ssdUpdate 1558          ___lldiv@counter 000D  
             ??_ssdDigit 0018              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               _pushNibble 1D8C            ??_lcdPosition 0013  
         ??_PulseEnClock 0007               main@parado 002E           __end_of_kpInit 1D08  
         __end_of_kpRead 1E0E           __end_of_soInit 1C9C      __size_of_delayMicro 0002  
    start_initialization 1DEE      __end_of_digitalRead 16C2      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136          ___llmod@divisor 0012          ___llmod@counter 0016  
    __end_of_lcdPosition 1CD6        kpDebounce@oldRead 003D        kpDebounce@newRead 003F  
               ??_kpInit 0007                 ??_kpRead 0003                 ??_soInit 0007  
            __pbssCOMRAM 003D              ?_pushNibble 000A               pinMode@pin 0001  
      __size_of_rgbColor 00B0                _delayMili 1D08                _main$1346 001D  
              _main$1347 0021                 ?___lldiv 0001        __size_of_ssdDigit 0058  
               ?___llmod 000E           _PulseClockData 1D62     __end_of_PulseEnClock 1D62  
            _digitalRead 1558                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001              __smallconst 0600                 ?_rgbInit 0001  
               ?_pinMode 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
            _lcdPosition 1C9C             ??_delayMicro 0003               ?_delayMili 0001  
 __end_of_PulseClockData 1D8C      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _ssdUpdate 13EC             ??_kpDebounce 000A                main@cont2 0035  
        lcdCommand@value 000E                main@tecla 0033       __end_of_delayMicro 1E10  
     __end_of_lcdCommand 1DD0               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 17F8                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 000F          ?_PulseClockData 0001               ?_ssdUpdate 0001  
__size_of_pulseEnablePin 0042         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4         __size_of_rgbInit 003E  
       __size_of_pinMode 024E                 __ptext10 1D08                 __ptext11 1DD0  
               __ptext20 1B90                 __ptext12 1A88                 __ptext21 1D38  
               __ptext13 1BDE                 __ptext22 1D62                 __ptext14 1E0E  
               __ptext23 119E                 __ptext15 1E04                 __ptext24 1558  
               __ptext16 1CD6                 __ptext25 1A00                 __ptext17 1C5E  
               __ptext26 195C                 __ptext18 0F50                 __ptext19 16C2  
       __size_of_soWrite 004E         __size_of_ssdInit 0056                 _rgbColor 18AC  
          __size_of_main 0934              ??_delayMili 0003    __size_of_PulseEnClock 002A  
               _ssdDigit 1AE2              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007                 _pushByte 1A88                 main@cont 0039  
               main@nled 002A             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 1D38        digitalWrite@value 0003  
       ___lldiv@dividend 0001                 soWrite@i 0009              ??_ssdUpdate 000A  
     __end_of_pushNibble 1DB2             ?_digitalRead 0001         ___lldiv@quotient 0009  
            kpDebounce@i 000D           ??_digitalWrite 0005             ?_lcdPosition 000F  
        digitalWrite@pin 0001  
